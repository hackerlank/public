// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: game_protocol.proto

#ifndef PROTOBUF_game_5fprotocol_2eproto__INCLUDED
#define PROTOBUF_game_5fprotocol_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_util.h>
// @@protoc_insertion_point(includes)

namespace proto3 {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_game_5fprotocol_2eproto();
void protobuf_AssignDesc_game_5fprotocol_2eproto();
void protobuf_ShutdownFile_game_5fprotocol_2eproto();

class MsgBase;
class MsgCLEnter;
class MsgCNCreate;
class MsgCNDiscard;
class MsgCNDismissA;
class MsgCNDismissB;
class MsgCNEnter;
class MsgCNJoin;
class MsgCNMeld;
class MsgCSLogin;
class MsgLCEnter;
class MsgNCCreate;
class MsgNCDiscard;
class MsgNCDismissA;
class MsgNCDismissB;
class MsgNCEnter;
class MsgNCFinish;
class MsgNCJoin;
class MsgNCMeld;
class MsgNCSettle;
class MsgNCStart;
class MsgSCLogin;
class achievement_t;
class game_service_t;
class game_t;
class lobby_t;
class player_t;
class user_t;

enum pb_enum {
  UNKNOWN = 0,
  NONE = 0,
  SUCCEESS = 0,
  DEV_PC = 0,
  DEV_PS4 = 1,
  DEV_XBOX = 2,
  DEV_IOS = 3,
  DEV_ANDROID = 4,
  DEV_WINPHONE = 5,
  GAME_CARD = 10,
  GAME_CHESS = 11,
  RULE_GENERIC = 0,
  CATEGORY_NORMAL = 0,
  CATEGORY_EASY = 1,
  CATEGORY_HARD = 2,
  ACHIEVEMENT_BEST = 10,
  ERR_FAILED = 100,
  ERR_CANCELLED = 101,
  ERR_PROTOCOL = 102,
  ERR_PARAM = 103,
  ERR_DUPLICATED = 104,
  ERR_UNKNOWN = 999,
  pb_enum_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  pb_enum_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool pb_enum_IsValid(int value);
const pb_enum pb_enum_MIN = UNKNOWN;
const pb_enum pb_enum_MAX = ERR_UNKNOWN;
const int pb_enum_ARRAYSIZE = pb_enum_MAX + 1;

// ===================================================================

class user_t : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:proto3.user_t) */ {
 public:
  user_t();
  virtual ~user_t();

  user_t(const user_t& from);

  inline user_t& operator=(const user_t& from) {
    CopyFrom(from);
    return *this;
  }

  static const user_t& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const user_t* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(user_t* other);

  // implements Message ----------------------------------------------

  inline user_t* New() const { return New(NULL); }

  user_t* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const user_t& from);
  void MergeFrom(const user_t& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(user_t* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string uid = 1;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  const ::std::string& uid() const;
  void set_uid(const ::std::string& value);
  void set_uid(const char* value);
  void set_uid(const char* value, size_t size);
  ::std::string* mutable_uid();
  ::std::string* release_uid();
  void set_allocated_uid(::std::string* uid);

  // optional uint32 flag = 2;
  void clear_flag();
  static const int kFlagFieldNumber = 2;
  ::google::protobuf::uint32 flag() const;
  void set_flag(::google::protobuf::uint32 value);

  // optional .proto3.pb_enum dev_type = 3;
  void clear_dev_type();
  static const int kDevTypeFieldNumber = 3;
  ::proto3::pb_enum dev_type() const;
  void set_dev_type(::proto3::pb_enum value);

  // optional string account = 4;
  void clear_account();
  static const int kAccountFieldNumber = 4;
  const ::std::string& account() const;
  void set_account(const ::std::string& value);
  void set_account(const char* value);
  void set_account(const char* value, size_t size);
  ::std::string* mutable_account();
  ::std::string* release_account();
  void set_allocated_account(::std::string* account);

  // optional string name = 5;
  void clear_name();
  static const int kNameFieldNumber = 5;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional string pswd = 6;
  void clear_pswd();
  static const int kPswdFieldNumber = 6;
  const ::std::string& pswd() const;
  void set_pswd(const ::std::string& value);
  void set_pswd(const char* value);
  void set_pswd(const char* value, size_t size);
  ::std::string* mutable_pswd();
  ::std::string* release_pswd();
  void set_allocated_pswd(::std::string* pswd);

  // optional uint32 gender = 7;
  void clear_gender();
  static const int kGenderFieldNumber = 7;
  ::google::protobuf::uint32 gender() const;
  void set_gender(::google::protobuf::uint32 value);

  // optional uint32 age = 8;
  void clear_age();
  static const int kAgeFieldNumber = 8;
  ::google::protobuf::uint32 age() const;
  void set_age(::google::protobuf::uint32 value);

  // optional string udid = 9;
  void clear_udid();
  static const int kUdidFieldNumber = 9;
  const ::std::string& udid() const;
  void set_udid(const ::std::string& value);
  void set_udid(const char* value);
  void set_udid(const char* value, size_t size);
  ::std::string* mutable_udid();
  ::std::string* release_udid();
  void set_allocated_udid(::std::string* udid);

  // @@protoc_insertion_point(class_scope:proto3.user_t)
 private:

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr uid_;
  ::google::protobuf::uint32 flag_;
  int dev_type_;
  ::google::protobuf::internal::ArenaStringPtr account_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr pswd_;
  ::google::protobuf::uint32 gender_;
  ::google::protobuf::uint32 age_;
  ::google::protobuf::internal::ArenaStringPtr udid_;
  mutable int _cached_size_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_game_5fprotocol_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_game_5fprotocol_2eproto();
  #endif
  friend void protobuf_AssignDesc_game_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_game_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static user_t* default_instance_;
};
// -------------------------------------------------------------------

class player_t : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:proto3.player_t) */ {
 public:
  player_t();
  virtual ~player_t();

  player_t(const player_t& from);

  inline player_t& operator=(const player_t& from) {
    CopyFrom(from);
    return *this;
  }

  static const player_t& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const player_t* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(player_t* other);

  // implements Message ----------------------------------------------

  inline player_t* New() const { return New(NULL); }

  player_t* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const player_t& from);
  void MergeFrom(const player_t& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(player_t* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string uid = 1;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  const ::std::string& uid() const;
  void set_uid(const ::std::string& value);
  void set_uid(const char* value);
  void set_uid(const char* value, size_t size);
  ::std::string* mutable_uid();
  ::std::string* release_uid();
  void set_allocated_uid(::std::string* uid);

  // optional uint32 pid = 2;
  void clear_pid();
  static const int kPidFieldNumber = 2;
  ::google::protobuf::uint32 pid() const;
  void set_pid(::google::protobuf::uint32 value);

  // optional uint32 level = 3;
  void clear_level();
  static const int kLevelFieldNumber = 3;
  ::google::protobuf::uint32 level() const;
  void set_level(::google::protobuf::uint32 value);

  // optional uint32 xp = 4;
  void clear_xp();
  static const int kXpFieldNumber = 4;
  ::google::protobuf::uint32 xp() const;
  void set_xp(::google::protobuf::uint32 value);

  // optional uint32 currency = 5;
  void clear_currency();
  static const int kCurrencyFieldNumber = 5;
  ::google::protobuf::uint32 currency() const;
  void set_currency(::google::protobuf::uint32 value);

  // optional uint32 energy = 6;
  void clear_energy();
  static const int kEnergyFieldNumber = 6;
  ::google::protobuf::uint32 energy() const;
  void set_energy(::google::protobuf::uint32 value);

  // repeated .proto3.achievement_t achievements = 7;
  int achievements_size() const;
  void clear_achievements();
  static const int kAchievementsFieldNumber = 7;
  const ::proto3::achievement_t& achievements(int index) const;
  ::proto3::achievement_t* mutable_achievements(int index);
  ::proto3::achievement_t* add_achievements();
  ::google::protobuf::RepeatedPtrField< ::proto3::achievement_t >*
      mutable_achievements();
  const ::google::protobuf::RepeatedPtrField< ::proto3::achievement_t >&
      achievements() const;

  // @@protoc_insertion_point(class_scope:proto3.player_t)
 private:

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr uid_;
  ::google::protobuf::uint32 pid_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 xp_;
  ::google::protobuf::uint32 currency_;
  ::google::protobuf::RepeatedPtrField< ::proto3::achievement_t > achievements_;
  ::google::protobuf::uint32 energy_;
  mutable int _cached_size_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_game_5fprotocol_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_game_5fprotocol_2eproto();
  #endif
  friend void protobuf_AssignDesc_game_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_game_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static player_t* default_instance_;
};
// -------------------------------------------------------------------

class game_t : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:proto3.game_t) */ {
 public:
  game_t();
  virtual ~game_t();

  game_t(const game_t& from);

  inline game_t& operator=(const game_t& from) {
    CopyFrom(from);
    return *this;
  }

  static const game_t& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const game_t* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(game_t* other);

  // implements Message ----------------------------------------------

  inline game_t* New() const { return New(NULL); }

  game_t* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const game_t& from);
  void MergeFrom(const game_t& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(game_t* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string uid = 1;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  const ::std::string& uid() const;
  void set_uid(const ::std::string& value);
  void set_uid(const char* value);
  void set_uid(const char* value, size_t size);
  ::std::string* mutable_uid();
  ::std::string* release_uid();
  void set_allocated_uid(::std::string* uid);

  // optional uint32 gid = 2;
  void clear_gid();
  static const int kGidFieldNumber = 2;
  ::google::protobuf::uint32 gid() const;
  void set_gid(::google::protobuf::uint32 value);

  // optional uint32 win = 3;
  void clear_win();
  static const int kWinFieldNumber = 3;
  ::google::protobuf::uint32 win() const;
  void set_win(::google::protobuf::uint32 value);

  // optional uint32 lose = 4;
  void clear_lose();
  static const int kLoseFieldNumber = 4;
  ::google::protobuf::uint32 lose() const;
  void set_lose(::google::protobuf::uint32 value);

  // optional uint32 draw = 5;
  void clear_draw();
  static const int kDrawFieldNumber = 5;
  ::google::protobuf::uint32 draw() const;
  void set_draw(::google::protobuf::uint32 value);

  // optional uint32 score = 6;
  void clear_score();
  static const int kScoreFieldNumber = 6;
  ::google::protobuf::uint32 score() const;
  void set_score(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto3.game_t)
 private:

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr uid_;
  ::google::protobuf::uint32 gid_;
  ::google::protobuf::uint32 win_;
  ::google::protobuf::uint32 lose_;
  ::google::protobuf::uint32 draw_;
  ::google::protobuf::uint32 score_;
  mutable int _cached_size_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_game_5fprotocol_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_game_5fprotocol_2eproto();
  #endif
  friend void protobuf_AssignDesc_game_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_game_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static game_t* default_instance_;
};
// -------------------------------------------------------------------

class achievement_t : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:proto3.achievement_t) */ {
 public:
  achievement_t();
  virtual ~achievement_t();

  achievement_t(const achievement_t& from);

  inline achievement_t& operator=(const achievement_t& from) {
    CopyFrom(from);
    return *this;
  }

  static const achievement_t& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const achievement_t* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(achievement_t* other);

  // implements Message ----------------------------------------------

  inline achievement_t* New() const { return New(NULL); }

  achievement_t* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const achievement_t& from);
  void MergeFrom(const achievement_t& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(achievement_t* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto3.pb_enum type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::proto3::pb_enum type() const;
  void set_type(::proto3::pb_enum value);

  // optional string name = 2;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional uint32 value = 3;
  void clear_value();
  static const int kValueFieldNumber = 3;
  ::google::protobuf::uint32 value() const;
  void set_value(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto3.achievement_t)
 private:

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  int type_;
  ::google::protobuf::uint32 value_;
  mutable int _cached_size_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_game_5fprotocol_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_game_5fprotocol_2eproto();
  #endif
  friend void protobuf_AssignDesc_game_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_game_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static achievement_t* default_instance_;
};
// -------------------------------------------------------------------

class game_service_t : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:proto3.game_service_t) */ {
 public:
  game_service_t();
  virtual ~game_service_t();

  game_service_t(const game_service_t& from);

  inline game_service_t& operator=(const game_service_t& from) {
    CopyFrom(from);
    return *this;
  }

  static const game_service_t& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const game_service_t* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(game_service_t* other);

  // implements Message ----------------------------------------------

  inline game_service_t* New() const { return New(NULL); }

  game_service_t* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const game_service_t& from);
  void MergeFrom(const game_service_t& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(game_service_t* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // optional uint32 version = 2;
  void clear_version();
  static const int kVersionFieldNumber = 2;
  ::google::protobuf::uint32 version() const;
  void set_version(::google::protobuf::uint32 value);

  // optional string ip = 3;
  void clear_ip();
  static const int kIpFieldNumber = 3;
  const ::std::string& ip() const;
  void set_ip(const ::std::string& value);
  void set_ip(const char* value);
  void set_ip(const char* value, size_t size);
  ::std::string* mutable_ip();
  ::std::string* release_ip();
  void set_allocated_ip(::std::string* ip);

  // optional uint32 port = 4;
  void clear_port();
  static const int kPortFieldNumber = 4;
  ::google::protobuf::uint32 port() const;
  void set_port(::google::protobuf::uint32 value);

  // optional uint32 occupied = 5;
  void clear_occupied();
  static const int kOccupiedFieldNumber = 5;
  ::google::protobuf::uint32 occupied() const;
  void set_occupied(::google::protobuf::uint32 value);

  // optional uint32 capacity = 6;
  void clear_capacity();
  static const int kCapacityFieldNumber = 6;
  ::google::protobuf::uint32 capacity() const;
  void set_capacity(::google::protobuf::uint32 value);

  // optional string desc = 7;
  void clear_desc();
  static const int kDescFieldNumber = 7;
  const ::std::string& desc() const;
  void set_desc(const ::std::string& value);
  void set_desc(const char* value);
  void set_desc(const char* value, size_t size);
  ::std::string* mutable_desc();
  ::std::string* release_desc();
  void set_allocated_desc(::std::string* desc);

  // optional uint32 status = 8;
  void clear_status();
  static const int kStatusFieldNumber = 8;
  ::google::protobuf::uint32 status() const;
  void set_status(::google::protobuf::uint32 value);

  // optional uint32 openning_time = 9;
  void clear_openning_time();
  static const int kOpenningTimeFieldNumber = 9;
  ::google::protobuf::uint32 openning_time() const;
  void set_openning_time(::google::protobuf::uint32 value);

  // optional uint32 maintain_start = 10;
  void clear_maintain_start();
  static const int kMaintainStartFieldNumber = 10;
  ::google::protobuf::uint32 maintain_start() const;
  void set_maintain_start(::google::protobuf::uint32 value);

  // optional uint32 maintain_end = 11;
  void clear_maintain_end();
  static const int kMaintainEndFieldNumber = 11;
  ::google::protobuf::uint32 maintain_end() const;
  void set_maintain_end(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto3.game_service_t)
 private:

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  bool _is_default_instance_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 version_;
  ::google::protobuf::internal::ArenaStringPtr ip_;
  ::google::protobuf::uint32 port_;
  ::google::protobuf::uint32 occupied_;
  ::google::protobuf::internal::ArenaStringPtr desc_;
  ::google::protobuf::uint32 capacity_;
  ::google::protobuf::uint32 status_;
  ::google::protobuf::uint32 openning_time_;
  ::google::protobuf::uint32 maintain_start_;
  ::google::protobuf::uint32 maintain_end_;
  mutable int _cached_size_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_game_5fprotocol_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_game_5fprotocol_2eproto();
  #endif
  friend void protobuf_AssignDesc_game_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_game_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static game_service_t* default_instance_;
};
// -------------------------------------------------------------------

class lobby_t : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:proto3.lobby_t) */ {
 public:
  lobby_t();
  virtual ~lobby_t();

  lobby_t(const lobby_t& from);

  inline lobby_t& operator=(const lobby_t& from) {
    CopyFrom(from);
    return *this;
  }

  static const lobby_t& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const lobby_t* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(lobby_t* other);

  // implements Message ----------------------------------------------

  inline lobby_t* New() const { return New(NULL); }

  lobby_t* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const lobby_t& from);
  void MergeFrom(const lobby_t& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(lobby_t* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 version = 1;
  void clear_version();
  static const int kVersionFieldNumber = 1;
  ::google::protobuf::uint32 version() const;
  void set_version(::google::protobuf::uint32 value);

  // optional string ip = 2;
  void clear_ip();
  static const int kIpFieldNumber = 2;
  const ::std::string& ip() const;
  void set_ip(const ::std::string& value);
  void set_ip(const char* value);
  void set_ip(const char* value, size_t size);
  ::std::string* mutable_ip();
  ::std::string* release_ip();
  void set_allocated_ip(::std::string* ip);

  // optional uint32 port = 3;
  void clear_port();
  static const int kPortFieldNumber = 3;
  ::google::protobuf::uint32 port() const;
  void set_port(::google::protobuf::uint32 value);

  // optional uint32 occupied = 4;
  void clear_occupied();
  static const int kOccupiedFieldNumber = 4;
  ::google::protobuf::uint32 occupied() const;
  void set_occupied(::google::protobuf::uint32 value);

  // optional uint32 capacity = 5;
  void clear_capacity();
  static const int kCapacityFieldNumber = 5;
  ::google::protobuf::uint32 capacity() const;
  void set_capacity(::google::protobuf::uint32 value);

  // optional string desc = 6;
  void clear_desc();
  static const int kDescFieldNumber = 6;
  const ::std::string& desc() const;
  void set_desc(const ::std::string& value);
  void set_desc(const char* value);
  void set_desc(const char* value, size_t size);
  ::std::string* mutable_desc();
  ::std::string* release_desc();
  void set_allocated_desc(::std::string* desc);

  // optional string bulletin = 7;
  void clear_bulletin();
  static const int kBulletinFieldNumber = 7;
  const ::std::string& bulletin() const;
  void set_bulletin(const ::std::string& value);
  void set_bulletin(const char* value);
  void set_bulletin(const char* value, size_t size);
  ::std::string* mutable_bulletin();
  ::std::string* release_bulletin();
  void set_allocated_bulletin(::std::string* bulletin);

  // optional uint32 status = 8;
  void clear_status();
  static const int kStatusFieldNumber = 8;
  ::google::protobuf::uint32 status() const;
  void set_status(::google::protobuf::uint32 value);

  // optional uint32 maintain_start = 9;
  void clear_maintain_start();
  static const int kMaintainStartFieldNumber = 9;
  ::google::protobuf::uint32 maintain_start() const;
  void set_maintain_start(::google::protobuf::uint32 value);

  // optional uint32 maintain_end = 10;
  void clear_maintain_end();
  static const int kMaintainEndFieldNumber = 10;
  ::google::protobuf::uint32 maintain_end() const;
  void set_maintain_end(::google::protobuf::uint32 value);

  // optional uint32 time_zone = 11;
  void clear_time_zone();
  static const int kTimeZoneFieldNumber = 11;
  ::google::protobuf::uint32 time_zone() const;
  void set_time_zone(::google::protobuf::uint32 value);

  // repeated .proto3.game_service_t games = 12;
  int games_size() const;
  void clear_games();
  static const int kGamesFieldNumber = 12;
  const ::proto3::game_service_t& games(int index) const;
  ::proto3::game_service_t* mutable_games(int index);
  ::proto3::game_service_t* add_games();
  ::google::protobuf::RepeatedPtrField< ::proto3::game_service_t >*
      mutable_games();
  const ::google::protobuf::RepeatedPtrField< ::proto3::game_service_t >&
      games() const;

  // @@protoc_insertion_point(class_scope:proto3.lobby_t)
 private:

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr ip_;
  ::google::protobuf::uint32 version_;
  ::google::protobuf::uint32 port_;
  ::google::protobuf::uint32 occupied_;
  ::google::protobuf::uint32 capacity_;
  ::google::protobuf::internal::ArenaStringPtr desc_;
  ::google::protobuf::internal::ArenaStringPtr bulletin_;
  ::google::protobuf::uint32 status_;
  ::google::protobuf::uint32 maintain_start_;
  ::google::protobuf::uint32 maintain_end_;
  ::google::protobuf::uint32 time_zone_;
  ::google::protobuf::RepeatedPtrField< ::proto3::game_service_t > games_;
  mutable int _cached_size_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_game_5fprotocol_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_game_5fprotocol_2eproto();
  #endif
  friend void protobuf_AssignDesc_game_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_game_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static lobby_t* default_instance_;
};
// -------------------------------------------------------------------

class MsgBase : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:proto3.MsgBase) */ {
 public:
  MsgBase();
  virtual ~MsgBase();

  MsgBase(const MsgBase& from);

  inline MsgBase& operator=(const MsgBase& from) {
    CopyFrom(from);
    return *this;
  }

  static const MsgBase& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const MsgBase* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(MsgBase* other);

  // implements Message ----------------------------------------------

  inline MsgBase* New() const { return New(NULL); }

  MsgBase* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const MsgBase& from);
  void MergeFrom(const MsgBase& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MsgBase* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 mid = 1;
  void clear_mid();
  static const int kMidFieldNumber = 1;
  ::google::protobuf::uint32 mid() const;
  void set_mid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto3.MsgBase)
 private:

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  bool _is_default_instance_;
  ::google::protobuf::uint32 mid_;
  mutable int _cached_size_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_game_5fprotocol_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_game_5fprotocol_2eproto();
  #endif
  friend void protobuf_AssignDesc_game_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_game_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static MsgBase* default_instance_;
};
// -------------------------------------------------------------------

class MsgCSLogin : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:proto3.MsgCSLogin) */ {
 public:
  MsgCSLogin();
  virtual ~MsgCSLogin();

  MsgCSLogin(const MsgCSLogin& from);

  inline MsgCSLogin& operator=(const MsgCSLogin& from) {
    CopyFrom(from);
    return *this;
  }

  static const MsgCSLogin& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const MsgCSLogin* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(MsgCSLogin* other);

  // implements Message ----------------------------------------------

  inline MsgCSLogin* New() const { return New(NULL); }

  MsgCSLogin* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const MsgCSLogin& from);
  void MergeFrom(const MsgCSLogin& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MsgCSLogin* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 mid = 1;
  void clear_mid();
  static const int kMidFieldNumber = 1;
  ::google::protobuf::uint32 mid() const;
  void set_mid(::google::protobuf::uint32 value);

  // optional uint32 version = 3;
  void clear_version();
  static const int kVersionFieldNumber = 3;
  ::google::protobuf::uint32 version() const;
  void set_version(::google::protobuf::uint32 value);

  // optional .proto3.user_t user = 2;
  bool has_user() const;
  void clear_user();
  static const int kUserFieldNumber = 2;
  const ::proto3::user_t& user() const;
  ::proto3::user_t* mutable_user();
  ::proto3::user_t* release_user();
  void set_allocated_user(::proto3::user_t* user);

  // @@protoc_insertion_point(class_scope:proto3.MsgCSLogin)
 private:

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  bool _is_default_instance_;
  ::google::protobuf::uint32 mid_;
  ::google::protobuf::uint32 version_;
  ::proto3::user_t* user_;
  mutable int _cached_size_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_game_5fprotocol_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_game_5fprotocol_2eproto();
  #endif
  friend void protobuf_AssignDesc_game_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_game_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static MsgCSLogin* default_instance_;
};
// -------------------------------------------------------------------

class MsgSCLogin : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:proto3.MsgSCLogin) */ {
 public:
  MsgSCLogin();
  virtual ~MsgSCLogin();

  MsgSCLogin(const MsgSCLogin& from);

  inline MsgSCLogin& operator=(const MsgSCLogin& from) {
    CopyFrom(from);
    return *this;
  }

  static const MsgSCLogin& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const MsgSCLogin* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(MsgSCLogin* other);

  // implements Message ----------------------------------------------

  inline MsgSCLogin* New() const { return New(NULL); }

  MsgSCLogin* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const MsgSCLogin& from);
  void MergeFrom(const MsgSCLogin& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MsgSCLogin* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 mid = 1;
  void clear_mid();
  static const int kMidFieldNumber = 1;
  ::google::protobuf::uint32 mid() const;
  void set_mid(::google::protobuf::uint32 value);

  // optional string uid = 2;
  void clear_uid();
  static const int kUidFieldNumber = 2;
  const ::std::string& uid() const;
  void set_uid(const ::std::string& value);
  void set_uid(const char* value);
  void set_uid(const char* value, size_t size);
  ::std::string* mutable_uid();
  ::std::string* release_uid();
  void set_allocated_uid(::std::string* uid);

  // optional uint32 version = 3;
  void clear_version();
  static const int kVersionFieldNumber = 3;
  ::google::protobuf::uint32 version() const;
  void set_version(::google::protobuf::uint32 value);

  // optional uint32 key = 4;
  void clear_key();
  static const int kKeyFieldNumber = 4;
  ::google::protobuf::uint32 key() const;
  void set_key(::google::protobuf::uint32 value);

  // optional uint64 session = 5;
  void clear_session();
  static const int kSessionFieldNumber = 5;
  ::google::protobuf::uint64 session() const;
  void set_session(::google::protobuf::uint64 value);

  // optional string ip = 6;
  void clear_ip();
  static const int kIpFieldNumber = 6;
  const ::std::string& ip() const;
  void set_ip(const ::std::string& value);
  void set_ip(const char* value);
  void set_ip(const char* value, size_t size);
  ::std::string* mutable_ip();
  ::std::string* release_ip();
  void set_allocated_ip(::std::string* ip);

  // optional uint32 port = 7;
  void clear_port();
  static const int kPortFieldNumber = 7;
  ::google::protobuf::uint32 port() const;
  void set_port(::google::protobuf::uint32 value);

  // optional .proto3.pb_enum result = 8;
  void clear_result();
  static const int kResultFieldNumber = 8;
  ::proto3::pb_enum result() const;
  void set_result(::proto3::pb_enum value);

  // @@protoc_insertion_point(class_scope:proto3.MsgSCLogin)
 private:

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr uid_;
  ::google::protobuf::uint32 mid_;
  ::google::protobuf::uint32 version_;
  ::google::protobuf::uint64 session_;
  ::google::protobuf::uint32 key_;
  ::google::protobuf::uint32 port_;
  ::google::protobuf::internal::ArenaStringPtr ip_;
  int result_;
  mutable int _cached_size_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_game_5fprotocol_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_game_5fprotocol_2eproto();
  #endif
  friend void protobuf_AssignDesc_game_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_game_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static MsgSCLogin* default_instance_;
};
// -------------------------------------------------------------------

class MsgCLEnter : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:proto3.MsgCLEnter) */ {
 public:
  MsgCLEnter();
  virtual ~MsgCLEnter();

  MsgCLEnter(const MsgCLEnter& from);

  inline MsgCLEnter& operator=(const MsgCLEnter& from) {
    CopyFrom(from);
    return *this;
  }

  static const MsgCLEnter& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const MsgCLEnter* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(MsgCLEnter* other);

  // implements Message ----------------------------------------------

  inline MsgCLEnter* New() const { return New(NULL); }

  MsgCLEnter* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const MsgCLEnter& from);
  void MergeFrom(const MsgCLEnter& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MsgCLEnter* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 mid = 1;
  void clear_mid();
  static const int kMidFieldNumber = 1;
  ::google::protobuf::uint32 mid() const;
  void set_mid(::google::protobuf::uint32 value);

  // optional string uid = 2;
  void clear_uid();
  static const int kUidFieldNumber = 2;
  const ::std::string& uid() const;
  void set_uid(const ::std::string& value);
  void set_uid(const char* value);
  void set_uid(const char* value, size_t size);
  ::std::string* mutable_uid();
  ::std::string* release_uid();
  void set_allocated_uid(::std::string* uid);

  // optional uint32 version = 3;
  void clear_version();
  static const int kVersionFieldNumber = 3;
  ::google::protobuf::uint32 version() const;
  void set_version(::google::protobuf::uint32 value);

  // optional uint32 key = 4;
  void clear_key();
  static const int kKeyFieldNumber = 4;
  ::google::protobuf::uint32 key() const;
  void set_key(::google::protobuf::uint32 value);

  // optional uint64 session = 5;
  void clear_session();
  static const int kSessionFieldNumber = 5;
  ::google::protobuf::uint64 session() const;
  void set_session(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto3.MsgCLEnter)
 private:

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr uid_;
  ::google::protobuf::uint32 mid_;
  ::google::protobuf::uint32 version_;
  ::google::protobuf::uint64 session_;
  ::google::protobuf::uint32 key_;
  mutable int _cached_size_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_game_5fprotocol_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_game_5fprotocol_2eproto();
  #endif
  friend void protobuf_AssignDesc_game_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_game_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static MsgCLEnter* default_instance_;
};
// -------------------------------------------------------------------

class MsgLCEnter : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:proto3.MsgLCEnter) */ {
 public:
  MsgLCEnter();
  virtual ~MsgLCEnter();

  MsgLCEnter(const MsgLCEnter& from);

  inline MsgLCEnter& operator=(const MsgLCEnter& from) {
    CopyFrom(from);
    return *this;
  }

  static const MsgLCEnter& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const MsgLCEnter* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(MsgLCEnter* other);

  // implements Message ----------------------------------------------

  inline MsgLCEnter* New() const { return New(NULL); }

  MsgLCEnter* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const MsgLCEnter& from);
  void MergeFrom(const MsgLCEnter& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MsgLCEnter* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 mid = 1;
  void clear_mid();
  static const int kMidFieldNumber = 1;
  ::google::protobuf::uint32 mid() const;
  void set_mid(::google::protobuf::uint32 value);

  // optional .proto3.player_t player = 2;
  bool has_player() const;
  void clear_player();
  static const int kPlayerFieldNumber = 2;
  const ::proto3::player_t& player() const;
  ::proto3::player_t* mutable_player();
  ::proto3::player_t* release_player();
  void set_allocated_player(::proto3::player_t* player);

  // optional .proto3.lobby_t lobby = 3;
  bool has_lobby() const;
  void clear_lobby();
  static const int kLobbyFieldNumber = 3;
  const ::proto3::lobby_t& lobby() const;
  ::proto3::lobby_t* mutable_lobby();
  ::proto3::lobby_t* release_lobby();
  void set_allocated_lobby(::proto3::lobby_t* lobby);

  // optional .proto3.pb_enum result = 4;
  void clear_result();
  static const int kResultFieldNumber = 4;
  ::proto3::pb_enum result() const;
  void set_result(::proto3::pb_enum value);

  // @@protoc_insertion_point(class_scope:proto3.MsgLCEnter)
 private:

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  bool _is_default_instance_;
  ::proto3::player_t* player_;
  ::google::protobuf::uint32 mid_;
  int result_;
  ::proto3::lobby_t* lobby_;
  mutable int _cached_size_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_game_5fprotocol_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_game_5fprotocol_2eproto();
  #endif
  friend void protobuf_AssignDesc_game_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_game_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static MsgLCEnter* default_instance_;
};
// -------------------------------------------------------------------

class MsgCNEnter : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:proto3.MsgCNEnter) */ {
 public:
  MsgCNEnter();
  virtual ~MsgCNEnter();

  MsgCNEnter(const MsgCNEnter& from);

  inline MsgCNEnter& operator=(const MsgCNEnter& from) {
    CopyFrom(from);
    return *this;
  }

  static const MsgCNEnter& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const MsgCNEnter* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(MsgCNEnter* other);

  // implements Message ----------------------------------------------

  inline MsgCNEnter* New() const { return New(NULL); }

  MsgCNEnter* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const MsgCNEnter& from);
  void MergeFrom(const MsgCNEnter& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MsgCNEnter* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 mid = 1;
  void clear_mid();
  static const int kMidFieldNumber = 1;
  ::google::protobuf::uint32 mid() const;
  void set_mid(::google::protobuf::uint32 value);

  // optional string uid = 2;
  void clear_uid();
  static const int kUidFieldNumber = 2;
  const ::std::string& uid() const;
  void set_uid(const ::std::string& value);
  void set_uid(const char* value);
  void set_uid(const char* value, size_t size);
  ::std::string* mutable_uid();
  ::std::string* release_uid();
  void set_allocated_uid(::std::string* uid);

  // optional uint32 version = 3;
  void clear_version();
  static const int kVersionFieldNumber = 3;
  ::google::protobuf::uint32 version() const;
  void set_version(::google::protobuf::uint32 value);

  // optional uint32 key = 4;
  void clear_key();
  static const int kKeyFieldNumber = 4;
  ::google::protobuf::uint32 key() const;
  void set_key(::google::protobuf::uint32 value);

  // optional uint64 session = 5;
  void clear_session();
  static const int kSessionFieldNumber = 5;
  ::google::protobuf::uint64 session() const;
  void set_session(::google::protobuf::uint64 value);

  // optional .proto3.pb_enum service = 6;
  void clear_service();
  static const int kServiceFieldNumber = 6;
  ::proto3::pb_enum service() const;
  void set_service(::proto3::pb_enum value);

  // @@protoc_insertion_point(class_scope:proto3.MsgCNEnter)
 private:

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr uid_;
  ::google::protobuf::uint32 mid_;
  ::google::protobuf::uint32 version_;
  ::google::protobuf::uint64 session_;
  ::google::protobuf::uint32 key_;
  int service_;
  mutable int _cached_size_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_game_5fprotocol_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_game_5fprotocol_2eproto();
  #endif
  friend void protobuf_AssignDesc_game_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_game_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static MsgCNEnter* default_instance_;
};
// -------------------------------------------------------------------

class MsgNCEnter : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:proto3.MsgNCEnter) */ {
 public:
  MsgNCEnter();
  virtual ~MsgNCEnter();

  MsgNCEnter(const MsgNCEnter& from);

  inline MsgNCEnter& operator=(const MsgNCEnter& from) {
    CopyFrom(from);
    return *this;
  }

  static const MsgNCEnter& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const MsgNCEnter* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(MsgNCEnter* other);

  // implements Message ----------------------------------------------

  inline MsgNCEnter* New() const { return New(NULL); }

  MsgNCEnter* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const MsgNCEnter& from);
  void MergeFrom(const MsgNCEnter& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MsgNCEnter* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 mid = 1;
  void clear_mid();
  static const int kMidFieldNumber = 1;
  ::google::protobuf::uint32 mid() const;
  void set_mid(::google::protobuf::uint32 value);

  // optional .proto3.game_t game_info = 2;
  bool has_game_info() const;
  void clear_game_info();
  static const int kGameInfoFieldNumber = 2;
  const ::proto3::game_t& game_info() const;
  ::proto3::game_t* mutable_game_info();
  ::proto3::game_t* release_game_info();
  void set_allocated_game_info(::proto3::game_t* game_info);

  // optional .proto3.pb_enum result = 3;
  void clear_result();
  static const int kResultFieldNumber = 3;
  ::proto3::pb_enum result() const;
  void set_result(::proto3::pb_enum value);

  // @@protoc_insertion_point(class_scope:proto3.MsgNCEnter)
 private:

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  bool _is_default_instance_;
  ::proto3::game_t* game_info_;
  ::google::protobuf::uint32 mid_;
  int result_;
  mutable int _cached_size_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_game_5fprotocol_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_game_5fprotocol_2eproto();
  #endif
  friend void protobuf_AssignDesc_game_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_game_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static MsgNCEnter* default_instance_;
};
// -------------------------------------------------------------------

class MsgCNCreate : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:proto3.MsgCNCreate) */ {
 public:
  MsgCNCreate();
  virtual ~MsgCNCreate();

  MsgCNCreate(const MsgCNCreate& from);

  inline MsgCNCreate& operator=(const MsgCNCreate& from) {
    CopyFrom(from);
    return *this;
  }

  static const MsgCNCreate& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const MsgCNCreate* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(MsgCNCreate* other);

  // implements Message ----------------------------------------------

  inline MsgCNCreate* New() const { return New(NULL); }

  MsgCNCreate* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const MsgCNCreate& from);
  void MergeFrom(const MsgCNCreate& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MsgCNCreate* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 mid = 1;
  void clear_mid();
  static const int kMidFieldNumber = 1;
  ::google::protobuf::uint32 mid() const;
  void set_mid(::google::protobuf::uint32 value);

  // optional .proto3.pb_enum rule = 2;
  void clear_rule();
  static const int kRuleFieldNumber = 2;
  ::proto3::pb_enum rule() const;
  void set_rule(::proto3::pb_enum value);

  // optional .proto3.pb_enum category = 3;
  void clear_category();
  static const int kCategoryFieldNumber = 3;
  ::proto3::pb_enum category() const;
  void set_category(::proto3::pb_enum value);

  // optional uint32 key = 4;
  void clear_key();
  static const int kKeyFieldNumber = 4;
  ::google::protobuf::uint32 key() const;
  void set_key(::google::protobuf::uint32 value);

  // optional uint32 robot = 5;
  void clear_robot();
  static const int kRobotFieldNumber = 5;
  ::google::protobuf::uint32 robot() const;
  void set_robot(::google::protobuf::uint32 value);

  // optional uint32 parameter = 6;
  void clear_parameter();
  static const int kParameterFieldNumber = 6;
  ::google::protobuf::uint32 parameter() const;
  void set_parameter(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto3.MsgCNCreate)
 private:

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  bool _is_default_instance_;
  ::google::protobuf::uint32 mid_;
  int rule_;
  int category_;
  ::google::protobuf::uint32 key_;
  ::google::protobuf::uint32 robot_;
  ::google::protobuf::uint32 parameter_;
  mutable int _cached_size_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_game_5fprotocol_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_game_5fprotocol_2eproto();
  #endif
  friend void protobuf_AssignDesc_game_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_game_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static MsgCNCreate* default_instance_;
};
// -------------------------------------------------------------------

class MsgNCCreate : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:proto3.MsgNCCreate) */ {
 public:
  MsgNCCreate();
  virtual ~MsgNCCreate();

  MsgNCCreate(const MsgNCCreate& from);

  inline MsgNCCreate& operator=(const MsgNCCreate& from) {
    CopyFrom(from);
    return *this;
  }

  static const MsgNCCreate& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const MsgNCCreate* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(MsgNCCreate* other);

  // implements Message ----------------------------------------------

  inline MsgNCCreate* New() const { return New(NULL); }

  MsgNCCreate* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const MsgNCCreate& from);
  void MergeFrom(const MsgNCCreate& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MsgNCCreate* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 mid = 1;
  void clear_mid();
  static const int kMidFieldNumber = 1;
  ::google::protobuf::uint32 mid() const;
  void set_mid(::google::protobuf::uint32 value);

  // optional uint32 game_id = 2;
  void clear_game_id();
  static const int kGameIdFieldNumber = 2;
  ::google::protobuf::uint32 game_id() const;
  void set_game_id(::google::protobuf::uint32 value);

  // optional .proto3.pb_enum result = 3;
  void clear_result();
  static const int kResultFieldNumber = 3;
  ::proto3::pb_enum result() const;
  void set_result(::proto3::pb_enum value);

  // @@protoc_insertion_point(class_scope:proto3.MsgNCCreate)
 private:

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  bool _is_default_instance_;
  ::google::protobuf::uint32 mid_;
  ::google::protobuf::uint32 game_id_;
  int result_;
  mutable int _cached_size_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_game_5fprotocol_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_game_5fprotocol_2eproto();
  #endif
  friend void protobuf_AssignDesc_game_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_game_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static MsgNCCreate* default_instance_;
};
// -------------------------------------------------------------------

class MsgCNJoin : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:proto3.MsgCNJoin) */ {
 public:
  MsgCNJoin();
  virtual ~MsgCNJoin();

  MsgCNJoin(const MsgCNJoin& from);

  inline MsgCNJoin& operator=(const MsgCNJoin& from) {
    CopyFrom(from);
    return *this;
  }

  static const MsgCNJoin& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const MsgCNJoin* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(MsgCNJoin* other);

  // implements Message ----------------------------------------------

  inline MsgCNJoin* New() const { return New(NULL); }

  MsgCNJoin* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const MsgCNJoin& from);
  void MergeFrom(const MsgCNJoin& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MsgCNJoin* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 mid = 1;
  void clear_mid();
  static const int kMidFieldNumber = 1;
  ::google::protobuf::uint32 mid() const;
  void set_mid(::google::protobuf::uint32 value);

  // optional uint32 key = 2;
  void clear_key();
  static const int kKeyFieldNumber = 2;
  ::google::protobuf::uint32 key() const;
  void set_key(::google::protobuf::uint32 value);

  // optional uint32 game_id = 3;
  void clear_game_id();
  static const int kGameIdFieldNumber = 3;
  ::google::protobuf::uint32 game_id() const;
  void set_game_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto3.MsgCNJoin)
 private:

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  bool _is_default_instance_;
  ::google::protobuf::uint32 mid_;
  ::google::protobuf::uint32 key_;
  ::google::protobuf::uint32 game_id_;
  mutable int _cached_size_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_game_5fprotocol_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_game_5fprotocol_2eproto();
  #endif
  friend void protobuf_AssignDesc_game_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_game_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static MsgCNJoin* default_instance_;
};
// -------------------------------------------------------------------

class MsgNCJoin : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:proto3.MsgNCJoin) */ {
 public:
  MsgNCJoin();
  virtual ~MsgNCJoin();

  MsgNCJoin(const MsgNCJoin& from);

  inline MsgNCJoin& operator=(const MsgNCJoin& from) {
    CopyFrom(from);
    return *this;
  }

  static const MsgNCJoin& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const MsgNCJoin* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(MsgNCJoin* other);

  // implements Message ----------------------------------------------

  inline MsgNCJoin* New() const { return New(NULL); }

  MsgNCJoin* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const MsgNCJoin& from);
  void MergeFrom(const MsgNCJoin& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MsgNCJoin* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 mid = 1;
  void clear_mid();
  static const int kMidFieldNumber = 1;
  ::google::protobuf::uint32 mid() const;
  void set_mid(::google::protobuf::uint32 value);

  // optional .proto3.pb_enum result = 2;
  void clear_result();
  static const int kResultFieldNumber = 2;
  ::proto3::pb_enum result() const;
  void set_result(::proto3::pb_enum value);

  // @@protoc_insertion_point(class_scope:proto3.MsgNCJoin)
 private:

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  bool _is_default_instance_;
  ::google::protobuf::uint32 mid_;
  int result_;
  mutable int _cached_size_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_game_5fprotocol_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_game_5fprotocol_2eproto();
  #endif
  friend void protobuf_AssignDesc_game_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_game_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static MsgNCJoin* default_instance_;
};
// -------------------------------------------------------------------

class MsgNCStart : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:proto3.MsgNCStart) */ {
 public:
  MsgNCStart();
  virtual ~MsgNCStart();

  MsgNCStart(const MsgNCStart& from);

  inline MsgNCStart& operator=(const MsgNCStart& from) {
    CopyFrom(from);
    return *this;
  }

  static const MsgNCStart& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const MsgNCStart* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(MsgNCStart* other);

  // implements Message ----------------------------------------------

  inline MsgNCStart* New() const { return New(NULL); }

  MsgNCStart* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const MsgNCStart& from);
  void MergeFrom(const MsgNCStart& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MsgNCStart* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 mid = 1;
  void clear_mid();
  static const int kMidFieldNumber = 1;
  ::google::protobuf::uint32 mid() const;
  void set_mid(::google::protobuf::uint32 value);

  // optional .proto3.pb_enum result = 2;
  void clear_result();
  static const int kResultFieldNumber = 2;
  ::proto3::pb_enum result() const;
  void set_result(::proto3::pb_enum value);

  // @@protoc_insertion_point(class_scope:proto3.MsgNCStart)
 private:

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  bool _is_default_instance_;
  ::google::protobuf::uint32 mid_;
  int result_;
  mutable int _cached_size_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_game_5fprotocol_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_game_5fprotocol_2eproto();
  #endif
  friend void protobuf_AssignDesc_game_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_game_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static MsgNCStart* default_instance_;
};
// -------------------------------------------------------------------

class MsgCNDiscard : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:proto3.MsgCNDiscard) */ {
 public:
  MsgCNDiscard();
  virtual ~MsgCNDiscard();

  MsgCNDiscard(const MsgCNDiscard& from);

  inline MsgCNDiscard& operator=(const MsgCNDiscard& from) {
    CopyFrom(from);
    return *this;
  }

  static const MsgCNDiscard& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const MsgCNDiscard* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(MsgCNDiscard* other);

  // implements Message ----------------------------------------------

  inline MsgCNDiscard* New() const { return New(NULL); }

  MsgCNDiscard* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const MsgCNDiscard& from);
  void MergeFrom(const MsgCNDiscard& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MsgCNDiscard* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 mid = 1;
  void clear_mid();
  static const int kMidFieldNumber = 1;
  ::google::protobuf::uint32 mid() const;
  void set_mid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto3.MsgCNDiscard)
 private:

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  bool _is_default_instance_;
  ::google::protobuf::uint32 mid_;
  mutable int _cached_size_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_game_5fprotocol_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_game_5fprotocol_2eproto();
  #endif
  friend void protobuf_AssignDesc_game_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_game_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static MsgCNDiscard* default_instance_;
};
// -------------------------------------------------------------------

class MsgNCDiscard : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:proto3.MsgNCDiscard) */ {
 public:
  MsgNCDiscard();
  virtual ~MsgNCDiscard();

  MsgNCDiscard(const MsgNCDiscard& from);

  inline MsgNCDiscard& operator=(const MsgNCDiscard& from) {
    CopyFrom(from);
    return *this;
  }

  static const MsgNCDiscard& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const MsgNCDiscard* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(MsgNCDiscard* other);

  // implements Message ----------------------------------------------

  inline MsgNCDiscard* New() const { return New(NULL); }

  MsgNCDiscard* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const MsgNCDiscard& from);
  void MergeFrom(const MsgNCDiscard& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MsgNCDiscard* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 mid = 1;
  void clear_mid();
  static const int kMidFieldNumber = 1;
  ::google::protobuf::uint32 mid() const;
  void set_mid(::google::protobuf::uint32 value);

  // optional .proto3.pb_enum result = 2;
  void clear_result();
  static const int kResultFieldNumber = 2;
  ::proto3::pb_enum result() const;
  void set_result(::proto3::pb_enum value);

  // @@protoc_insertion_point(class_scope:proto3.MsgNCDiscard)
 private:

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  bool _is_default_instance_;
  ::google::protobuf::uint32 mid_;
  int result_;
  mutable int _cached_size_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_game_5fprotocol_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_game_5fprotocol_2eproto();
  #endif
  friend void protobuf_AssignDesc_game_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_game_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static MsgNCDiscard* default_instance_;
};
// -------------------------------------------------------------------

class MsgCNMeld : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:proto3.MsgCNMeld) */ {
 public:
  MsgCNMeld();
  virtual ~MsgCNMeld();

  MsgCNMeld(const MsgCNMeld& from);

  inline MsgCNMeld& operator=(const MsgCNMeld& from) {
    CopyFrom(from);
    return *this;
  }

  static const MsgCNMeld& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const MsgCNMeld* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(MsgCNMeld* other);

  // implements Message ----------------------------------------------

  inline MsgCNMeld* New() const { return New(NULL); }

  MsgCNMeld* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const MsgCNMeld& from);
  void MergeFrom(const MsgCNMeld& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MsgCNMeld* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 mid = 1;
  void clear_mid();
  static const int kMidFieldNumber = 1;
  ::google::protobuf::uint32 mid() const;
  void set_mid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto3.MsgCNMeld)
 private:

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  bool _is_default_instance_;
  ::google::protobuf::uint32 mid_;
  mutable int _cached_size_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_game_5fprotocol_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_game_5fprotocol_2eproto();
  #endif
  friend void protobuf_AssignDesc_game_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_game_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static MsgCNMeld* default_instance_;
};
// -------------------------------------------------------------------

class MsgNCMeld : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:proto3.MsgNCMeld) */ {
 public:
  MsgNCMeld();
  virtual ~MsgNCMeld();

  MsgNCMeld(const MsgNCMeld& from);

  inline MsgNCMeld& operator=(const MsgNCMeld& from) {
    CopyFrom(from);
    return *this;
  }

  static const MsgNCMeld& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const MsgNCMeld* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(MsgNCMeld* other);

  // implements Message ----------------------------------------------

  inline MsgNCMeld* New() const { return New(NULL); }

  MsgNCMeld* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const MsgNCMeld& from);
  void MergeFrom(const MsgNCMeld& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MsgNCMeld* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 mid = 1;
  void clear_mid();
  static const int kMidFieldNumber = 1;
  ::google::protobuf::uint32 mid() const;
  void set_mid(::google::protobuf::uint32 value);

  // optional .proto3.pb_enum result = 2;
  void clear_result();
  static const int kResultFieldNumber = 2;
  ::proto3::pb_enum result() const;
  void set_result(::proto3::pb_enum value);

  // @@protoc_insertion_point(class_scope:proto3.MsgNCMeld)
 private:

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  bool _is_default_instance_;
  ::google::protobuf::uint32 mid_;
  int result_;
  mutable int _cached_size_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_game_5fprotocol_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_game_5fprotocol_2eproto();
  #endif
  friend void protobuf_AssignDesc_game_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_game_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static MsgNCMeld* default_instance_;
};
// -------------------------------------------------------------------

class MsgCNDismissA : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:proto3.MsgCNDismissA) */ {
 public:
  MsgCNDismissA();
  virtual ~MsgCNDismissA();

  MsgCNDismissA(const MsgCNDismissA& from);

  inline MsgCNDismissA& operator=(const MsgCNDismissA& from) {
    CopyFrom(from);
    return *this;
  }

  static const MsgCNDismissA& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const MsgCNDismissA* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(MsgCNDismissA* other);

  // implements Message ----------------------------------------------

  inline MsgCNDismissA* New() const { return New(NULL); }

  MsgCNDismissA* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const MsgCNDismissA& from);
  void MergeFrom(const MsgCNDismissA& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MsgCNDismissA* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 mid = 1;
  void clear_mid();
  static const int kMidFieldNumber = 1;
  ::google::protobuf::uint32 mid() const;
  void set_mid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto3.MsgCNDismissA)
 private:

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  bool _is_default_instance_;
  ::google::protobuf::uint32 mid_;
  mutable int _cached_size_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_game_5fprotocol_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_game_5fprotocol_2eproto();
  #endif
  friend void protobuf_AssignDesc_game_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_game_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static MsgCNDismissA* default_instance_;
};
// -------------------------------------------------------------------

class MsgNCDismissA : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:proto3.MsgNCDismissA) */ {
 public:
  MsgNCDismissA();
  virtual ~MsgNCDismissA();

  MsgNCDismissA(const MsgNCDismissA& from);

  inline MsgNCDismissA& operator=(const MsgNCDismissA& from) {
    CopyFrom(from);
    return *this;
  }

  static const MsgNCDismissA& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const MsgNCDismissA* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(MsgNCDismissA* other);

  // implements Message ----------------------------------------------

  inline MsgNCDismissA* New() const { return New(NULL); }

  MsgNCDismissA* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const MsgNCDismissA& from);
  void MergeFrom(const MsgNCDismissA& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MsgNCDismissA* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 mid = 1;
  void clear_mid();
  static const int kMidFieldNumber = 1;
  ::google::protobuf::uint32 mid() const;
  void set_mid(::google::protobuf::uint32 value);

  // optional .proto3.pb_enum result = 2;
  void clear_result();
  static const int kResultFieldNumber = 2;
  ::proto3::pb_enum result() const;
  void set_result(::proto3::pb_enum value);

  // @@protoc_insertion_point(class_scope:proto3.MsgNCDismissA)
 private:

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  bool _is_default_instance_;
  ::google::protobuf::uint32 mid_;
  int result_;
  mutable int _cached_size_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_game_5fprotocol_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_game_5fprotocol_2eproto();
  #endif
  friend void protobuf_AssignDesc_game_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_game_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static MsgNCDismissA* default_instance_;
};
// -------------------------------------------------------------------

class MsgCNDismissB : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:proto3.MsgCNDismissB) */ {
 public:
  MsgCNDismissB();
  virtual ~MsgCNDismissB();

  MsgCNDismissB(const MsgCNDismissB& from);

  inline MsgCNDismissB& operator=(const MsgCNDismissB& from) {
    CopyFrom(from);
    return *this;
  }

  static const MsgCNDismissB& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const MsgCNDismissB* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(MsgCNDismissB* other);

  // implements Message ----------------------------------------------

  inline MsgCNDismissB* New() const { return New(NULL); }

  MsgCNDismissB* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const MsgCNDismissB& from);
  void MergeFrom(const MsgCNDismissB& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MsgCNDismissB* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 mid = 1;
  void clear_mid();
  static const int kMidFieldNumber = 1;
  ::google::protobuf::uint32 mid() const;
  void set_mid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto3.MsgCNDismissB)
 private:

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  bool _is_default_instance_;
  ::google::protobuf::uint32 mid_;
  mutable int _cached_size_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_game_5fprotocol_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_game_5fprotocol_2eproto();
  #endif
  friend void protobuf_AssignDesc_game_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_game_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static MsgCNDismissB* default_instance_;
};
// -------------------------------------------------------------------

class MsgNCDismissB : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:proto3.MsgNCDismissB) */ {
 public:
  MsgNCDismissB();
  virtual ~MsgNCDismissB();

  MsgNCDismissB(const MsgNCDismissB& from);

  inline MsgNCDismissB& operator=(const MsgNCDismissB& from) {
    CopyFrom(from);
    return *this;
  }

  static const MsgNCDismissB& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const MsgNCDismissB* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(MsgNCDismissB* other);

  // implements Message ----------------------------------------------

  inline MsgNCDismissB* New() const { return New(NULL); }

  MsgNCDismissB* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const MsgNCDismissB& from);
  void MergeFrom(const MsgNCDismissB& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MsgNCDismissB* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 mid = 1;
  void clear_mid();
  static const int kMidFieldNumber = 1;
  ::google::protobuf::uint32 mid() const;
  void set_mid(::google::protobuf::uint32 value);

  // optional .proto3.pb_enum result = 2;
  void clear_result();
  static const int kResultFieldNumber = 2;
  ::proto3::pb_enum result() const;
  void set_result(::proto3::pb_enum value);

  // @@protoc_insertion_point(class_scope:proto3.MsgNCDismissB)
 private:

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  bool _is_default_instance_;
  ::google::protobuf::uint32 mid_;
  int result_;
  mutable int _cached_size_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_game_5fprotocol_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_game_5fprotocol_2eproto();
  #endif
  friend void protobuf_AssignDesc_game_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_game_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static MsgNCDismissB* default_instance_;
};
// -------------------------------------------------------------------

class MsgNCSettle : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:proto3.MsgNCSettle) */ {
 public:
  MsgNCSettle();
  virtual ~MsgNCSettle();

  MsgNCSettle(const MsgNCSettle& from);

  inline MsgNCSettle& operator=(const MsgNCSettle& from) {
    CopyFrom(from);
    return *this;
  }

  static const MsgNCSettle& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const MsgNCSettle* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(MsgNCSettle* other);

  // implements Message ----------------------------------------------

  inline MsgNCSettle* New() const { return New(NULL); }

  MsgNCSettle* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const MsgNCSettle& from);
  void MergeFrom(const MsgNCSettle& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MsgNCSettle* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 mid = 1;
  void clear_mid();
  static const int kMidFieldNumber = 1;
  ::google::protobuf::uint32 mid() const;
  void set_mid(::google::protobuf::uint32 value);

  // optional .proto3.pb_enum result = 2;
  void clear_result();
  static const int kResultFieldNumber = 2;
  ::proto3::pb_enum result() const;
  void set_result(::proto3::pb_enum value);

  // @@protoc_insertion_point(class_scope:proto3.MsgNCSettle)
 private:

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  bool _is_default_instance_;
  ::google::protobuf::uint32 mid_;
  int result_;
  mutable int _cached_size_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_game_5fprotocol_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_game_5fprotocol_2eproto();
  #endif
  friend void protobuf_AssignDesc_game_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_game_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static MsgNCSettle* default_instance_;
};
// -------------------------------------------------------------------

class MsgNCFinish : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:proto3.MsgNCFinish) */ {
 public:
  MsgNCFinish();
  virtual ~MsgNCFinish();

  MsgNCFinish(const MsgNCFinish& from);

  inline MsgNCFinish& operator=(const MsgNCFinish& from) {
    CopyFrom(from);
    return *this;
  }

  static const MsgNCFinish& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const MsgNCFinish* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(MsgNCFinish* other);

  // implements Message ----------------------------------------------

  inline MsgNCFinish* New() const { return New(NULL); }

  MsgNCFinish* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const MsgNCFinish& from);
  void MergeFrom(const MsgNCFinish& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MsgNCFinish* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 mid = 1;
  void clear_mid();
  static const int kMidFieldNumber = 1;
  ::google::protobuf::uint32 mid() const;
  void set_mid(::google::protobuf::uint32 value);

  // optional .proto3.pb_enum result = 2;
  void clear_result();
  static const int kResultFieldNumber = 2;
  ::proto3::pb_enum result() const;
  void set_result(::proto3::pb_enum value);

  // @@protoc_insertion_point(class_scope:proto3.MsgNCFinish)
 private:

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  bool _is_default_instance_;
  ::google::protobuf::uint32 mid_;
  int result_;
  mutable int _cached_size_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_game_5fprotocol_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_game_5fprotocol_2eproto();
  #endif
  friend void protobuf_AssignDesc_game_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_game_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static MsgNCFinish* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// user_t

// optional string uid = 1;
inline void user_t::clear_uid() {
  uid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& user_t::uid() const {
  // @@protoc_insertion_point(field_get:proto3.user_t.uid)
  return uid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void user_t::set_uid(const ::std::string& value) {
  
  uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto3.user_t.uid)
}
inline void user_t::set_uid(const char* value) {
  
  uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto3.user_t.uid)
}
inline void user_t::set_uid(const char* value, size_t size) {
  
  uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto3.user_t.uid)
}
inline ::std::string* user_t::mutable_uid() {
  
  // @@protoc_insertion_point(field_mutable:proto3.user_t.uid)
  return uid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* user_t::release_uid() {
  // @@protoc_insertion_point(field_release:proto3.user_t.uid)
  
  return uid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void user_t::set_allocated_uid(::std::string* uid) {
  if (uid != NULL) {
    
  } else {
    
  }
  uid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uid);
  // @@protoc_insertion_point(field_set_allocated:proto3.user_t.uid)
}

// optional uint32 flag = 2;
inline void user_t::clear_flag() {
  flag_ = 0u;
}
inline ::google::protobuf::uint32 user_t::flag() const {
  // @@protoc_insertion_point(field_get:proto3.user_t.flag)
  return flag_;
}
inline void user_t::set_flag(::google::protobuf::uint32 value) {
  
  flag_ = value;
  // @@protoc_insertion_point(field_set:proto3.user_t.flag)
}

// optional .proto3.pb_enum dev_type = 3;
inline void user_t::clear_dev_type() {
  dev_type_ = 0;
}
inline ::proto3::pb_enum user_t::dev_type() const {
  // @@protoc_insertion_point(field_get:proto3.user_t.dev_type)
  return static_cast< ::proto3::pb_enum >(dev_type_);
}
inline void user_t::set_dev_type(::proto3::pb_enum value) {
  
  dev_type_ = value;
  // @@protoc_insertion_point(field_set:proto3.user_t.dev_type)
}

// optional string account = 4;
inline void user_t::clear_account() {
  account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& user_t::account() const {
  // @@protoc_insertion_point(field_get:proto3.user_t.account)
  return account_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void user_t::set_account(const ::std::string& value) {
  
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto3.user_t.account)
}
inline void user_t::set_account(const char* value) {
  
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto3.user_t.account)
}
inline void user_t::set_account(const char* value, size_t size) {
  
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto3.user_t.account)
}
inline ::std::string* user_t::mutable_account() {
  
  // @@protoc_insertion_point(field_mutable:proto3.user_t.account)
  return account_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* user_t::release_account() {
  // @@protoc_insertion_point(field_release:proto3.user_t.account)
  
  return account_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void user_t::set_allocated_account(::std::string* account) {
  if (account != NULL) {
    
  } else {
    
  }
  account_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account);
  // @@protoc_insertion_point(field_set_allocated:proto3.user_t.account)
}

// optional string name = 5;
inline void user_t::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& user_t::name() const {
  // @@protoc_insertion_point(field_get:proto3.user_t.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void user_t::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto3.user_t.name)
}
inline void user_t::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto3.user_t.name)
}
inline void user_t::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto3.user_t.name)
}
inline ::std::string* user_t::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:proto3.user_t.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* user_t::release_name() {
  // @@protoc_insertion_point(field_release:proto3.user_t.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void user_t::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:proto3.user_t.name)
}

// optional string pswd = 6;
inline void user_t::clear_pswd() {
  pswd_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& user_t::pswd() const {
  // @@protoc_insertion_point(field_get:proto3.user_t.pswd)
  return pswd_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void user_t::set_pswd(const ::std::string& value) {
  
  pswd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto3.user_t.pswd)
}
inline void user_t::set_pswd(const char* value) {
  
  pswd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto3.user_t.pswd)
}
inline void user_t::set_pswd(const char* value, size_t size) {
  
  pswd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto3.user_t.pswd)
}
inline ::std::string* user_t::mutable_pswd() {
  
  // @@protoc_insertion_point(field_mutable:proto3.user_t.pswd)
  return pswd_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* user_t::release_pswd() {
  // @@protoc_insertion_point(field_release:proto3.user_t.pswd)
  
  return pswd_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void user_t::set_allocated_pswd(::std::string* pswd) {
  if (pswd != NULL) {
    
  } else {
    
  }
  pswd_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pswd);
  // @@protoc_insertion_point(field_set_allocated:proto3.user_t.pswd)
}

// optional uint32 gender = 7;
inline void user_t::clear_gender() {
  gender_ = 0u;
}
inline ::google::protobuf::uint32 user_t::gender() const {
  // @@protoc_insertion_point(field_get:proto3.user_t.gender)
  return gender_;
}
inline void user_t::set_gender(::google::protobuf::uint32 value) {
  
  gender_ = value;
  // @@protoc_insertion_point(field_set:proto3.user_t.gender)
}

// optional uint32 age = 8;
inline void user_t::clear_age() {
  age_ = 0u;
}
inline ::google::protobuf::uint32 user_t::age() const {
  // @@protoc_insertion_point(field_get:proto3.user_t.age)
  return age_;
}
inline void user_t::set_age(::google::protobuf::uint32 value) {
  
  age_ = value;
  // @@protoc_insertion_point(field_set:proto3.user_t.age)
}

// optional string udid = 9;
inline void user_t::clear_udid() {
  udid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& user_t::udid() const {
  // @@protoc_insertion_point(field_get:proto3.user_t.udid)
  return udid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void user_t::set_udid(const ::std::string& value) {
  
  udid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto3.user_t.udid)
}
inline void user_t::set_udid(const char* value) {
  
  udid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto3.user_t.udid)
}
inline void user_t::set_udid(const char* value, size_t size) {
  
  udid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto3.user_t.udid)
}
inline ::std::string* user_t::mutable_udid() {
  
  // @@protoc_insertion_point(field_mutable:proto3.user_t.udid)
  return udid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* user_t::release_udid() {
  // @@protoc_insertion_point(field_release:proto3.user_t.udid)
  
  return udid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void user_t::set_allocated_udid(::std::string* udid) {
  if (udid != NULL) {
    
  } else {
    
  }
  udid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), udid);
  // @@protoc_insertion_point(field_set_allocated:proto3.user_t.udid)
}

// -------------------------------------------------------------------

// player_t

// optional string uid = 1;
inline void player_t::clear_uid() {
  uid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& player_t::uid() const {
  // @@protoc_insertion_point(field_get:proto3.player_t.uid)
  return uid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void player_t::set_uid(const ::std::string& value) {
  
  uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto3.player_t.uid)
}
inline void player_t::set_uid(const char* value) {
  
  uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto3.player_t.uid)
}
inline void player_t::set_uid(const char* value, size_t size) {
  
  uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto3.player_t.uid)
}
inline ::std::string* player_t::mutable_uid() {
  
  // @@protoc_insertion_point(field_mutable:proto3.player_t.uid)
  return uid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* player_t::release_uid() {
  // @@protoc_insertion_point(field_release:proto3.player_t.uid)
  
  return uid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void player_t::set_allocated_uid(::std::string* uid) {
  if (uid != NULL) {
    
  } else {
    
  }
  uid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uid);
  // @@protoc_insertion_point(field_set_allocated:proto3.player_t.uid)
}

// optional uint32 pid = 2;
inline void player_t::clear_pid() {
  pid_ = 0u;
}
inline ::google::protobuf::uint32 player_t::pid() const {
  // @@protoc_insertion_point(field_get:proto3.player_t.pid)
  return pid_;
}
inline void player_t::set_pid(::google::protobuf::uint32 value) {
  
  pid_ = value;
  // @@protoc_insertion_point(field_set:proto3.player_t.pid)
}

// optional uint32 level = 3;
inline void player_t::clear_level() {
  level_ = 0u;
}
inline ::google::protobuf::uint32 player_t::level() const {
  // @@protoc_insertion_point(field_get:proto3.player_t.level)
  return level_;
}
inline void player_t::set_level(::google::protobuf::uint32 value) {
  
  level_ = value;
  // @@protoc_insertion_point(field_set:proto3.player_t.level)
}

// optional uint32 xp = 4;
inline void player_t::clear_xp() {
  xp_ = 0u;
}
inline ::google::protobuf::uint32 player_t::xp() const {
  // @@protoc_insertion_point(field_get:proto3.player_t.xp)
  return xp_;
}
inline void player_t::set_xp(::google::protobuf::uint32 value) {
  
  xp_ = value;
  // @@protoc_insertion_point(field_set:proto3.player_t.xp)
}

// optional uint32 currency = 5;
inline void player_t::clear_currency() {
  currency_ = 0u;
}
inline ::google::protobuf::uint32 player_t::currency() const {
  // @@protoc_insertion_point(field_get:proto3.player_t.currency)
  return currency_;
}
inline void player_t::set_currency(::google::protobuf::uint32 value) {
  
  currency_ = value;
  // @@protoc_insertion_point(field_set:proto3.player_t.currency)
}

// optional uint32 energy = 6;
inline void player_t::clear_energy() {
  energy_ = 0u;
}
inline ::google::protobuf::uint32 player_t::energy() const {
  // @@protoc_insertion_point(field_get:proto3.player_t.energy)
  return energy_;
}
inline void player_t::set_energy(::google::protobuf::uint32 value) {
  
  energy_ = value;
  // @@protoc_insertion_point(field_set:proto3.player_t.energy)
}

// repeated .proto3.achievement_t achievements = 7;
inline int player_t::achievements_size() const {
  return achievements_.size();
}
inline void player_t::clear_achievements() {
  achievements_.Clear();
}
inline const ::proto3::achievement_t& player_t::achievements(int index) const {
  // @@protoc_insertion_point(field_get:proto3.player_t.achievements)
  return achievements_.Get(index);
}
inline ::proto3::achievement_t* player_t::mutable_achievements(int index) {
  // @@protoc_insertion_point(field_mutable:proto3.player_t.achievements)
  return achievements_.Mutable(index);
}
inline ::proto3::achievement_t* player_t::add_achievements() {
  // @@protoc_insertion_point(field_add:proto3.player_t.achievements)
  return achievements_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto3::achievement_t >*
player_t::mutable_achievements() {
  // @@protoc_insertion_point(field_mutable_list:proto3.player_t.achievements)
  return &achievements_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto3::achievement_t >&
player_t::achievements() const {
  // @@protoc_insertion_point(field_list:proto3.player_t.achievements)
  return achievements_;
}

// -------------------------------------------------------------------

// game_t

// optional string uid = 1;
inline void game_t::clear_uid() {
  uid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& game_t::uid() const {
  // @@protoc_insertion_point(field_get:proto3.game_t.uid)
  return uid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void game_t::set_uid(const ::std::string& value) {
  
  uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto3.game_t.uid)
}
inline void game_t::set_uid(const char* value) {
  
  uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto3.game_t.uid)
}
inline void game_t::set_uid(const char* value, size_t size) {
  
  uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto3.game_t.uid)
}
inline ::std::string* game_t::mutable_uid() {
  
  // @@protoc_insertion_point(field_mutable:proto3.game_t.uid)
  return uid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* game_t::release_uid() {
  // @@protoc_insertion_point(field_release:proto3.game_t.uid)
  
  return uid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void game_t::set_allocated_uid(::std::string* uid) {
  if (uid != NULL) {
    
  } else {
    
  }
  uid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uid);
  // @@protoc_insertion_point(field_set_allocated:proto3.game_t.uid)
}

// optional uint32 gid = 2;
inline void game_t::clear_gid() {
  gid_ = 0u;
}
inline ::google::protobuf::uint32 game_t::gid() const {
  // @@protoc_insertion_point(field_get:proto3.game_t.gid)
  return gid_;
}
inline void game_t::set_gid(::google::protobuf::uint32 value) {
  
  gid_ = value;
  // @@protoc_insertion_point(field_set:proto3.game_t.gid)
}

// optional uint32 win = 3;
inline void game_t::clear_win() {
  win_ = 0u;
}
inline ::google::protobuf::uint32 game_t::win() const {
  // @@protoc_insertion_point(field_get:proto3.game_t.win)
  return win_;
}
inline void game_t::set_win(::google::protobuf::uint32 value) {
  
  win_ = value;
  // @@protoc_insertion_point(field_set:proto3.game_t.win)
}

// optional uint32 lose = 4;
inline void game_t::clear_lose() {
  lose_ = 0u;
}
inline ::google::protobuf::uint32 game_t::lose() const {
  // @@protoc_insertion_point(field_get:proto3.game_t.lose)
  return lose_;
}
inline void game_t::set_lose(::google::protobuf::uint32 value) {
  
  lose_ = value;
  // @@protoc_insertion_point(field_set:proto3.game_t.lose)
}

// optional uint32 draw = 5;
inline void game_t::clear_draw() {
  draw_ = 0u;
}
inline ::google::protobuf::uint32 game_t::draw() const {
  // @@protoc_insertion_point(field_get:proto3.game_t.draw)
  return draw_;
}
inline void game_t::set_draw(::google::protobuf::uint32 value) {
  
  draw_ = value;
  // @@protoc_insertion_point(field_set:proto3.game_t.draw)
}

// optional uint32 score = 6;
inline void game_t::clear_score() {
  score_ = 0u;
}
inline ::google::protobuf::uint32 game_t::score() const {
  // @@protoc_insertion_point(field_get:proto3.game_t.score)
  return score_;
}
inline void game_t::set_score(::google::protobuf::uint32 value) {
  
  score_ = value;
  // @@protoc_insertion_point(field_set:proto3.game_t.score)
}

// -------------------------------------------------------------------

// achievement_t

// optional .proto3.pb_enum type = 1;
inline void achievement_t::clear_type() {
  type_ = 0;
}
inline ::proto3::pb_enum achievement_t::type() const {
  // @@protoc_insertion_point(field_get:proto3.achievement_t.type)
  return static_cast< ::proto3::pb_enum >(type_);
}
inline void achievement_t::set_type(::proto3::pb_enum value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:proto3.achievement_t.type)
}

// optional string name = 2;
inline void achievement_t::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& achievement_t::name() const {
  // @@protoc_insertion_point(field_get:proto3.achievement_t.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void achievement_t::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto3.achievement_t.name)
}
inline void achievement_t::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto3.achievement_t.name)
}
inline void achievement_t::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto3.achievement_t.name)
}
inline ::std::string* achievement_t::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:proto3.achievement_t.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* achievement_t::release_name() {
  // @@protoc_insertion_point(field_release:proto3.achievement_t.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void achievement_t::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:proto3.achievement_t.name)
}

// optional uint32 value = 3;
inline void achievement_t::clear_value() {
  value_ = 0u;
}
inline ::google::protobuf::uint32 achievement_t::value() const {
  // @@protoc_insertion_point(field_get:proto3.achievement_t.value)
  return value_;
}
inline void achievement_t::set_value(::google::protobuf::uint32 value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:proto3.achievement_t.value)
}

// -------------------------------------------------------------------

// game_service_t

// optional uint32 id = 1;
inline void game_service_t::clear_id() {
  id_ = 0u;
}
inline ::google::protobuf::uint32 game_service_t::id() const {
  // @@protoc_insertion_point(field_get:proto3.game_service_t.id)
  return id_;
}
inline void game_service_t::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:proto3.game_service_t.id)
}

// optional uint32 version = 2;
inline void game_service_t::clear_version() {
  version_ = 0u;
}
inline ::google::protobuf::uint32 game_service_t::version() const {
  // @@protoc_insertion_point(field_get:proto3.game_service_t.version)
  return version_;
}
inline void game_service_t::set_version(::google::protobuf::uint32 value) {
  
  version_ = value;
  // @@protoc_insertion_point(field_set:proto3.game_service_t.version)
}

// optional string ip = 3;
inline void game_service_t::clear_ip() {
  ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& game_service_t::ip() const {
  // @@protoc_insertion_point(field_get:proto3.game_service_t.ip)
  return ip_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void game_service_t::set_ip(const ::std::string& value) {
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto3.game_service_t.ip)
}
inline void game_service_t::set_ip(const char* value) {
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto3.game_service_t.ip)
}
inline void game_service_t::set_ip(const char* value, size_t size) {
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto3.game_service_t.ip)
}
inline ::std::string* game_service_t::mutable_ip() {
  
  // @@protoc_insertion_point(field_mutable:proto3.game_service_t.ip)
  return ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* game_service_t::release_ip() {
  // @@protoc_insertion_point(field_release:proto3.game_service_t.ip)
  
  return ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void game_service_t::set_allocated_ip(::std::string* ip) {
  if (ip != NULL) {
    
  } else {
    
  }
  ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ip);
  // @@protoc_insertion_point(field_set_allocated:proto3.game_service_t.ip)
}

// optional uint32 port = 4;
inline void game_service_t::clear_port() {
  port_ = 0u;
}
inline ::google::protobuf::uint32 game_service_t::port() const {
  // @@protoc_insertion_point(field_get:proto3.game_service_t.port)
  return port_;
}
inline void game_service_t::set_port(::google::protobuf::uint32 value) {
  
  port_ = value;
  // @@protoc_insertion_point(field_set:proto3.game_service_t.port)
}

// optional uint32 occupied = 5;
inline void game_service_t::clear_occupied() {
  occupied_ = 0u;
}
inline ::google::protobuf::uint32 game_service_t::occupied() const {
  // @@protoc_insertion_point(field_get:proto3.game_service_t.occupied)
  return occupied_;
}
inline void game_service_t::set_occupied(::google::protobuf::uint32 value) {
  
  occupied_ = value;
  // @@protoc_insertion_point(field_set:proto3.game_service_t.occupied)
}

// optional uint32 capacity = 6;
inline void game_service_t::clear_capacity() {
  capacity_ = 0u;
}
inline ::google::protobuf::uint32 game_service_t::capacity() const {
  // @@protoc_insertion_point(field_get:proto3.game_service_t.capacity)
  return capacity_;
}
inline void game_service_t::set_capacity(::google::protobuf::uint32 value) {
  
  capacity_ = value;
  // @@protoc_insertion_point(field_set:proto3.game_service_t.capacity)
}

// optional string desc = 7;
inline void game_service_t::clear_desc() {
  desc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& game_service_t::desc() const {
  // @@protoc_insertion_point(field_get:proto3.game_service_t.desc)
  return desc_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void game_service_t::set_desc(const ::std::string& value) {
  
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto3.game_service_t.desc)
}
inline void game_service_t::set_desc(const char* value) {
  
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto3.game_service_t.desc)
}
inline void game_service_t::set_desc(const char* value, size_t size) {
  
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto3.game_service_t.desc)
}
inline ::std::string* game_service_t::mutable_desc() {
  
  // @@protoc_insertion_point(field_mutable:proto3.game_service_t.desc)
  return desc_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* game_service_t::release_desc() {
  // @@protoc_insertion_point(field_release:proto3.game_service_t.desc)
  
  return desc_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void game_service_t::set_allocated_desc(::std::string* desc) {
  if (desc != NULL) {
    
  } else {
    
  }
  desc_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), desc);
  // @@protoc_insertion_point(field_set_allocated:proto3.game_service_t.desc)
}

// optional uint32 status = 8;
inline void game_service_t::clear_status() {
  status_ = 0u;
}
inline ::google::protobuf::uint32 game_service_t::status() const {
  // @@protoc_insertion_point(field_get:proto3.game_service_t.status)
  return status_;
}
inline void game_service_t::set_status(::google::protobuf::uint32 value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:proto3.game_service_t.status)
}

// optional uint32 openning_time = 9;
inline void game_service_t::clear_openning_time() {
  openning_time_ = 0u;
}
inline ::google::protobuf::uint32 game_service_t::openning_time() const {
  // @@protoc_insertion_point(field_get:proto3.game_service_t.openning_time)
  return openning_time_;
}
inline void game_service_t::set_openning_time(::google::protobuf::uint32 value) {
  
  openning_time_ = value;
  // @@protoc_insertion_point(field_set:proto3.game_service_t.openning_time)
}

// optional uint32 maintain_start = 10;
inline void game_service_t::clear_maintain_start() {
  maintain_start_ = 0u;
}
inline ::google::protobuf::uint32 game_service_t::maintain_start() const {
  // @@protoc_insertion_point(field_get:proto3.game_service_t.maintain_start)
  return maintain_start_;
}
inline void game_service_t::set_maintain_start(::google::protobuf::uint32 value) {
  
  maintain_start_ = value;
  // @@protoc_insertion_point(field_set:proto3.game_service_t.maintain_start)
}

// optional uint32 maintain_end = 11;
inline void game_service_t::clear_maintain_end() {
  maintain_end_ = 0u;
}
inline ::google::protobuf::uint32 game_service_t::maintain_end() const {
  // @@protoc_insertion_point(field_get:proto3.game_service_t.maintain_end)
  return maintain_end_;
}
inline void game_service_t::set_maintain_end(::google::protobuf::uint32 value) {
  
  maintain_end_ = value;
  // @@protoc_insertion_point(field_set:proto3.game_service_t.maintain_end)
}

// -------------------------------------------------------------------

// lobby_t

// optional uint32 version = 1;
inline void lobby_t::clear_version() {
  version_ = 0u;
}
inline ::google::protobuf::uint32 lobby_t::version() const {
  // @@protoc_insertion_point(field_get:proto3.lobby_t.version)
  return version_;
}
inline void lobby_t::set_version(::google::protobuf::uint32 value) {
  
  version_ = value;
  // @@protoc_insertion_point(field_set:proto3.lobby_t.version)
}

// optional string ip = 2;
inline void lobby_t::clear_ip() {
  ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& lobby_t::ip() const {
  // @@protoc_insertion_point(field_get:proto3.lobby_t.ip)
  return ip_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void lobby_t::set_ip(const ::std::string& value) {
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto3.lobby_t.ip)
}
inline void lobby_t::set_ip(const char* value) {
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto3.lobby_t.ip)
}
inline void lobby_t::set_ip(const char* value, size_t size) {
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto3.lobby_t.ip)
}
inline ::std::string* lobby_t::mutable_ip() {
  
  // @@protoc_insertion_point(field_mutable:proto3.lobby_t.ip)
  return ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* lobby_t::release_ip() {
  // @@protoc_insertion_point(field_release:proto3.lobby_t.ip)
  
  return ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void lobby_t::set_allocated_ip(::std::string* ip) {
  if (ip != NULL) {
    
  } else {
    
  }
  ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ip);
  // @@protoc_insertion_point(field_set_allocated:proto3.lobby_t.ip)
}

// optional uint32 port = 3;
inline void lobby_t::clear_port() {
  port_ = 0u;
}
inline ::google::protobuf::uint32 lobby_t::port() const {
  // @@protoc_insertion_point(field_get:proto3.lobby_t.port)
  return port_;
}
inline void lobby_t::set_port(::google::protobuf::uint32 value) {
  
  port_ = value;
  // @@protoc_insertion_point(field_set:proto3.lobby_t.port)
}

// optional uint32 occupied = 4;
inline void lobby_t::clear_occupied() {
  occupied_ = 0u;
}
inline ::google::protobuf::uint32 lobby_t::occupied() const {
  // @@protoc_insertion_point(field_get:proto3.lobby_t.occupied)
  return occupied_;
}
inline void lobby_t::set_occupied(::google::protobuf::uint32 value) {
  
  occupied_ = value;
  // @@protoc_insertion_point(field_set:proto3.lobby_t.occupied)
}

// optional uint32 capacity = 5;
inline void lobby_t::clear_capacity() {
  capacity_ = 0u;
}
inline ::google::protobuf::uint32 lobby_t::capacity() const {
  // @@protoc_insertion_point(field_get:proto3.lobby_t.capacity)
  return capacity_;
}
inline void lobby_t::set_capacity(::google::protobuf::uint32 value) {
  
  capacity_ = value;
  // @@protoc_insertion_point(field_set:proto3.lobby_t.capacity)
}

// optional string desc = 6;
inline void lobby_t::clear_desc() {
  desc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& lobby_t::desc() const {
  // @@protoc_insertion_point(field_get:proto3.lobby_t.desc)
  return desc_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void lobby_t::set_desc(const ::std::string& value) {
  
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto3.lobby_t.desc)
}
inline void lobby_t::set_desc(const char* value) {
  
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto3.lobby_t.desc)
}
inline void lobby_t::set_desc(const char* value, size_t size) {
  
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto3.lobby_t.desc)
}
inline ::std::string* lobby_t::mutable_desc() {
  
  // @@protoc_insertion_point(field_mutable:proto3.lobby_t.desc)
  return desc_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* lobby_t::release_desc() {
  // @@protoc_insertion_point(field_release:proto3.lobby_t.desc)
  
  return desc_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void lobby_t::set_allocated_desc(::std::string* desc) {
  if (desc != NULL) {
    
  } else {
    
  }
  desc_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), desc);
  // @@protoc_insertion_point(field_set_allocated:proto3.lobby_t.desc)
}

// optional string bulletin = 7;
inline void lobby_t::clear_bulletin() {
  bulletin_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& lobby_t::bulletin() const {
  // @@protoc_insertion_point(field_get:proto3.lobby_t.bulletin)
  return bulletin_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void lobby_t::set_bulletin(const ::std::string& value) {
  
  bulletin_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto3.lobby_t.bulletin)
}
inline void lobby_t::set_bulletin(const char* value) {
  
  bulletin_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto3.lobby_t.bulletin)
}
inline void lobby_t::set_bulletin(const char* value, size_t size) {
  
  bulletin_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto3.lobby_t.bulletin)
}
inline ::std::string* lobby_t::mutable_bulletin() {
  
  // @@protoc_insertion_point(field_mutable:proto3.lobby_t.bulletin)
  return bulletin_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* lobby_t::release_bulletin() {
  // @@protoc_insertion_point(field_release:proto3.lobby_t.bulletin)
  
  return bulletin_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void lobby_t::set_allocated_bulletin(::std::string* bulletin) {
  if (bulletin != NULL) {
    
  } else {
    
  }
  bulletin_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bulletin);
  // @@protoc_insertion_point(field_set_allocated:proto3.lobby_t.bulletin)
}

// optional uint32 status = 8;
inline void lobby_t::clear_status() {
  status_ = 0u;
}
inline ::google::protobuf::uint32 lobby_t::status() const {
  // @@protoc_insertion_point(field_get:proto3.lobby_t.status)
  return status_;
}
inline void lobby_t::set_status(::google::protobuf::uint32 value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:proto3.lobby_t.status)
}

// optional uint32 maintain_start = 9;
inline void lobby_t::clear_maintain_start() {
  maintain_start_ = 0u;
}
inline ::google::protobuf::uint32 lobby_t::maintain_start() const {
  // @@protoc_insertion_point(field_get:proto3.lobby_t.maintain_start)
  return maintain_start_;
}
inline void lobby_t::set_maintain_start(::google::protobuf::uint32 value) {
  
  maintain_start_ = value;
  // @@protoc_insertion_point(field_set:proto3.lobby_t.maintain_start)
}

// optional uint32 maintain_end = 10;
inline void lobby_t::clear_maintain_end() {
  maintain_end_ = 0u;
}
inline ::google::protobuf::uint32 lobby_t::maintain_end() const {
  // @@protoc_insertion_point(field_get:proto3.lobby_t.maintain_end)
  return maintain_end_;
}
inline void lobby_t::set_maintain_end(::google::protobuf::uint32 value) {
  
  maintain_end_ = value;
  // @@protoc_insertion_point(field_set:proto3.lobby_t.maintain_end)
}

// optional uint32 time_zone = 11;
inline void lobby_t::clear_time_zone() {
  time_zone_ = 0u;
}
inline ::google::protobuf::uint32 lobby_t::time_zone() const {
  // @@protoc_insertion_point(field_get:proto3.lobby_t.time_zone)
  return time_zone_;
}
inline void lobby_t::set_time_zone(::google::protobuf::uint32 value) {
  
  time_zone_ = value;
  // @@protoc_insertion_point(field_set:proto3.lobby_t.time_zone)
}

// repeated .proto3.game_service_t games = 12;
inline int lobby_t::games_size() const {
  return games_.size();
}
inline void lobby_t::clear_games() {
  games_.Clear();
}
inline const ::proto3::game_service_t& lobby_t::games(int index) const {
  // @@protoc_insertion_point(field_get:proto3.lobby_t.games)
  return games_.Get(index);
}
inline ::proto3::game_service_t* lobby_t::mutable_games(int index) {
  // @@protoc_insertion_point(field_mutable:proto3.lobby_t.games)
  return games_.Mutable(index);
}
inline ::proto3::game_service_t* lobby_t::add_games() {
  // @@protoc_insertion_point(field_add:proto3.lobby_t.games)
  return games_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto3::game_service_t >*
lobby_t::mutable_games() {
  // @@protoc_insertion_point(field_mutable_list:proto3.lobby_t.games)
  return &games_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto3::game_service_t >&
lobby_t::games() const {
  // @@protoc_insertion_point(field_list:proto3.lobby_t.games)
  return games_;
}

// -------------------------------------------------------------------

// MsgBase

// optional uint32 mid = 1;
inline void MsgBase::clear_mid() {
  mid_ = 0u;
}
inline ::google::protobuf::uint32 MsgBase::mid() const {
  // @@protoc_insertion_point(field_get:proto3.MsgBase.mid)
  return mid_;
}
inline void MsgBase::set_mid(::google::protobuf::uint32 value) {
  
  mid_ = value;
  // @@protoc_insertion_point(field_set:proto3.MsgBase.mid)
}

// -------------------------------------------------------------------

// MsgCSLogin

// optional uint32 mid = 1;
inline void MsgCSLogin::clear_mid() {
  mid_ = 0u;
}
inline ::google::protobuf::uint32 MsgCSLogin::mid() const {
  // @@protoc_insertion_point(field_get:proto3.MsgCSLogin.mid)
  return mid_;
}
inline void MsgCSLogin::set_mid(::google::protobuf::uint32 value) {
  
  mid_ = value;
  // @@protoc_insertion_point(field_set:proto3.MsgCSLogin.mid)
}

// optional uint32 version = 3;
inline void MsgCSLogin::clear_version() {
  version_ = 0u;
}
inline ::google::protobuf::uint32 MsgCSLogin::version() const {
  // @@protoc_insertion_point(field_get:proto3.MsgCSLogin.version)
  return version_;
}
inline void MsgCSLogin::set_version(::google::protobuf::uint32 value) {
  
  version_ = value;
  // @@protoc_insertion_point(field_set:proto3.MsgCSLogin.version)
}

// optional .proto3.user_t user = 2;
inline bool MsgCSLogin::has_user() const {
  return !_is_default_instance_ && user_ != NULL;
}
inline void MsgCSLogin::clear_user() {
  if (GetArenaNoVirtual() == NULL && user_ != NULL) delete user_;
  user_ = NULL;
}
inline const ::proto3::user_t& MsgCSLogin::user() const {
  // @@protoc_insertion_point(field_get:proto3.MsgCSLogin.user)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return user_ != NULL ? *user_ : *default_instance().user_;
#else
  return user_ != NULL ? *user_ : *default_instance_->user_;
#endif
}
inline ::proto3::user_t* MsgCSLogin::mutable_user() {
  
  if (user_ == NULL) {
    user_ = new ::proto3::user_t;
  }
  // @@protoc_insertion_point(field_mutable:proto3.MsgCSLogin.user)
  return user_;
}
inline ::proto3::user_t* MsgCSLogin::release_user() {
  // @@protoc_insertion_point(field_release:proto3.MsgCSLogin.user)
  
  ::proto3::user_t* temp = user_;
  user_ = NULL;
  return temp;
}
inline void MsgCSLogin::set_allocated_user(::proto3::user_t* user) {
  delete user_;
  user_ = user;
  if (user) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto3.MsgCSLogin.user)
}

// -------------------------------------------------------------------

// MsgSCLogin

// optional uint32 mid = 1;
inline void MsgSCLogin::clear_mid() {
  mid_ = 0u;
}
inline ::google::protobuf::uint32 MsgSCLogin::mid() const {
  // @@protoc_insertion_point(field_get:proto3.MsgSCLogin.mid)
  return mid_;
}
inline void MsgSCLogin::set_mid(::google::protobuf::uint32 value) {
  
  mid_ = value;
  // @@protoc_insertion_point(field_set:proto3.MsgSCLogin.mid)
}

// optional string uid = 2;
inline void MsgSCLogin::clear_uid() {
  uid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgSCLogin::uid() const {
  // @@protoc_insertion_point(field_get:proto3.MsgSCLogin.uid)
  return uid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgSCLogin::set_uid(const ::std::string& value) {
  
  uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto3.MsgSCLogin.uid)
}
inline void MsgSCLogin::set_uid(const char* value) {
  
  uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto3.MsgSCLogin.uid)
}
inline void MsgSCLogin::set_uid(const char* value, size_t size) {
  
  uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto3.MsgSCLogin.uid)
}
inline ::std::string* MsgSCLogin::mutable_uid() {
  
  // @@protoc_insertion_point(field_mutable:proto3.MsgSCLogin.uid)
  return uid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgSCLogin::release_uid() {
  // @@protoc_insertion_point(field_release:proto3.MsgSCLogin.uid)
  
  return uid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgSCLogin::set_allocated_uid(::std::string* uid) {
  if (uid != NULL) {
    
  } else {
    
  }
  uid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uid);
  // @@protoc_insertion_point(field_set_allocated:proto3.MsgSCLogin.uid)
}

// optional uint32 version = 3;
inline void MsgSCLogin::clear_version() {
  version_ = 0u;
}
inline ::google::protobuf::uint32 MsgSCLogin::version() const {
  // @@protoc_insertion_point(field_get:proto3.MsgSCLogin.version)
  return version_;
}
inline void MsgSCLogin::set_version(::google::protobuf::uint32 value) {
  
  version_ = value;
  // @@protoc_insertion_point(field_set:proto3.MsgSCLogin.version)
}

// optional uint32 key = 4;
inline void MsgSCLogin::clear_key() {
  key_ = 0u;
}
inline ::google::protobuf::uint32 MsgSCLogin::key() const {
  // @@protoc_insertion_point(field_get:proto3.MsgSCLogin.key)
  return key_;
}
inline void MsgSCLogin::set_key(::google::protobuf::uint32 value) {
  
  key_ = value;
  // @@protoc_insertion_point(field_set:proto3.MsgSCLogin.key)
}

// optional uint64 session = 5;
inline void MsgSCLogin::clear_session() {
  session_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 MsgSCLogin::session() const {
  // @@protoc_insertion_point(field_get:proto3.MsgSCLogin.session)
  return session_;
}
inline void MsgSCLogin::set_session(::google::protobuf::uint64 value) {
  
  session_ = value;
  // @@protoc_insertion_point(field_set:proto3.MsgSCLogin.session)
}

// optional string ip = 6;
inline void MsgSCLogin::clear_ip() {
  ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgSCLogin::ip() const {
  // @@protoc_insertion_point(field_get:proto3.MsgSCLogin.ip)
  return ip_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgSCLogin::set_ip(const ::std::string& value) {
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto3.MsgSCLogin.ip)
}
inline void MsgSCLogin::set_ip(const char* value) {
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto3.MsgSCLogin.ip)
}
inline void MsgSCLogin::set_ip(const char* value, size_t size) {
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto3.MsgSCLogin.ip)
}
inline ::std::string* MsgSCLogin::mutable_ip() {
  
  // @@protoc_insertion_point(field_mutable:proto3.MsgSCLogin.ip)
  return ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgSCLogin::release_ip() {
  // @@protoc_insertion_point(field_release:proto3.MsgSCLogin.ip)
  
  return ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgSCLogin::set_allocated_ip(::std::string* ip) {
  if (ip != NULL) {
    
  } else {
    
  }
  ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ip);
  // @@protoc_insertion_point(field_set_allocated:proto3.MsgSCLogin.ip)
}

// optional uint32 port = 7;
inline void MsgSCLogin::clear_port() {
  port_ = 0u;
}
inline ::google::protobuf::uint32 MsgSCLogin::port() const {
  // @@protoc_insertion_point(field_get:proto3.MsgSCLogin.port)
  return port_;
}
inline void MsgSCLogin::set_port(::google::protobuf::uint32 value) {
  
  port_ = value;
  // @@protoc_insertion_point(field_set:proto3.MsgSCLogin.port)
}

// optional .proto3.pb_enum result = 8;
inline void MsgSCLogin::clear_result() {
  result_ = 0;
}
inline ::proto3::pb_enum MsgSCLogin::result() const {
  // @@protoc_insertion_point(field_get:proto3.MsgSCLogin.result)
  return static_cast< ::proto3::pb_enum >(result_);
}
inline void MsgSCLogin::set_result(::proto3::pb_enum value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:proto3.MsgSCLogin.result)
}

// -------------------------------------------------------------------

// MsgCLEnter

// optional uint32 mid = 1;
inline void MsgCLEnter::clear_mid() {
  mid_ = 0u;
}
inline ::google::protobuf::uint32 MsgCLEnter::mid() const {
  // @@protoc_insertion_point(field_get:proto3.MsgCLEnter.mid)
  return mid_;
}
inline void MsgCLEnter::set_mid(::google::protobuf::uint32 value) {
  
  mid_ = value;
  // @@protoc_insertion_point(field_set:proto3.MsgCLEnter.mid)
}

// optional string uid = 2;
inline void MsgCLEnter::clear_uid() {
  uid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgCLEnter::uid() const {
  // @@protoc_insertion_point(field_get:proto3.MsgCLEnter.uid)
  return uid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgCLEnter::set_uid(const ::std::string& value) {
  
  uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto3.MsgCLEnter.uid)
}
inline void MsgCLEnter::set_uid(const char* value) {
  
  uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto3.MsgCLEnter.uid)
}
inline void MsgCLEnter::set_uid(const char* value, size_t size) {
  
  uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto3.MsgCLEnter.uid)
}
inline ::std::string* MsgCLEnter::mutable_uid() {
  
  // @@protoc_insertion_point(field_mutable:proto3.MsgCLEnter.uid)
  return uid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgCLEnter::release_uid() {
  // @@protoc_insertion_point(field_release:proto3.MsgCLEnter.uid)
  
  return uid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgCLEnter::set_allocated_uid(::std::string* uid) {
  if (uid != NULL) {
    
  } else {
    
  }
  uid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uid);
  // @@protoc_insertion_point(field_set_allocated:proto3.MsgCLEnter.uid)
}

// optional uint32 version = 3;
inline void MsgCLEnter::clear_version() {
  version_ = 0u;
}
inline ::google::protobuf::uint32 MsgCLEnter::version() const {
  // @@protoc_insertion_point(field_get:proto3.MsgCLEnter.version)
  return version_;
}
inline void MsgCLEnter::set_version(::google::protobuf::uint32 value) {
  
  version_ = value;
  // @@protoc_insertion_point(field_set:proto3.MsgCLEnter.version)
}

// optional uint32 key = 4;
inline void MsgCLEnter::clear_key() {
  key_ = 0u;
}
inline ::google::protobuf::uint32 MsgCLEnter::key() const {
  // @@protoc_insertion_point(field_get:proto3.MsgCLEnter.key)
  return key_;
}
inline void MsgCLEnter::set_key(::google::protobuf::uint32 value) {
  
  key_ = value;
  // @@protoc_insertion_point(field_set:proto3.MsgCLEnter.key)
}

// optional uint64 session = 5;
inline void MsgCLEnter::clear_session() {
  session_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 MsgCLEnter::session() const {
  // @@protoc_insertion_point(field_get:proto3.MsgCLEnter.session)
  return session_;
}
inline void MsgCLEnter::set_session(::google::protobuf::uint64 value) {
  
  session_ = value;
  // @@protoc_insertion_point(field_set:proto3.MsgCLEnter.session)
}

// -------------------------------------------------------------------

// MsgLCEnter

// optional uint32 mid = 1;
inline void MsgLCEnter::clear_mid() {
  mid_ = 0u;
}
inline ::google::protobuf::uint32 MsgLCEnter::mid() const {
  // @@protoc_insertion_point(field_get:proto3.MsgLCEnter.mid)
  return mid_;
}
inline void MsgLCEnter::set_mid(::google::protobuf::uint32 value) {
  
  mid_ = value;
  // @@protoc_insertion_point(field_set:proto3.MsgLCEnter.mid)
}

// optional .proto3.player_t player = 2;
inline bool MsgLCEnter::has_player() const {
  return !_is_default_instance_ && player_ != NULL;
}
inline void MsgLCEnter::clear_player() {
  if (GetArenaNoVirtual() == NULL && player_ != NULL) delete player_;
  player_ = NULL;
}
inline const ::proto3::player_t& MsgLCEnter::player() const {
  // @@protoc_insertion_point(field_get:proto3.MsgLCEnter.player)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return player_ != NULL ? *player_ : *default_instance().player_;
#else
  return player_ != NULL ? *player_ : *default_instance_->player_;
#endif
}
inline ::proto3::player_t* MsgLCEnter::mutable_player() {
  
  if (player_ == NULL) {
    player_ = new ::proto3::player_t;
  }
  // @@protoc_insertion_point(field_mutable:proto3.MsgLCEnter.player)
  return player_;
}
inline ::proto3::player_t* MsgLCEnter::release_player() {
  // @@protoc_insertion_point(field_release:proto3.MsgLCEnter.player)
  
  ::proto3::player_t* temp = player_;
  player_ = NULL;
  return temp;
}
inline void MsgLCEnter::set_allocated_player(::proto3::player_t* player) {
  delete player_;
  player_ = player;
  if (player) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto3.MsgLCEnter.player)
}

// optional .proto3.lobby_t lobby = 3;
inline bool MsgLCEnter::has_lobby() const {
  return !_is_default_instance_ && lobby_ != NULL;
}
inline void MsgLCEnter::clear_lobby() {
  if (GetArenaNoVirtual() == NULL && lobby_ != NULL) delete lobby_;
  lobby_ = NULL;
}
inline const ::proto3::lobby_t& MsgLCEnter::lobby() const {
  // @@protoc_insertion_point(field_get:proto3.MsgLCEnter.lobby)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return lobby_ != NULL ? *lobby_ : *default_instance().lobby_;
#else
  return lobby_ != NULL ? *lobby_ : *default_instance_->lobby_;
#endif
}
inline ::proto3::lobby_t* MsgLCEnter::mutable_lobby() {
  
  if (lobby_ == NULL) {
    lobby_ = new ::proto3::lobby_t;
  }
  // @@protoc_insertion_point(field_mutable:proto3.MsgLCEnter.lobby)
  return lobby_;
}
inline ::proto3::lobby_t* MsgLCEnter::release_lobby() {
  // @@protoc_insertion_point(field_release:proto3.MsgLCEnter.lobby)
  
  ::proto3::lobby_t* temp = lobby_;
  lobby_ = NULL;
  return temp;
}
inline void MsgLCEnter::set_allocated_lobby(::proto3::lobby_t* lobby) {
  delete lobby_;
  lobby_ = lobby;
  if (lobby) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto3.MsgLCEnter.lobby)
}

// optional .proto3.pb_enum result = 4;
inline void MsgLCEnter::clear_result() {
  result_ = 0;
}
inline ::proto3::pb_enum MsgLCEnter::result() const {
  // @@protoc_insertion_point(field_get:proto3.MsgLCEnter.result)
  return static_cast< ::proto3::pb_enum >(result_);
}
inline void MsgLCEnter::set_result(::proto3::pb_enum value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:proto3.MsgLCEnter.result)
}

// -------------------------------------------------------------------

// MsgCNEnter

// optional uint32 mid = 1;
inline void MsgCNEnter::clear_mid() {
  mid_ = 0u;
}
inline ::google::protobuf::uint32 MsgCNEnter::mid() const {
  // @@protoc_insertion_point(field_get:proto3.MsgCNEnter.mid)
  return mid_;
}
inline void MsgCNEnter::set_mid(::google::protobuf::uint32 value) {
  
  mid_ = value;
  // @@protoc_insertion_point(field_set:proto3.MsgCNEnter.mid)
}

// optional string uid = 2;
inline void MsgCNEnter::clear_uid() {
  uid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgCNEnter::uid() const {
  // @@protoc_insertion_point(field_get:proto3.MsgCNEnter.uid)
  return uid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgCNEnter::set_uid(const ::std::string& value) {
  
  uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto3.MsgCNEnter.uid)
}
inline void MsgCNEnter::set_uid(const char* value) {
  
  uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto3.MsgCNEnter.uid)
}
inline void MsgCNEnter::set_uid(const char* value, size_t size) {
  
  uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto3.MsgCNEnter.uid)
}
inline ::std::string* MsgCNEnter::mutable_uid() {
  
  // @@protoc_insertion_point(field_mutable:proto3.MsgCNEnter.uid)
  return uid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgCNEnter::release_uid() {
  // @@protoc_insertion_point(field_release:proto3.MsgCNEnter.uid)
  
  return uid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgCNEnter::set_allocated_uid(::std::string* uid) {
  if (uid != NULL) {
    
  } else {
    
  }
  uid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uid);
  // @@protoc_insertion_point(field_set_allocated:proto3.MsgCNEnter.uid)
}

// optional uint32 version = 3;
inline void MsgCNEnter::clear_version() {
  version_ = 0u;
}
inline ::google::protobuf::uint32 MsgCNEnter::version() const {
  // @@protoc_insertion_point(field_get:proto3.MsgCNEnter.version)
  return version_;
}
inline void MsgCNEnter::set_version(::google::protobuf::uint32 value) {
  
  version_ = value;
  // @@protoc_insertion_point(field_set:proto3.MsgCNEnter.version)
}

// optional uint32 key = 4;
inline void MsgCNEnter::clear_key() {
  key_ = 0u;
}
inline ::google::protobuf::uint32 MsgCNEnter::key() const {
  // @@protoc_insertion_point(field_get:proto3.MsgCNEnter.key)
  return key_;
}
inline void MsgCNEnter::set_key(::google::protobuf::uint32 value) {
  
  key_ = value;
  // @@protoc_insertion_point(field_set:proto3.MsgCNEnter.key)
}

// optional uint64 session = 5;
inline void MsgCNEnter::clear_session() {
  session_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 MsgCNEnter::session() const {
  // @@protoc_insertion_point(field_get:proto3.MsgCNEnter.session)
  return session_;
}
inline void MsgCNEnter::set_session(::google::protobuf::uint64 value) {
  
  session_ = value;
  // @@protoc_insertion_point(field_set:proto3.MsgCNEnter.session)
}

// optional .proto3.pb_enum service = 6;
inline void MsgCNEnter::clear_service() {
  service_ = 0;
}
inline ::proto3::pb_enum MsgCNEnter::service() const {
  // @@protoc_insertion_point(field_get:proto3.MsgCNEnter.service)
  return static_cast< ::proto3::pb_enum >(service_);
}
inline void MsgCNEnter::set_service(::proto3::pb_enum value) {
  
  service_ = value;
  // @@protoc_insertion_point(field_set:proto3.MsgCNEnter.service)
}

// -------------------------------------------------------------------

// MsgNCEnter

// optional uint32 mid = 1;
inline void MsgNCEnter::clear_mid() {
  mid_ = 0u;
}
inline ::google::protobuf::uint32 MsgNCEnter::mid() const {
  // @@protoc_insertion_point(field_get:proto3.MsgNCEnter.mid)
  return mid_;
}
inline void MsgNCEnter::set_mid(::google::protobuf::uint32 value) {
  
  mid_ = value;
  // @@protoc_insertion_point(field_set:proto3.MsgNCEnter.mid)
}

// optional .proto3.game_t game_info = 2;
inline bool MsgNCEnter::has_game_info() const {
  return !_is_default_instance_ && game_info_ != NULL;
}
inline void MsgNCEnter::clear_game_info() {
  if (GetArenaNoVirtual() == NULL && game_info_ != NULL) delete game_info_;
  game_info_ = NULL;
}
inline const ::proto3::game_t& MsgNCEnter::game_info() const {
  // @@protoc_insertion_point(field_get:proto3.MsgNCEnter.game_info)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return game_info_ != NULL ? *game_info_ : *default_instance().game_info_;
#else
  return game_info_ != NULL ? *game_info_ : *default_instance_->game_info_;
#endif
}
inline ::proto3::game_t* MsgNCEnter::mutable_game_info() {
  
  if (game_info_ == NULL) {
    game_info_ = new ::proto3::game_t;
  }
  // @@protoc_insertion_point(field_mutable:proto3.MsgNCEnter.game_info)
  return game_info_;
}
inline ::proto3::game_t* MsgNCEnter::release_game_info() {
  // @@protoc_insertion_point(field_release:proto3.MsgNCEnter.game_info)
  
  ::proto3::game_t* temp = game_info_;
  game_info_ = NULL;
  return temp;
}
inline void MsgNCEnter::set_allocated_game_info(::proto3::game_t* game_info) {
  delete game_info_;
  game_info_ = game_info;
  if (game_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto3.MsgNCEnter.game_info)
}

// optional .proto3.pb_enum result = 3;
inline void MsgNCEnter::clear_result() {
  result_ = 0;
}
inline ::proto3::pb_enum MsgNCEnter::result() const {
  // @@protoc_insertion_point(field_get:proto3.MsgNCEnter.result)
  return static_cast< ::proto3::pb_enum >(result_);
}
inline void MsgNCEnter::set_result(::proto3::pb_enum value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:proto3.MsgNCEnter.result)
}

// -------------------------------------------------------------------

// MsgCNCreate

// optional uint32 mid = 1;
inline void MsgCNCreate::clear_mid() {
  mid_ = 0u;
}
inline ::google::protobuf::uint32 MsgCNCreate::mid() const {
  // @@protoc_insertion_point(field_get:proto3.MsgCNCreate.mid)
  return mid_;
}
inline void MsgCNCreate::set_mid(::google::protobuf::uint32 value) {
  
  mid_ = value;
  // @@protoc_insertion_point(field_set:proto3.MsgCNCreate.mid)
}

// optional .proto3.pb_enum rule = 2;
inline void MsgCNCreate::clear_rule() {
  rule_ = 0;
}
inline ::proto3::pb_enum MsgCNCreate::rule() const {
  // @@protoc_insertion_point(field_get:proto3.MsgCNCreate.rule)
  return static_cast< ::proto3::pb_enum >(rule_);
}
inline void MsgCNCreate::set_rule(::proto3::pb_enum value) {
  
  rule_ = value;
  // @@protoc_insertion_point(field_set:proto3.MsgCNCreate.rule)
}

// optional .proto3.pb_enum category = 3;
inline void MsgCNCreate::clear_category() {
  category_ = 0;
}
inline ::proto3::pb_enum MsgCNCreate::category() const {
  // @@protoc_insertion_point(field_get:proto3.MsgCNCreate.category)
  return static_cast< ::proto3::pb_enum >(category_);
}
inline void MsgCNCreate::set_category(::proto3::pb_enum value) {
  
  category_ = value;
  // @@protoc_insertion_point(field_set:proto3.MsgCNCreate.category)
}

// optional uint32 key = 4;
inline void MsgCNCreate::clear_key() {
  key_ = 0u;
}
inline ::google::protobuf::uint32 MsgCNCreate::key() const {
  // @@protoc_insertion_point(field_get:proto3.MsgCNCreate.key)
  return key_;
}
inline void MsgCNCreate::set_key(::google::protobuf::uint32 value) {
  
  key_ = value;
  // @@protoc_insertion_point(field_set:proto3.MsgCNCreate.key)
}

// optional uint32 robot = 5;
inline void MsgCNCreate::clear_robot() {
  robot_ = 0u;
}
inline ::google::protobuf::uint32 MsgCNCreate::robot() const {
  // @@protoc_insertion_point(field_get:proto3.MsgCNCreate.robot)
  return robot_;
}
inline void MsgCNCreate::set_robot(::google::protobuf::uint32 value) {
  
  robot_ = value;
  // @@protoc_insertion_point(field_set:proto3.MsgCNCreate.robot)
}

// optional uint32 parameter = 6;
inline void MsgCNCreate::clear_parameter() {
  parameter_ = 0u;
}
inline ::google::protobuf::uint32 MsgCNCreate::parameter() const {
  // @@protoc_insertion_point(field_get:proto3.MsgCNCreate.parameter)
  return parameter_;
}
inline void MsgCNCreate::set_parameter(::google::protobuf::uint32 value) {
  
  parameter_ = value;
  // @@protoc_insertion_point(field_set:proto3.MsgCNCreate.parameter)
}

// -------------------------------------------------------------------

// MsgNCCreate

// optional uint32 mid = 1;
inline void MsgNCCreate::clear_mid() {
  mid_ = 0u;
}
inline ::google::protobuf::uint32 MsgNCCreate::mid() const {
  // @@protoc_insertion_point(field_get:proto3.MsgNCCreate.mid)
  return mid_;
}
inline void MsgNCCreate::set_mid(::google::protobuf::uint32 value) {
  
  mid_ = value;
  // @@protoc_insertion_point(field_set:proto3.MsgNCCreate.mid)
}

// optional uint32 game_id = 2;
inline void MsgNCCreate::clear_game_id() {
  game_id_ = 0u;
}
inline ::google::protobuf::uint32 MsgNCCreate::game_id() const {
  // @@protoc_insertion_point(field_get:proto3.MsgNCCreate.game_id)
  return game_id_;
}
inline void MsgNCCreate::set_game_id(::google::protobuf::uint32 value) {
  
  game_id_ = value;
  // @@protoc_insertion_point(field_set:proto3.MsgNCCreate.game_id)
}

// optional .proto3.pb_enum result = 3;
inline void MsgNCCreate::clear_result() {
  result_ = 0;
}
inline ::proto3::pb_enum MsgNCCreate::result() const {
  // @@protoc_insertion_point(field_get:proto3.MsgNCCreate.result)
  return static_cast< ::proto3::pb_enum >(result_);
}
inline void MsgNCCreate::set_result(::proto3::pb_enum value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:proto3.MsgNCCreate.result)
}

// -------------------------------------------------------------------

// MsgCNJoin

// optional uint32 mid = 1;
inline void MsgCNJoin::clear_mid() {
  mid_ = 0u;
}
inline ::google::protobuf::uint32 MsgCNJoin::mid() const {
  // @@protoc_insertion_point(field_get:proto3.MsgCNJoin.mid)
  return mid_;
}
inline void MsgCNJoin::set_mid(::google::protobuf::uint32 value) {
  
  mid_ = value;
  // @@protoc_insertion_point(field_set:proto3.MsgCNJoin.mid)
}

// optional uint32 key = 2;
inline void MsgCNJoin::clear_key() {
  key_ = 0u;
}
inline ::google::protobuf::uint32 MsgCNJoin::key() const {
  // @@protoc_insertion_point(field_get:proto3.MsgCNJoin.key)
  return key_;
}
inline void MsgCNJoin::set_key(::google::protobuf::uint32 value) {
  
  key_ = value;
  // @@protoc_insertion_point(field_set:proto3.MsgCNJoin.key)
}

// optional uint32 game_id = 3;
inline void MsgCNJoin::clear_game_id() {
  game_id_ = 0u;
}
inline ::google::protobuf::uint32 MsgCNJoin::game_id() const {
  // @@protoc_insertion_point(field_get:proto3.MsgCNJoin.game_id)
  return game_id_;
}
inline void MsgCNJoin::set_game_id(::google::protobuf::uint32 value) {
  
  game_id_ = value;
  // @@protoc_insertion_point(field_set:proto3.MsgCNJoin.game_id)
}

// -------------------------------------------------------------------

// MsgNCJoin

// optional uint32 mid = 1;
inline void MsgNCJoin::clear_mid() {
  mid_ = 0u;
}
inline ::google::protobuf::uint32 MsgNCJoin::mid() const {
  // @@protoc_insertion_point(field_get:proto3.MsgNCJoin.mid)
  return mid_;
}
inline void MsgNCJoin::set_mid(::google::protobuf::uint32 value) {
  
  mid_ = value;
  // @@protoc_insertion_point(field_set:proto3.MsgNCJoin.mid)
}

// optional .proto3.pb_enum result = 2;
inline void MsgNCJoin::clear_result() {
  result_ = 0;
}
inline ::proto3::pb_enum MsgNCJoin::result() const {
  // @@protoc_insertion_point(field_get:proto3.MsgNCJoin.result)
  return static_cast< ::proto3::pb_enum >(result_);
}
inline void MsgNCJoin::set_result(::proto3::pb_enum value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:proto3.MsgNCJoin.result)
}

// -------------------------------------------------------------------

// MsgNCStart

// optional uint32 mid = 1;
inline void MsgNCStart::clear_mid() {
  mid_ = 0u;
}
inline ::google::protobuf::uint32 MsgNCStart::mid() const {
  // @@protoc_insertion_point(field_get:proto3.MsgNCStart.mid)
  return mid_;
}
inline void MsgNCStart::set_mid(::google::protobuf::uint32 value) {
  
  mid_ = value;
  // @@protoc_insertion_point(field_set:proto3.MsgNCStart.mid)
}

// optional .proto3.pb_enum result = 2;
inline void MsgNCStart::clear_result() {
  result_ = 0;
}
inline ::proto3::pb_enum MsgNCStart::result() const {
  // @@protoc_insertion_point(field_get:proto3.MsgNCStart.result)
  return static_cast< ::proto3::pb_enum >(result_);
}
inline void MsgNCStart::set_result(::proto3::pb_enum value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:proto3.MsgNCStart.result)
}

// -------------------------------------------------------------------

// MsgCNDiscard

// optional uint32 mid = 1;
inline void MsgCNDiscard::clear_mid() {
  mid_ = 0u;
}
inline ::google::protobuf::uint32 MsgCNDiscard::mid() const {
  // @@protoc_insertion_point(field_get:proto3.MsgCNDiscard.mid)
  return mid_;
}
inline void MsgCNDiscard::set_mid(::google::protobuf::uint32 value) {
  
  mid_ = value;
  // @@protoc_insertion_point(field_set:proto3.MsgCNDiscard.mid)
}

// -------------------------------------------------------------------

// MsgNCDiscard

// optional uint32 mid = 1;
inline void MsgNCDiscard::clear_mid() {
  mid_ = 0u;
}
inline ::google::protobuf::uint32 MsgNCDiscard::mid() const {
  // @@protoc_insertion_point(field_get:proto3.MsgNCDiscard.mid)
  return mid_;
}
inline void MsgNCDiscard::set_mid(::google::protobuf::uint32 value) {
  
  mid_ = value;
  // @@protoc_insertion_point(field_set:proto3.MsgNCDiscard.mid)
}

// optional .proto3.pb_enum result = 2;
inline void MsgNCDiscard::clear_result() {
  result_ = 0;
}
inline ::proto3::pb_enum MsgNCDiscard::result() const {
  // @@protoc_insertion_point(field_get:proto3.MsgNCDiscard.result)
  return static_cast< ::proto3::pb_enum >(result_);
}
inline void MsgNCDiscard::set_result(::proto3::pb_enum value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:proto3.MsgNCDiscard.result)
}

// -------------------------------------------------------------------

// MsgCNMeld

// optional uint32 mid = 1;
inline void MsgCNMeld::clear_mid() {
  mid_ = 0u;
}
inline ::google::protobuf::uint32 MsgCNMeld::mid() const {
  // @@protoc_insertion_point(field_get:proto3.MsgCNMeld.mid)
  return mid_;
}
inline void MsgCNMeld::set_mid(::google::protobuf::uint32 value) {
  
  mid_ = value;
  // @@protoc_insertion_point(field_set:proto3.MsgCNMeld.mid)
}

// -------------------------------------------------------------------

// MsgNCMeld

// optional uint32 mid = 1;
inline void MsgNCMeld::clear_mid() {
  mid_ = 0u;
}
inline ::google::protobuf::uint32 MsgNCMeld::mid() const {
  // @@protoc_insertion_point(field_get:proto3.MsgNCMeld.mid)
  return mid_;
}
inline void MsgNCMeld::set_mid(::google::protobuf::uint32 value) {
  
  mid_ = value;
  // @@protoc_insertion_point(field_set:proto3.MsgNCMeld.mid)
}

// optional .proto3.pb_enum result = 2;
inline void MsgNCMeld::clear_result() {
  result_ = 0;
}
inline ::proto3::pb_enum MsgNCMeld::result() const {
  // @@protoc_insertion_point(field_get:proto3.MsgNCMeld.result)
  return static_cast< ::proto3::pb_enum >(result_);
}
inline void MsgNCMeld::set_result(::proto3::pb_enum value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:proto3.MsgNCMeld.result)
}

// -------------------------------------------------------------------

// MsgCNDismissA

// optional uint32 mid = 1;
inline void MsgCNDismissA::clear_mid() {
  mid_ = 0u;
}
inline ::google::protobuf::uint32 MsgCNDismissA::mid() const {
  // @@protoc_insertion_point(field_get:proto3.MsgCNDismissA.mid)
  return mid_;
}
inline void MsgCNDismissA::set_mid(::google::protobuf::uint32 value) {
  
  mid_ = value;
  // @@protoc_insertion_point(field_set:proto3.MsgCNDismissA.mid)
}

// -------------------------------------------------------------------

// MsgNCDismissA

// optional uint32 mid = 1;
inline void MsgNCDismissA::clear_mid() {
  mid_ = 0u;
}
inline ::google::protobuf::uint32 MsgNCDismissA::mid() const {
  // @@protoc_insertion_point(field_get:proto3.MsgNCDismissA.mid)
  return mid_;
}
inline void MsgNCDismissA::set_mid(::google::protobuf::uint32 value) {
  
  mid_ = value;
  // @@protoc_insertion_point(field_set:proto3.MsgNCDismissA.mid)
}

// optional .proto3.pb_enum result = 2;
inline void MsgNCDismissA::clear_result() {
  result_ = 0;
}
inline ::proto3::pb_enum MsgNCDismissA::result() const {
  // @@protoc_insertion_point(field_get:proto3.MsgNCDismissA.result)
  return static_cast< ::proto3::pb_enum >(result_);
}
inline void MsgNCDismissA::set_result(::proto3::pb_enum value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:proto3.MsgNCDismissA.result)
}

// -------------------------------------------------------------------

// MsgCNDismissB

// optional uint32 mid = 1;
inline void MsgCNDismissB::clear_mid() {
  mid_ = 0u;
}
inline ::google::protobuf::uint32 MsgCNDismissB::mid() const {
  // @@protoc_insertion_point(field_get:proto3.MsgCNDismissB.mid)
  return mid_;
}
inline void MsgCNDismissB::set_mid(::google::protobuf::uint32 value) {
  
  mid_ = value;
  // @@protoc_insertion_point(field_set:proto3.MsgCNDismissB.mid)
}

// -------------------------------------------------------------------

// MsgNCDismissB

// optional uint32 mid = 1;
inline void MsgNCDismissB::clear_mid() {
  mid_ = 0u;
}
inline ::google::protobuf::uint32 MsgNCDismissB::mid() const {
  // @@protoc_insertion_point(field_get:proto3.MsgNCDismissB.mid)
  return mid_;
}
inline void MsgNCDismissB::set_mid(::google::protobuf::uint32 value) {
  
  mid_ = value;
  // @@protoc_insertion_point(field_set:proto3.MsgNCDismissB.mid)
}

// optional .proto3.pb_enum result = 2;
inline void MsgNCDismissB::clear_result() {
  result_ = 0;
}
inline ::proto3::pb_enum MsgNCDismissB::result() const {
  // @@protoc_insertion_point(field_get:proto3.MsgNCDismissB.result)
  return static_cast< ::proto3::pb_enum >(result_);
}
inline void MsgNCDismissB::set_result(::proto3::pb_enum value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:proto3.MsgNCDismissB.result)
}

// -------------------------------------------------------------------

// MsgNCSettle

// optional uint32 mid = 1;
inline void MsgNCSettle::clear_mid() {
  mid_ = 0u;
}
inline ::google::protobuf::uint32 MsgNCSettle::mid() const {
  // @@protoc_insertion_point(field_get:proto3.MsgNCSettle.mid)
  return mid_;
}
inline void MsgNCSettle::set_mid(::google::protobuf::uint32 value) {
  
  mid_ = value;
  // @@protoc_insertion_point(field_set:proto3.MsgNCSettle.mid)
}

// optional .proto3.pb_enum result = 2;
inline void MsgNCSettle::clear_result() {
  result_ = 0;
}
inline ::proto3::pb_enum MsgNCSettle::result() const {
  // @@protoc_insertion_point(field_get:proto3.MsgNCSettle.result)
  return static_cast< ::proto3::pb_enum >(result_);
}
inline void MsgNCSettle::set_result(::proto3::pb_enum value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:proto3.MsgNCSettle.result)
}

// -------------------------------------------------------------------

// MsgNCFinish

// optional uint32 mid = 1;
inline void MsgNCFinish::clear_mid() {
  mid_ = 0u;
}
inline ::google::protobuf::uint32 MsgNCFinish::mid() const {
  // @@protoc_insertion_point(field_get:proto3.MsgNCFinish.mid)
  return mid_;
}
inline void MsgNCFinish::set_mid(::google::protobuf::uint32 value) {
  
  mid_ = value;
  // @@protoc_insertion_point(field_set:proto3.MsgNCFinish.mid)
}

// optional .proto3.pb_enum result = 2;
inline void MsgNCFinish::clear_result() {
  result_ = 0;
}
inline ::proto3::pb_enum MsgNCFinish::result() const {
  // @@protoc_insertion_point(field_get:proto3.MsgNCFinish.result)
  return static_cast< ::proto3::pb_enum >(result_);
}
inline void MsgNCFinish::set_result(::proto3::pb_enum value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:proto3.MsgNCFinish.result)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto3

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::proto3::pb_enum> : ::google::protobuf::internal::true_type {};

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_game_5fprotocol_2eproto__INCLUDED
