// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protocol.proto

#ifndef PROTOBUF_protocol_2eproto__INCLUDED
#define PROTOBUF_protocol_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_util.h>
// @@protoc_insertion_point(includes)

namespace proto3 {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_protocol_2eproto();
void protobuf_AssignDesc_protocol_2eproto();
void protobuf_ShutdownFile_protocol_2eproto();

class MsgBase;
class MsgCHCharge;
class MsgCHLogin;
class MsgCHQuery;
class MsgCHRegister;
class MsgCLEnter;
class MsgCLReplay;
class MsgCLReplays;
class MsgCNConnect;
class MsgCNCreate;
class MsgCNDiscard;
class MsgCNDismissAck;
class MsgCNDismissSync;
class MsgCNEngage;
class MsgCNJoin;
class MsgCNMeld;
class MsgCNReady;
class MsgCNRevive;
class MsgCNStats;
class MsgCSLogin;
class MsgHCCharge;
class MsgHCLogin;
class MsgHCQuery;
class MsgHCRegister;
class MsgLCEnter;
class MsgLCReplay;
class MsgLCReplays;
class MsgNCConnect;
class MsgNCCreate;
class MsgNCDeal;
class MsgNCDiscard;
class MsgNCDismissAck;
class MsgNCDismissSync;
class MsgNCDraw;
class MsgNCEngage;
class MsgNCFinish;
class MsgNCJoin;
class MsgNCMeld;
class MsgNCReady;
class MsgNCRevive;
class MsgNCSettle;
class MsgSCLogin;
class achv_t;
class bunch_t;
class charge_t;
class game_t;
class key_value;
class lobby_t;
class play_t;
class player_t;
class user_t;
class win_t;

enum pb_enum {
  UNKNOWN = 0,
  NONE = 0,
  SUCCEESS = 0,
  DEV_PC = 0,
  DEV_PS4 = 1,
  DEV_XBOX = 2,
  DEV_IOS = 3,
  DEV_ANDROID = 4,
  DEV_WINPHONE = 5,
  GAME_DDZ = 20,
  GAME_PDK = 21,
  GAME_PHZ = 22,
  GAME_MJ = 23,
  OPTION_ROUND = 10,
  OPTION_ANTI = 11,
  OPTION_CATEGORY = 12,
  OPTION_DEFINED_CARDS = 13,
  CATEGORY_EASY = 10,
  CATEGORY_NORMAL = 11,
  CATEGORY_HARD = 12,
  MJ_SICHUAN = 10,
  MJ_GUANGDONG = 11,
  MJ_HUNAN = 12,
  MJ_FUJIAN = 13,
  MJ_ZHEJIANG = 14,
  DDZ_CLASIC = 10,
  DDZ_FOR4 = 11,
  PHZ_SY = 0,
  PHZ_SYBP = 1,
  PHZ_LD = 2,
  PHZ_HH = 3,
  PHZ_CD_QMT = 4,
  PHZ_CD_HHD = 5,
  PHZ_CS = 6,
  PHZ_XX_GHZ = 7,
  PHZ_HY = 8,
  PHZ_YZ_SBW = 9,
  PHZ_PEGHZ = 10,
  PHZ_SC_EQS = 11,
  PHZ_CZ = 12,
  PHZ_GX = 13,
  PHZ_MAX = 14,
  OP_PASS = 0,
  OP_DISCARD = 1,
  BUNCH_INVALID = 10,
  BUNCH_A = 11,
  BUNCH_AA = 12,
  BUNCH_AAA = 13,
  BUNCH_AAAA = 14,
  BUNCH_AAAAB = 15,
  BUNCH_AAAB = 16,
  BUNCH_ABC = 17,
  PHZ_AA = 12,
  PHZ_ABC = 18,
  PHZ_BBB = 20,
  PHZ_AAA = 21,
  PHZ_AAAwei = 22,
  PHZ_AAAchou = 23,
  PHZ_BBB_B = 24,
  PHZ_BBBBdesk = 25,
  PHZ_B4B3 = 26,
  PHZ_AAAAdesk = 27,
  PHZ_AAAA = 28,
  PHZ_AAAAstart = 29,
  BUNCH_WIN = 100,
  WIN_First = 1,
  WIN_Second = 2,
  WIN_Middle = 5,
  WIN_MenFlush = 6,
  WIN_Flush = 7,
  WIN_MajorPair = 9,
  WIN_FlushPair = 10,
  WIN_Dragon7Pair = 11,
  WIN_19 = 12,
  WIN_Flush7Pair = 13,
  WIN_Major7Pair = 14,
  WIN_FlushDragon7Pair = 15,
  WIN_Flush19 = 16,
  WIN_NORMAL = 0,
  WIN_TIAN = 1,
  WIN_DI = 2,
  WIN_LAST = 3,
  WIN_TING = 4,
  WIN_13RED = 5,
  WIN_RED = 6,
  WIN_BLACK = 7,
  WIN_BIG = 8,
  WIN_SMALL = 9,
  WIN_SINGLE = 10,
  WIN_PAIR = 11,
  WIN_MONKEY = 12,
  WIN_YELLOW = 13,
  WIN_SELF = 14,
  WIN_30 = 15,
  WIN_20 = 16,
  WIN_FIRE = 17,
  WIN_PLATE = 18,
  WIN_2RED = 19,
  WIN_3RED = 20,
  WIN_4RED = 21,
  WIN_DOUBLE = 22,
  WIN_10RED = 23,
  WIN_5FU = 24,
  WIN_RUNDUAL = 25,
  WIN_7PAIR = 26,
  WIN_DUALDRA = 27,
  WIN_REPEAT = 28,
  WIN_MAX = 29,
  WINWEI = 0,
  WINTI = 1,
  WINSAND = 2,
  WINSID = 3,
  WINPENG = 4,
  WINWPAO = 5,
  WINPPAO = 6,
  WINPING = 7,
  _WINMAX = 8,
  ACHV_BOMB = 10,
  ACHV_HEAVEN = 11,
  ACHV_HELL = 12,
  ACHV_KEY_POINT = 0,
  ACHV_KEY_CHUNK = 1,
  ACHV_KEY_SCORE = 2,
  ACHV_KEY_MULTIPLE = 3,
  DEF_MAX_NODES = 1000,
  DEF_MAX_GAMES_PER_NODE = 100000,
  ERR_FAILED = 100,
  ERR_CANCELLED = 101,
  ERR_PROTOCOL = 102,
  ERR_PARAM = 103,
  ERR_DUPLICATED = 104,
  ERR_NOTEXISTS = 105,
  ERR_UNKNOWN = 999,
  pb_enum_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  pb_enum_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool pb_enum_IsValid(int value);
const pb_enum pb_enum_MIN = UNKNOWN;
const pb_enum pb_enum_MAX = DEF_MAX_GAMES_PER_NODE;
const int pb_enum_ARRAYSIZE = pb_enum_MAX + 1;

enum pb_msg {
  MSG_INVALID = 0,
  MSG_BEGIN = 1000,
  MSG_RAW = 1001,
  MSG_CS_BEGIN = 2000,
  MSG_CS_LOGIN = 2001,
  MSG_SC_LOGIN = 2002,
  MSG_CS_END = 3999,
  MSG_CL_BEGIN = 4000,
  MSG_CL_ENTER = 4001,
  MSG_LC_ENTER = 4002,
  MSG_CL_REPLAYS = 4011,
  MSG_LC_REPLAYS = 4012,
  MSG_CL_REPLAY = 4013,
  MSG_LC_REPLAY = 4014,
  MSG_LC_EXIT = 4050,
  MSG_CL_END = 4999,
  MSG_CH_BEGIN = 5000,
  MSG_CH_LOGIN = 5001,
  MSG_HC_LOGIN = 5002,
  MSG_CH_REGISTER = 5003,
  MSG_HC_REGISTER = 5004,
  MSG_CH_CHARGE = 5005,
  MSG_HC_CHARGE = 5006,
  MSG_CH_QUERY = 5007,
  MSG_HC_QUERY = 5008,
  MSG_CH_FORGET = 5009,
  MSG_HC_FORGET = 5010,
  MSG_CH_RESET_PSWD = 5011,
  MSG_HC_RESET_PSWD = 5012,
  MSG_CH_END = 5999,
  MSG_CN_BEGIN = 6000,
  MSG_CN_CONNECT = 6001,
  MSG_NC_CONNECT = 6002,
  MSG_CN_REVIVE = 6003,
  MSG_NC_REVIVE = 6004,
  MSG_CN_CREATE = 6011,
  MSG_NC_CREATE = 6012,
  MSG_CN_JOIN = 6013,
  MSG_NC_JOIN = 6014,
  MSG_CN_DISMISS_SYNC = 6021,
  MSG_NC_DISMISS_SYNC = 6022,
  MSG_CN_DISMISS_ACK = 6023,
  MSG_NC_DISMISS_ACK = 6024,
  MSG_CN_READY = 6031,
  MSG_NC_READY = 6032,
  MSG_CN_ENGAGE = 6033,
  MSG_NC_ENGAGE = 6034,
  MSG_NC_DEAL = 6035,
  MSG_NC_SETTLE = 6036,
  MSG_NC_FINISH = 6038,
  MSG_CN_DISCARD = 6051,
  MSG_NC_DISCARD = 6052,
  MSG_CN_MELD = 6053,
  MSG_NC_MELD = 6054,
  MSG_NC_DRAW = 6055,
  MSG_CN_STATS = 6081,
  MSG_CN_END = 6999,
  MSG_END = 9999,
  pb_msg_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  pb_msg_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool pb_msg_IsValid(int value);
const pb_msg pb_msg_MIN = MSG_INVALID;
const pb_msg pb_msg_MAX = MSG_END;
const int pb_msg_ARRAYSIZE = pb_msg_MAX + 1;

// ===================================================================

class key_value : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:proto3.key_value) */ {
 public:
  key_value();
  virtual ~key_value();

  key_value(const key_value& from);

  inline key_value& operator=(const key_value& from) {
    CopyFrom(from);
    return *this;
  }

  static const key_value& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const key_value* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(key_value* other);

  // implements Message ----------------------------------------------

  inline key_value* New() const { return New(NULL); }

  key_value* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const key_value& from);
  void MergeFrom(const key_value& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(key_value* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string key = 1;
  void clear_key();
  static const int kKeyFieldNumber = 1;
  const ::std::string& key() const;
  void set_key(const ::std::string& value);
  void set_key(const char* value);
  void set_key(const char* value, size_t size);
  ::std::string* mutable_key();
  ::std::string* release_key();
  void set_allocated_key(::std::string* key);

  // optional string value = 2;
  void clear_value();
  static const int kValueFieldNumber = 2;
  const ::std::string& value() const;
  void set_value(const ::std::string& value);
  void set_value(const char* value);
  void set_value(const char* value, size_t size);
  ::std::string* mutable_value();
  ::std::string* release_value();
  void set_allocated_value(::std::string* value);

  // optional .proto3.pb_enum ikey = 3;
  void clear_ikey();
  static const int kIkeyFieldNumber = 3;
  ::proto3::pb_enum ikey() const;
  void set_ikey(::proto3::pb_enum value);

  // optional int32 ivalue = 4;
  void clear_ivalue();
  static const int kIvalueFieldNumber = 4;
  ::google::protobuf::int32 ivalue() const;
  void set_ivalue(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto3.key_value)
 private:

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr key_;
  ::google::protobuf::internal::ArenaStringPtr value_;
  int ikey_;
  ::google::protobuf::int32 ivalue_;
  mutable int _cached_size_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_protocol_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_protocol_2eproto();
  #endif
  friend void protobuf_AssignDesc_protocol_2eproto();
  friend void protobuf_ShutdownFile_protocol_2eproto();

  void InitAsDefaultInstance();
  static key_value* default_instance_;
};
// -------------------------------------------------------------------

class user_t : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:proto3.user_t) */ {
 public:
  user_t();
  virtual ~user_t();

  user_t(const user_t& from);

  inline user_t& operator=(const user_t& from) {
    CopyFrom(from);
    return *this;
  }

  static const user_t& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const user_t* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(user_t* other);

  // implements Message ----------------------------------------------

  inline user_t* New() const { return New(NULL); }

  user_t* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const user_t& from);
  void MergeFrom(const user_t& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(user_t* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string uid = 1;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  const ::std::string& uid() const;
  void set_uid(const ::std::string& value);
  void set_uid(const char* value);
  void set_uid(const char* value, size_t size);
  ::std::string* mutable_uid();
  ::std::string* release_uid();
  void set_allocated_uid(::std::string* uid);

  // optional int32 flag = 2;
  void clear_flag();
  static const int kFlagFieldNumber = 2;
  ::google::protobuf::int32 flag() const;
  void set_flag(::google::protobuf::int32 value);

  // optional .proto3.pb_enum dev_type = 3;
  void clear_dev_type();
  static const int kDevTypeFieldNumber = 3;
  ::proto3::pb_enum dev_type() const;
  void set_dev_type(::proto3::pb_enum value);

  // optional string account = 4;
  void clear_account();
  static const int kAccountFieldNumber = 4;
  const ::std::string& account() const;
  void set_account(const ::std::string& value);
  void set_account(const char* value);
  void set_account(const char* value, size_t size);
  ::std::string* mutable_account();
  ::std::string* release_account();
  void set_allocated_account(::std::string* account);

  // optional string name = 5;
  void clear_name();
  static const int kNameFieldNumber = 5;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional string pswd = 6;
  void clear_pswd();
  static const int kPswdFieldNumber = 6;
  const ::std::string& pswd() const;
  void set_pswd(const ::std::string& value);
  void set_pswd(const char* value);
  void set_pswd(const char* value, size_t size);
  ::std::string* mutable_pswd();
  ::std::string* release_pswd();
  void set_allocated_pswd(::std::string* pswd);

  // optional int32 gender = 7;
  void clear_gender();
  static const int kGenderFieldNumber = 7;
  ::google::protobuf::int32 gender() const;
  void set_gender(::google::protobuf::int32 value);

  // optional int32 age = 8;
  void clear_age();
  static const int kAgeFieldNumber = 8;
  ::google::protobuf::int32 age() const;
  void set_age(::google::protobuf::int32 value);

  // optional string udid = 9;
  void clear_udid();
  static const int kUdidFieldNumber = 9;
  const ::std::string& udid() const;
  void set_udid(const ::std::string& value);
  void set_udid(const char* value);
  void set_udid(const char* value, size_t size);
  ::std::string* mutable_udid();
  ::std::string* release_udid();
  void set_allocated_udid(::std::string* udid);

  // @@protoc_insertion_point(class_scope:proto3.user_t)
 private:

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr uid_;
  ::google::protobuf::int32 flag_;
  int dev_type_;
  ::google::protobuf::internal::ArenaStringPtr account_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr pswd_;
  ::google::protobuf::int32 gender_;
  ::google::protobuf::int32 age_;
  ::google::protobuf::internal::ArenaStringPtr udid_;
  mutable int _cached_size_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_protocol_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_protocol_2eproto();
  #endif
  friend void protobuf_AssignDesc_protocol_2eproto();
  friend void protobuf_ShutdownFile_protocol_2eproto();

  void InitAsDefaultInstance();
  static user_t* default_instance_;
};
// -------------------------------------------------------------------

class player_t : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:proto3.player_t) */ {
 public:
  player_t();
  virtual ~player_t();

  player_t(const player_t& from);

  inline player_t& operator=(const player_t& from) {
    CopyFrom(from);
    return *this;
  }

  static const player_t& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const player_t* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(player_t* other);

  // implements Message ----------------------------------------------

  inline player_t* New() const { return New(NULL); }

  player_t* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const player_t& from);
  void MergeFrom(const player_t& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(player_t* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string uid = 1;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  const ::std::string& uid() const;
  void set_uid(const ::std::string& value);
  void set_uid(const char* value);
  void set_uid(const char* value, size_t size);
  ::std::string* mutable_uid();
  ::std::string* release_uid();
  void set_allocated_uid(::std::string* uid);

  // optional uint32 pid = 2;
  void clear_pid();
  static const int kPidFieldNumber = 2;
  ::google::protobuf::uint32 pid() const;
  void set_pid(::google::protobuf::uint32 value);

  // optional int32 level = 3;
  void clear_level();
  static const int kLevelFieldNumber = 3;
  ::google::protobuf::int32 level() const;
  void set_level(::google::protobuf::int32 value);

  // optional int32 xp = 4;
  void clear_xp();
  static const int kXpFieldNumber = 4;
  ::google::protobuf::int32 xp() const;
  void set_xp(::google::protobuf::int32 value);

  // optional int32 silver = 5;
  void clear_silver();
  static const int kSilverFieldNumber = 5;
  ::google::protobuf::int32 silver() const;
  void set_silver(::google::protobuf::int32 value);

  // optional int32 gold = 6;
  void clear_gold();
  static const int kGoldFieldNumber = 6;
  ::google::protobuf::int32 gold() const;
  void set_gold(::google::protobuf::int32 value);

  // optional int32 energy = 7;
  void clear_energy();
  static const int kEnergyFieldNumber = 7;
  ::google::protobuf::int32 energy() const;
  void set_energy(::google::protobuf::int32 value);

  // repeated .proto3.win_t wins = 8;
  int wins_size() const;
  void clear_wins();
  static const int kWinsFieldNumber = 8;
  const ::proto3::win_t& wins(int index) const;
  ::proto3::win_t* mutable_wins(int index);
  ::proto3::win_t* add_wins();
  ::google::protobuf::RepeatedPtrField< ::proto3::win_t >*
      mutable_wins();
  const ::google::protobuf::RepeatedPtrField< ::proto3::win_t >&
      wins() const;

  // repeated .proto3.achv_t achvs = 9;
  int achvs_size() const;
  void clear_achvs();
  static const int kAchvsFieldNumber = 9;
  const ::proto3::achv_t& achvs(int index) const;
  ::proto3::achv_t* mutable_achvs(int index);
  ::proto3::achv_t* add_achvs();
  ::google::protobuf::RepeatedPtrField< ::proto3::achv_t >*
      mutable_achvs();
  const ::google::protobuf::RepeatedPtrField< ::proto3::achv_t >&
      achvs() const;

  // @@protoc_insertion_point(class_scope:proto3.player_t)
 private:

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr uid_;
  ::google::protobuf::uint32 pid_;
  ::google::protobuf::int32 level_;
  ::google::protobuf::int32 xp_;
  ::google::protobuf::int32 silver_;
  ::google::protobuf::int32 gold_;
  ::google::protobuf::int32 energy_;
  ::google::protobuf::RepeatedPtrField< ::proto3::win_t > wins_;
  ::google::protobuf::RepeatedPtrField< ::proto3::achv_t > achvs_;
  mutable int _cached_size_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_protocol_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_protocol_2eproto();
  #endif
  friend void protobuf_AssignDesc_protocol_2eproto();
  friend void protobuf_ShutdownFile_protocol_2eproto();

  void InitAsDefaultInstance();
  static player_t* default_instance_;
};
// -------------------------------------------------------------------

class win_t : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:proto3.win_t) */ {
 public:
  win_t();
  virtual ~win_t();

  win_t(const win_t& from);

  inline win_t& operator=(const win_t& from) {
    CopyFrom(from);
    return *this;
  }

  static const win_t& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const win_t* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(win_t* other);

  // implements Message ----------------------------------------------

  inline win_t* New() const { return New(NULL); }

  win_t* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const win_t& from);
  void MergeFrom(const win_t& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(win_t* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string uid = 1;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  const ::std::string& uid() const;
  void set_uid(const ::std::string& value);
  void set_uid(const char* value);
  void set_uid(const char* value, size_t size);
  ::std::string* mutable_uid();
  ::std::string* release_uid();
  void set_allocated_uid(::std::string* uid);

  // optional int32 gid = 2;
  void clear_gid();
  static const int kGidFieldNumber = 2;
  ::google::protobuf::int32 gid() const;
  void set_gid(::google::protobuf::int32 value);

  // optional int32 win = 3;
  void clear_win();
  static const int kWinFieldNumber = 3;
  ::google::protobuf::int32 win() const;
  void set_win(::google::protobuf::int32 value);

  // optional int32 lose = 4;
  void clear_lose();
  static const int kLoseFieldNumber = 4;
  ::google::protobuf::int32 lose() const;
  void set_lose(::google::protobuf::int32 value);

  // optional int32 draw = 5;
  void clear_draw();
  static const int kDrawFieldNumber = 5;
  ::google::protobuf::int32 draw() const;
  void set_draw(::google::protobuf::int32 value);

  // optional int32 score = 6;
  void clear_score();
  static const int kScoreFieldNumber = 6;
  ::google::protobuf::int32 score() const;
  void set_score(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto3.win_t)
 private:

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr uid_;
  ::google::protobuf::int32 gid_;
  ::google::protobuf::int32 win_;
  ::google::protobuf::int32 lose_;
  ::google::protobuf::int32 draw_;
  ::google::protobuf::int32 score_;
  mutable int _cached_size_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_protocol_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_protocol_2eproto();
  #endif
  friend void protobuf_AssignDesc_protocol_2eproto();
  friend void protobuf_ShutdownFile_protocol_2eproto();

  void InitAsDefaultInstance();
  static win_t* default_instance_;
};
// -------------------------------------------------------------------

class achv_t : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:proto3.achv_t) */ {
 public:
  achv_t();
  virtual ~achv_t();

  achv_t(const achv_t& from);

  inline achv_t& operator=(const achv_t& from) {
    CopyFrom(from);
    return *this;
  }

  static const achv_t& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const achv_t* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(achv_t* other);

  // implements Message ----------------------------------------------

  inline achv_t* New() const { return New(NULL); }

  achv_t* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const achv_t& from);
  void MergeFrom(const achv_t& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(achv_t* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto3.pb_enum type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::proto3::pb_enum type() const;
  void set_type(::proto3::pb_enum value);

  // optional string name = 2;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional int32 key = 3;
  void clear_key();
  static const int kKeyFieldNumber = 3;
  ::google::protobuf::int32 key() const;
  void set_key(::google::protobuf::int32 value);

  // optional int32 value = 4;
  void clear_value();
  static const int kValueFieldNumber = 4;
  ::google::protobuf::int32 value() const;
  void set_value(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto3.achv_t)
 private:

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  int type_;
  ::google::protobuf::int32 key_;
  ::google::protobuf::int32 value_;
  mutable int _cached_size_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_protocol_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_protocol_2eproto();
  #endif
  friend void protobuf_AssignDesc_protocol_2eproto();
  friend void protobuf_ShutdownFile_protocol_2eproto();

  void InitAsDefaultInstance();
  static achv_t* default_instance_;
};
// -------------------------------------------------------------------

class game_t : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:proto3.game_t) */ {
 public:
  game_t();
  virtual ~game_t();

  game_t(const game_t& from);

  inline game_t& operator=(const game_t& from) {
    CopyFrom(from);
    return *this;
  }

  static const game_t& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const game_t* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(game_t* other);

  // implements Message ----------------------------------------------

  inline game_t* New() const { return New(NULL); }

  game_t* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const game_t& from);
  void MergeFrom(const game_t& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(game_t* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // optional uint32 version = 2;
  void clear_version();
  static const int kVersionFieldNumber = 2;
  ::google::protobuf::uint32 version() const;
  void set_version(::google::protobuf::uint32 value);

  // optional string ip = 3;
  void clear_ip();
  static const int kIpFieldNumber = 3;
  const ::std::string& ip() const;
  void set_ip(const ::std::string& value);
  void set_ip(const char* value);
  void set_ip(const char* value, size_t size);
  ::std::string* mutable_ip();
  ::std::string* release_ip();
  void set_allocated_ip(::std::string* ip);

  // optional uint32 port = 4;
  void clear_port();
  static const int kPortFieldNumber = 4;
  ::google::protobuf::uint32 port() const;
  void set_port(::google::protobuf::uint32 value);

  // optional int32 occupied = 5;
  void clear_occupied();
  static const int kOccupiedFieldNumber = 5;
  ::google::protobuf::int32 occupied() const;
  void set_occupied(::google::protobuf::int32 value);

  // optional int32 capacity = 6;
  void clear_capacity();
  static const int kCapacityFieldNumber = 6;
  ::google::protobuf::int32 capacity() const;
  void set_capacity(::google::protobuf::int32 value);

  // optional string desc = 7;
  void clear_desc();
  static const int kDescFieldNumber = 7;
  const ::std::string& desc() const;
  void set_desc(const ::std::string& value);
  void set_desc(const char* value);
  void set_desc(const char* value, size_t size);
  ::std::string* mutable_desc();
  ::std::string* release_desc();
  void set_allocated_desc(::std::string* desc);

  // optional int32 status = 8;
  void clear_status();
  static const int kStatusFieldNumber = 8;
  ::google::protobuf::int32 status() const;
  void set_status(::google::protobuf::int32 value);

  // optional uint32 openning_time = 9;
  void clear_openning_time();
  static const int kOpenningTimeFieldNumber = 9;
  ::google::protobuf::uint32 openning_time() const;
  void set_openning_time(::google::protobuf::uint32 value);

  // optional uint32 maintain_start = 10;
  void clear_maintain_start();
  static const int kMaintainStartFieldNumber = 10;
  ::google::protobuf::uint32 maintain_start() const;
  void set_maintain_start(::google::protobuf::uint32 value);

  // optional uint32 maintain_end = 11;
  void clear_maintain_end();
  static const int kMaintainEndFieldNumber = 11;
  ::google::protobuf::uint32 maintain_end() const;
  void set_maintain_end(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto3.game_t)
 private:

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  bool _is_default_instance_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::uint32 version_;
  ::google::protobuf::internal::ArenaStringPtr ip_;
  ::google::protobuf::uint32 port_;
  ::google::protobuf::int32 occupied_;
  ::google::protobuf::internal::ArenaStringPtr desc_;
  ::google::protobuf::int32 capacity_;
  ::google::protobuf::int32 status_;
  ::google::protobuf::uint32 openning_time_;
  ::google::protobuf::uint32 maintain_start_;
  ::google::protobuf::uint32 maintain_end_;
  mutable int _cached_size_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_protocol_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_protocol_2eproto();
  #endif
  friend void protobuf_AssignDesc_protocol_2eproto();
  friend void protobuf_ShutdownFile_protocol_2eproto();

  void InitAsDefaultInstance();
  static game_t* default_instance_;
};
// -------------------------------------------------------------------

class lobby_t : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:proto3.lobby_t) */ {
 public:
  lobby_t();
  virtual ~lobby_t();

  lobby_t(const lobby_t& from);

  inline lobby_t& operator=(const lobby_t& from) {
    CopyFrom(from);
    return *this;
  }

  static const lobby_t& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const lobby_t* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(lobby_t* other);

  // implements Message ----------------------------------------------

  inline lobby_t* New() const { return New(NULL); }

  lobby_t* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const lobby_t& from);
  void MergeFrom(const lobby_t& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(lobby_t* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 version = 1;
  void clear_version();
  static const int kVersionFieldNumber = 1;
  ::google::protobuf::uint32 version() const;
  void set_version(::google::protobuf::uint32 value);

  // optional string ip = 2;
  void clear_ip();
  static const int kIpFieldNumber = 2;
  const ::std::string& ip() const;
  void set_ip(const ::std::string& value);
  void set_ip(const char* value);
  void set_ip(const char* value, size_t size);
  ::std::string* mutable_ip();
  ::std::string* release_ip();
  void set_allocated_ip(::std::string* ip);

  // optional uint32 port = 3;
  void clear_port();
  static const int kPortFieldNumber = 3;
  ::google::protobuf::uint32 port() const;
  void set_port(::google::protobuf::uint32 value);

  // optional int32 occupied = 4;
  void clear_occupied();
  static const int kOccupiedFieldNumber = 4;
  ::google::protobuf::int32 occupied() const;
  void set_occupied(::google::protobuf::int32 value);

  // optional int32 capacity = 5;
  void clear_capacity();
  static const int kCapacityFieldNumber = 5;
  ::google::protobuf::int32 capacity() const;
  void set_capacity(::google::protobuf::int32 value);

  // optional string desc = 6;
  void clear_desc();
  static const int kDescFieldNumber = 6;
  const ::std::string& desc() const;
  void set_desc(const ::std::string& value);
  void set_desc(const char* value);
  void set_desc(const char* value, size_t size);
  ::std::string* mutable_desc();
  ::std::string* release_desc();
  void set_allocated_desc(::std::string* desc);

  // optional string bulletin = 7;
  void clear_bulletin();
  static const int kBulletinFieldNumber = 7;
  const ::std::string& bulletin() const;
  void set_bulletin(const ::std::string& value);
  void set_bulletin(const char* value);
  void set_bulletin(const char* value, size_t size);
  ::std::string* mutable_bulletin();
  ::std::string* release_bulletin();
  void set_allocated_bulletin(::std::string* bulletin);

  // optional int32 status = 8;
  void clear_status();
  static const int kStatusFieldNumber = 8;
  ::google::protobuf::int32 status() const;
  void set_status(::google::protobuf::int32 value);

  // optional uint32 maintain_start = 9;
  void clear_maintain_start();
  static const int kMaintainStartFieldNumber = 9;
  ::google::protobuf::uint32 maintain_start() const;
  void set_maintain_start(::google::protobuf::uint32 value);

  // optional uint32 maintain_end = 10;
  void clear_maintain_end();
  static const int kMaintainEndFieldNumber = 10;
  ::google::protobuf::uint32 maintain_end() const;
  void set_maintain_end(::google::protobuf::uint32 value);

  // optional uint32 time_zone = 11;
  void clear_time_zone();
  static const int kTimeZoneFieldNumber = 11;
  ::google::protobuf::uint32 time_zone() const;
  void set_time_zone(::google::protobuf::uint32 value);

  // repeated .proto3.game_t games = 12;
  int games_size() const;
  void clear_games();
  static const int kGamesFieldNumber = 12;
  const ::proto3::game_t& games(int index) const;
  ::proto3::game_t* mutable_games(int index);
  ::proto3::game_t* add_games();
  ::google::protobuf::RepeatedPtrField< ::proto3::game_t >*
      mutable_games();
  const ::google::protobuf::RepeatedPtrField< ::proto3::game_t >&
      games() const;

  // @@protoc_insertion_point(class_scope:proto3.lobby_t)
 private:

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr ip_;
  ::google::protobuf::uint32 version_;
  ::google::protobuf::uint32 port_;
  ::google::protobuf::int32 occupied_;
  ::google::protobuf::int32 capacity_;
  ::google::protobuf::internal::ArenaStringPtr desc_;
  ::google::protobuf::internal::ArenaStringPtr bulletin_;
  ::google::protobuf::int32 status_;
  ::google::protobuf::uint32 maintain_start_;
  ::google::protobuf::uint32 maintain_end_;
  ::google::protobuf::uint32 time_zone_;
  ::google::protobuf::RepeatedPtrField< ::proto3::game_t > games_;
  mutable int _cached_size_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_protocol_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_protocol_2eproto();
  #endif
  friend void protobuf_AssignDesc_protocol_2eproto();
  friend void protobuf_ShutdownFile_protocol_2eproto();

  void InitAsDefaultInstance();
  static lobby_t* default_instance_;
};
// -------------------------------------------------------------------

class bunch_t : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:proto3.bunch_t) */ {
 public:
  bunch_t();
  virtual ~bunch_t();

  bunch_t(const bunch_t& from);

  inline bunch_t& operator=(const bunch_t& from) {
    CopyFrom(from);
    return *this;
  }

  static const bunch_t& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const bunch_t* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(bunch_t* other);

  // implements Message ----------------------------------------------

  inline bunch_t* New() const { return New(NULL); }

  bunch_t* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const bunch_t& from);
  void MergeFrom(const bunch_t& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(bunch_t* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto3.pb_enum type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::proto3::pb_enum type() const;
  void set_type(::proto3::pb_enum value);

  // optional int32 pos = 2;
  void clear_pos();
  static const int kPosFieldNumber = 2;
  ::google::protobuf::int32 pos() const;
  void set_pos(::google::protobuf::int32 value);

  // repeated int32 pawns = 3;
  int pawns_size() const;
  void clear_pawns();
  static const int kPawnsFieldNumber = 3;
  ::google::protobuf::int32 pawns(int index) const;
  void set_pawns(int index, ::google::protobuf::int32 value);
  void add_pawns(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      pawns() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_pawns();

  // repeated .proto3.bunch_t child = 4;
  int child_size() const;
  void clear_child();
  static const int kChildFieldNumber = 4;
  const ::proto3::bunch_t& child(int index) const;
  ::proto3::bunch_t* mutable_child(int index);
  ::proto3::bunch_t* add_child();
  ::google::protobuf::RepeatedPtrField< ::proto3::bunch_t >*
      mutable_child();
  const ::google::protobuf::RepeatedPtrField< ::proto3::bunch_t >&
      child() const;

  // @@protoc_insertion_point(class_scope:proto3.bunch_t)
 private:

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  bool _is_default_instance_;
  int type_;
  ::google::protobuf::int32 pos_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > pawns_;
  mutable int _pawns_cached_byte_size_;
  ::google::protobuf::RepeatedPtrField< ::proto3::bunch_t > child_;
  mutable int _cached_size_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_protocol_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_protocol_2eproto();
  #endif
  friend void protobuf_AssignDesc_protocol_2eproto();
  friend void protobuf_ShutdownFile_protocol_2eproto();

  void InitAsDefaultInstance();
  static bunch_t* default_instance_;
};
// -------------------------------------------------------------------

class play_t : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:proto3.play_t) */ {
 public:
  play_t();
  virtual ~play_t();

  play_t(const play_t& from);

  inline play_t& operator=(const play_t& from) {
    CopyFrom(from);
    return *this;
  }

  static const play_t& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const play_t* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(play_t* other);

  // implements Message ----------------------------------------------

  inline play_t* New() const { return New(NULL); }

  play_t* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const play_t& from);
  void MergeFrom(const play_t& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(play_t* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto3.player_t player = 1;
  bool has_player() const;
  void clear_player();
  static const int kPlayerFieldNumber = 1;
  const ::proto3::player_t& player() const;
  ::proto3::player_t* mutable_player();
  ::proto3::player_t* release_player();
  void set_allocated_player(::proto3::player_t* player);

  // repeated int32 hands = 2;
  int hands_size() const;
  void clear_hands();
  static const int kHandsFieldNumber = 2;
  ::google::protobuf::int32 hands(int index) const;
  void set_hands(int index, ::google::protobuf::int32 value);
  void add_hands(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      hands() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_hands();

  // repeated int32 discards = 3;
  int discards_size() const;
  void clear_discards();
  static const int kDiscardsFieldNumber = 3;
  ::google::protobuf::int32 discards(int index) const;
  void set_discards(int index, ::google::protobuf::int32 value);
  void add_discards(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      discards() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_discards();

  // repeated .proto3.bunch_t bunch = 4;
  int bunch_size() const;
  void clear_bunch();
  static const int kBunchFieldNumber = 4;
  const ::proto3::bunch_t& bunch(int index) const;
  ::proto3::bunch_t* mutable_bunch(int index);
  ::proto3::bunch_t* add_bunch();
  ::google::protobuf::RepeatedPtrField< ::proto3::bunch_t >*
      mutable_bunch();
  const ::google::protobuf::RepeatedPtrField< ::proto3::bunch_t >&
      bunch() const;

  // optional int32 selected_card = 5;
  void clear_selected_card();
  static const int kSelectedCardFieldNumber = 5;
  ::google::protobuf::int32 selected_card() const;
  void set_selected_card(::google::protobuf::int32 value);

  // optional int32 win = 6;
  void clear_win();
  static const int kWinFieldNumber = 6;
  ::google::protobuf::int32 win() const;
  void set_win(::google::protobuf::int32 value);

  // repeated int32 winby = 7;
  int winby_size() const;
  void clear_winby();
  static const int kWinbyFieldNumber = 7;
  ::google::protobuf::int32 winby(int index) const;
  void set_winby(int index, ::google::protobuf::int32 value);
  void add_winby(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      winby() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_winby();

  // optional int32 point = 8;
  void clear_point();
  static const int kPointFieldNumber = 8;
  ::google::protobuf::int32 point() const;
  void set_point(::google::protobuf::int32 value);

  // optional int32 chunk = 9;
  void clear_chunk();
  static const int kChunkFieldNumber = 9;
  ::google::protobuf::int32 chunk() const;
  void set_chunk(::google::protobuf::int32 value);

  // optional int32 multiple = 10;
  void clear_multiple();
  static const int kMultipleFieldNumber = 10;
  ::google::protobuf::int32 multiple() const;
  void set_multiple(::google::protobuf::int32 value);

  // optional int32 score = 11;
  void clear_score();
  static const int kScoreFieldNumber = 11;
  ::google::protobuf::int32 score() const;
  void set_score(::google::protobuf::int32 value);

  // optional int32 total = 12;
  void clear_total();
  static const int kTotalFieldNumber = 12;
  ::google::protobuf::int32 total() const;
  void set_total(::google::protobuf::int32 value);

  // optional int32 seat = 13;
  void clear_seat();
  static const int kSeatFieldNumber = 13;
  ::google::protobuf::int32 seat() const;
  void set_seat(::google::protobuf::int32 value);

  // repeated .proto3.achv_t achvs = 14;
  int achvs_size() const;
  void clear_achvs();
  static const int kAchvsFieldNumber = 14;
  const ::proto3::achv_t& achvs(int index) const;
  ::proto3::achv_t* mutable_achvs(int index);
  ::proto3::achv_t* add_achvs();
  ::google::protobuf::RepeatedPtrField< ::proto3::achv_t >*
      mutable_achvs();
  const ::google::protobuf::RepeatedPtrField< ::proto3::achv_t >&
      achvs() const;

  // @@protoc_insertion_point(class_scope:proto3.play_t)
 private:

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  bool _is_default_instance_;
  ::proto3::player_t* player_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > hands_;
  mutable int _hands_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > discards_;
  mutable int _discards_cached_byte_size_;
  ::google::protobuf::RepeatedPtrField< ::proto3::bunch_t > bunch_;
  ::google::protobuf::int32 selected_card_;
  ::google::protobuf::int32 win_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > winby_;
  mutable int _winby_cached_byte_size_;
  ::google::protobuf::int32 point_;
  ::google::protobuf::int32 chunk_;
  ::google::protobuf::int32 multiple_;
  ::google::protobuf::int32 score_;
  ::google::protobuf::int32 total_;
  ::google::protobuf::int32 seat_;
  ::google::protobuf::RepeatedPtrField< ::proto3::achv_t > achvs_;
  mutable int _cached_size_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_protocol_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_protocol_2eproto();
  #endif
  friend void protobuf_AssignDesc_protocol_2eproto();
  friend void protobuf_ShutdownFile_protocol_2eproto();

  void InitAsDefaultInstance();
  static play_t* default_instance_;
};
// -------------------------------------------------------------------

class charge_t : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:proto3.charge_t) */ {
 public:
  charge_t();
  virtual ~charge_t();

  charge_t(const charge_t& from);

  inline charge_t& operator=(const charge_t& from) {
    CopyFrom(from);
    return *this;
  }

  static const charge_t& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const charge_t* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(charge_t* other);

  // implements Message ----------------------------------------------

  inline charge_t* New() const { return New(NULL); }

  charge_t* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const charge_t& from);
  void MergeFrom(const charge_t& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(charge_t* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string phone = 1;
  void clear_phone();
  static const int kPhoneFieldNumber = 1;
  const ::std::string& phone() const;
  void set_phone(const ::std::string& value);
  void set_phone(const char* value);
  void set_phone(const char* value, size_t size);
  ::std::string* mutable_phone();
  ::std::string* release_phone();
  void set_allocated_phone(::std::string* phone);

  // optional string uid = 2;
  void clear_uid();
  static const int kUidFieldNumber = 2;
  const ::std::string& uid() const;
  void set_uid(const ::std::string& value);
  void set_uid(const char* value);
  void set_uid(const char* value, size_t size);
  ::std::string* mutable_uid();
  ::std::string* release_uid();
  void set_allocated_uid(::std::string* uid);

  // optional uint32 time = 3;
  void clear_time();
  static const int kTimeFieldNumber = 3;
  ::google::protobuf::uint32 time() const;
  void set_time(::google::protobuf::uint32 value);

  // optional int32 amount = 4;
  void clear_amount();
  static const int kAmountFieldNumber = 4;
  ::google::protobuf::int32 amount() const;
  void set_amount(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto3.charge_t)
 private:

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr phone_;
  ::google::protobuf::internal::ArenaStringPtr uid_;
  ::google::protobuf::uint32 time_;
  ::google::protobuf::int32 amount_;
  mutable int _cached_size_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_protocol_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_protocol_2eproto();
  #endif
  friend void protobuf_AssignDesc_protocol_2eproto();
  friend void protobuf_ShutdownFile_protocol_2eproto();

  void InitAsDefaultInstance();
  static charge_t* default_instance_;
};
// -------------------------------------------------------------------

class MsgBase : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:proto3.MsgBase) */ {
 public:
  MsgBase();
  virtual ~MsgBase();

  MsgBase(const MsgBase& from);

  inline MsgBase& operator=(const MsgBase& from) {
    CopyFrom(from);
    return *this;
  }

  static const MsgBase& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const MsgBase* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(MsgBase* other);

  // implements Message ----------------------------------------------

  inline MsgBase* New() const { return New(NULL); }

  MsgBase* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const MsgBase& from);
  void MergeFrom(const MsgBase& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MsgBase* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto3.pb_msg mid = 1;
  void clear_mid();
  static const int kMidFieldNumber = 1;
  ::proto3::pb_msg mid() const;
  void set_mid(::proto3::pb_msg value);

  // @@protoc_insertion_point(class_scope:proto3.MsgBase)
 private:

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  bool _is_default_instance_;
  int mid_;
  mutable int _cached_size_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_protocol_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_protocol_2eproto();
  #endif
  friend void protobuf_AssignDesc_protocol_2eproto();
  friend void protobuf_ShutdownFile_protocol_2eproto();

  void InitAsDefaultInstance();
  static MsgBase* default_instance_;
};
// -------------------------------------------------------------------

class MsgCSLogin : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:proto3.MsgCSLogin) */ {
 public:
  MsgCSLogin();
  virtual ~MsgCSLogin();

  MsgCSLogin(const MsgCSLogin& from);

  inline MsgCSLogin& operator=(const MsgCSLogin& from) {
    CopyFrom(from);
    return *this;
  }

  static const MsgCSLogin& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const MsgCSLogin* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(MsgCSLogin* other);

  // implements Message ----------------------------------------------

  inline MsgCSLogin* New() const { return New(NULL); }

  MsgCSLogin* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const MsgCSLogin& from);
  void MergeFrom(const MsgCSLogin& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MsgCSLogin* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto3.pb_msg mid = 1;
  void clear_mid();
  static const int kMidFieldNumber = 1;
  ::proto3::pb_msg mid() const;
  void set_mid(::proto3::pb_msg value);

  // optional uint32 version = 3;
  void clear_version();
  static const int kVersionFieldNumber = 3;
  ::google::protobuf::uint32 version() const;
  void set_version(::google::protobuf::uint32 value);

  // optional .proto3.user_t user = 2;
  bool has_user() const;
  void clear_user();
  static const int kUserFieldNumber = 2;
  const ::proto3::user_t& user() const;
  ::proto3::user_t* mutable_user();
  ::proto3::user_t* release_user();
  void set_allocated_user(::proto3::user_t* user);

  // @@protoc_insertion_point(class_scope:proto3.MsgCSLogin)
 private:

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  bool _is_default_instance_;
  int mid_;
  ::google::protobuf::uint32 version_;
  ::proto3::user_t* user_;
  mutable int _cached_size_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_protocol_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_protocol_2eproto();
  #endif
  friend void protobuf_AssignDesc_protocol_2eproto();
  friend void protobuf_ShutdownFile_protocol_2eproto();

  void InitAsDefaultInstance();
  static MsgCSLogin* default_instance_;
};
// -------------------------------------------------------------------

class MsgSCLogin : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:proto3.MsgSCLogin) */ {
 public:
  MsgSCLogin();
  virtual ~MsgSCLogin();

  MsgSCLogin(const MsgSCLogin& from);

  inline MsgSCLogin& operator=(const MsgSCLogin& from) {
    CopyFrom(from);
    return *this;
  }

  static const MsgSCLogin& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const MsgSCLogin* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(MsgSCLogin* other);

  // implements Message ----------------------------------------------

  inline MsgSCLogin* New() const { return New(NULL); }

  MsgSCLogin* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const MsgSCLogin& from);
  void MergeFrom(const MsgSCLogin& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MsgSCLogin* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto3.pb_msg mid = 1;
  void clear_mid();
  static const int kMidFieldNumber = 1;
  ::proto3::pb_msg mid() const;
  void set_mid(::proto3::pb_msg value);

  // optional string uid = 2;
  void clear_uid();
  static const int kUidFieldNumber = 2;
  const ::std::string& uid() const;
  void set_uid(const ::std::string& value);
  void set_uid(const char* value);
  void set_uid(const char* value, size_t size);
  ::std::string* mutable_uid();
  ::std::string* release_uid();
  void set_allocated_uid(::std::string* uid);

  // optional uint32 version = 3;
  void clear_version();
  static const int kVersionFieldNumber = 3;
  ::google::protobuf::uint32 version() const;
  void set_version(::google::protobuf::uint32 value);

  // optional uint64 session = 4;
  void clear_session();
  static const int kSessionFieldNumber = 4;
  ::google::protobuf::uint64 session() const;
  void set_session(::google::protobuf::uint64 value);

  // optional string ip = 5;
  void clear_ip();
  static const int kIpFieldNumber = 5;
  const ::std::string& ip() const;
  void set_ip(const ::std::string& value);
  void set_ip(const char* value);
  void set_ip(const char* value, size_t size);
  ::std::string* mutable_ip();
  ::std::string* release_ip();
  void set_allocated_ip(::std::string* ip);

  // optional uint32 port = 6;
  void clear_port();
  static const int kPortFieldNumber = 6;
  ::google::protobuf::uint32 port() const;
  void set_port(::google::protobuf::uint32 value);

  // optional .proto3.pb_enum result = 7;
  void clear_result();
  static const int kResultFieldNumber = 7;
  ::proto3::pb_enum result() const;
  void set_result(::proto3::pb_enum value);

  // @@protoc_insertion_point(class_scope:proto3.MsgSCLogin)
 private:

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr uid_;
  int mid_;
  ::google::protobuf::uint32 version_;
  ::google::protobuf::uint64 session_;
  ::google::protobuf::internal::ArenaStringPtr ip_;
  ::google::protobuf::uint32 port_;
  int result_;
  mutable int _cached_size_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_protocol_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_protocol_2eproto();
  #endif
  friend void protobuf_AssignDesc_protocol_2eproto();
  friend void protobuf_ShutdownFile_protocol_2eproto();

  void InitAsDefaultInstance();
  static MsgSCLogin* default_instance_;
};
// -------------------------------------------------------------------

class MsgCLEnter : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:proto3.MsgCLEnter) */ {
 public:
  MsgCLEnter();
  virtual ~MsgCLEnter();

  MsgCLEnter(const MsgCLEnter& from);

  inline MsgCLEnter& operator=(const MsgCLEnter& from) {
    CopyFrom(from);
    return *this;
  }

  static const MsgCLEnter& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const MsgCLEnter* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(MsgCLEnter* other);

  // implements Message ----------------------------------------------

  inline MsgCLEnter* New() const { return New(NULL); }

  MsgCLEnter* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const MsgCLEnter& from);
  void MergeFrom(const MsgCLEnter& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MsgCLEnter* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto3.pb_msg mid = 1;
  void clear_mid();
  static const int kMidFieldNumber = 1;
  ::proto3::pb_msg mid() const;
  void set_mid(::proto3::pb_msg value);

  // optional string uid = 2;
  void clear_uid();
  static const int kUidFieldNumber = 2;
  const ::std::string& uid() const;
  void set_uid(const ::std::string& value);
  void set_uid(const char* value);
  void set_uid(const char* value, size_t size);
  ::std::string* mutable_uid();
  ::std::string* release_uid();
  void set_allocated_uid(::std::string* uid);

  // optional uint32 version = 3;
  void clear_version();
  static const int kVersionFieldNumber = 3;
  ::google::protobuf::uint32 version() const;
  void set_version(::google::protobuf::uint32 value);

  // optional uint64 session = 4;
  void clear_session();
  static const int kSessionFieldNumber = 4;
  ::google::protobuf::uint64 session() const;
  void set_session(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto3.MsgCLEnter)
 private:

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr uid_;
  int mid_;
  ::google::protobuf::uint32 version_;
  ::google::protobuf::uint64 session_;
  mutable int _cached_size_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_protocol_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_protocol_2eproto();
  #endif
  friend void protobuf_AssignDesc_protocol_2eproto();
  friend void protobuf_ShutdownFile_protocol_2eproto();

  void InitAsDefaultInstance();
  static MsgCLEnter* default_instance_;
};
// -------------------------------------------------------------------

class MsgLCEnter : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:proto3.MsgLCEnter) */ {
 public:
  MsgLCEnter();
  virtual ~MsgLCEnter();

  MsgLCEnter(const MsgLCEnter& from);

  inline MsgLCEnter& operator=(const MsgLCEnter& from) {
    CopyFrom(from);
    return *this;
  }

  static const MsgLCEnter& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const MsgLCEnter* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(MsgLCEnter* other);

  // implements Message ----------------------------------------------

  inline MsgLCEnter* New() const { return New(NULL); }

  MsgLCEnter* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const MsgLCEnter& from);
  void MergeFrom(const MsgLCEnter& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MsgLCEnter* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto3.pb_msg mid = 1;
  void clear_mid();
  static const int kMidFieldNumber = 1;
  ::proto3::pb_msg mid() const;
  void set_mid(::proto3::pb_msg value);

  // optional int32 key = 2;
  void clear_key();
  static const int kKeyFieldNumber = 2;
  ::google::protobuf::int32 key() const;
  void set_key(::google::protobuf::int32 value);

  // optional .proto3.player_t player = 3;
  bool has_player() const;
  void clear_player();
  static const int kPlayerFieldNumber = 3;
  const ::proto3::player_t& player() const;
  ::proto3::player_t* mutable_player();
  ::proto3::player_t* release_player();
  void set_allocated_player(::proto3::player_t* player);

  // optional .proto3.lobby_t lobby = 4;
  bool has_lobby() const;
  void clear_lobby();
  static const int kLobbyFieldNumber = 4;
  const ::proto3::lobby_t& lobby() const;
  ::proto3::lobby_t* mutable_lobby();
  ::proto3::lobby_t* release_lobby();
  void set_allocated_lobby(::proto3::lobby_t* lobby);

  // optional .proto3.pb_enum result = 5;
  void clear_result();
  static const int kResultFieldNumber = 5;
  ::proto3::pb_enum result() const;
  void set_result(::proto3::pb_enum value);

  // @@protoc_insertion_point(class_scope:proto3.MsgLCEnter)
 private:

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  bool _is_default_instance_;
  int mid_;
  ::google::protobuf::int32 key_;
  ::proto3::player_t* player_;
  ::proto3::lobby_t* lobby_;
  int result_;
  mutable int _cached_size_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_protocol_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_protocol_2eproto();
  #endif
  friend void protobuf_AssignDesc_protocol_2eproto();
  friend void protobuf_ShutdownFile_protocol_2eproto();

  void InitAsDefaultInstance();
  static MsgLCEnter* default_instance_;
};
// -------------------------------------------------------------------

class MsgCLReplays : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:proto3.MsgCLReplays) */ {
 public:
  MsgCLReplays();
  virtual ~MsgCLReplays();

  MsgCLReplays(const MsgCLReplays& from);

  inline MsgCLReplays& operator=(const MsgCLReplays& from) {
    CopyFrom(from);
    return *this;
  }

  static const MsgCLReplays& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const MsgCLReplays* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(MsgCLReplays* other);

  // implements Message ----------------------------------------------

  inline MsgCLReplays* New() const { return New(NULL); }

  MsgCLReplays* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const MsgCLReplays& from);
  void MergeFrom(const MsgCLReplays& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MsgCLReplays* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto3.pb_msg mid = 1;
  void clear_mid();
  static const int kMidFieldNumber = 1;
  ::proto3::pb_msg mid() const;
  void set_mid(::proto3::pb_msg value);

  // optional string uid = 2;
  void clear_uid();
  static const int kUidFieldNumber = 2;
  const ::std::string& uid() const;
  void set_uid(const ::std::string& value);
  void set_uid(const char* value);
  void set_uid(const char* value, size_t size);
  ::std::string* mutable_uid();
  ::std::string* release_uid();
  void set_allocated_uid(::std::string* uid);

  // optional uint64 session = 3;
  void clear_session();
  static const int kSessionFieldNumber = 3;
  ::google::protobuf::uint64 session() const;
  void set_session(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto3.MsgCLReplays)
 private:

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr uid_;
  ::google::protobuf::uint64 session_;
  int mid_;
  mutable int _cached_size_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_protocol_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_protocol_2eproto();
  #endif
  friend void protobuf_AssignDesc_protocol_2eproto();
  friend void protobuf_ShutdownFile_protocol_2eproto();

  void InitAsDefaultInstance();
  static MsgCLReplays* default_instance_;
};
// -------------------------------------------------------------------

class MsgLCReplays : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:proto3.MsgLCReplays) */ {
 public:
  MsgLCReplays();
  virtual ~MsgLCReplays();

  MsgLCReplays(const MsgLCReplays& from);

  inline MsgLCReplays& operator=(const MsgLCReplays& from) {
    CopyFrom(from);
    return *this;
  }

  static const MsgLCReplays& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const MsgLCReplays* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(MsgLCReplays* other);

  // implements Message ----------------------------------------------

  inline MsgLCReplays* New() const { return New(NULL); }

  MsgLCReplays* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const MsgLCReplays& from);
  void MergeFrom(const MsgLCReplays& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MsgLCReplays* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto3.user_t users = 1;
  int users_size() const;
  void clear_users();
  static const int kUsersFieldNumber = 1;
  const ::proto3::user_t& users(int index) const;
  ::proto3::user_t* mutable_users(int index);
  ::proto3::user_t* add_users();
  ::google::protobuf::RepeatedPtrField< ::proto3::user_t >*
      mutable_users();
  const ::google::protobuf::RepeatedPtrField< ::proto3::user_t >&
      users() const;

  // repeated int32 gameIds = 2;
  int gameids_size() const;
  void clear_gameids();
  static const int kGameIdsFieldNumber = 2;
  ::google::protobuf::int32 gameids(int index) const;
  void set_gameids(int index, ::google::protobuf::int32 value);
  void add_gameids(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      gameids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_gameids();

  // optional .proto3.pb_enum result = 3;
  void clear_result();
  static const int kResultFieldNumber = 3;
  ::proto3::pb_enum result() const;
  void set_result(::proto3::pb_enum value);

  // @@protoc_insertion_point(class_scope:proto3.MsgLCReplays)
 private:

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  bool _is_default_instance_;
  ::google::protobuf::RepeatedPtrField< ::proto3::user_t > users_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > gameids_;
  mutable int _gameids_cached_byte_size_;
  int result_;
  mutable int _cached_size_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_protocol_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_protocol_2eproto();
  #endif
  friend void protobuf_AssignDesc_protocol_2eproto();
  friend void protobuf_ShutdownFile_protocol_2eproto();

  void InitAsDefaultInstance();
  static MsgLCReplays* default_instance_;
};
// -------------------------------------------------------------------

class MsgCLReplay : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:proto3.MsgCLReplay) */ {
 public:
  MsgCLReplay();
  virtual ~MsgCLReplay();

  MsgCLReplay(const MsgCLReplay& from);

  inline MsgCLReplay& operator=(const MsgCLReplay& from) {
    CopyFrom(from);
    return *this;
  }

  static const MsgCLReplay& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const MsgCLReplay* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(MsgCLReplay* other);

  // implements Message ----------------------------------------------

  inline MsgCLReplay* New() const { return New(NULL); }

  MsgCLReplay* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const MsgCLReplay& from);
  void MergeFrom(const MsgCLReplay& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MsgCLReplay* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto3.pb_msg mid = 1;
  void clear_mid();
  static const int kMidFieldNumber = 1;
  ::proto3::pb_msg mid() const;
  void set_mid(::proto3::pb_msg value);

  // optional uint32 gameId = 2;
  void clear_gameid();
  static const int kGameIdFieldNumber = 2;
  ::google::protobuf::uint32 gameid() const;
  void set_gameid(::google::protobuf::uint32 value);

  // optional uint64 session = 3;
  void clear_session();
  static const int kSessionFieldNumber = 3;
  ::google::protobuf::uint64 session() const;
  void set_session(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto3.MsgCLReplay)
 private:

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  bool _is_default_instance_;
  int mid_;
  ::google::protobuf::uint32 gameid_;
  ::google::protobuf::uint64 session_;
  mutable int _cached_size_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_protocol_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_protocol_2eproto();
  #endif
  friend void protobuf_AssignDesc_protocol_2eproto();
  friend void protobuf_ShutdownFile_protocol_2eproto();

  void InitAsDefaultInstance();
  static MsgCLReplay* default_instance_;
};
// -------------------------------------------------------------------

class MsgLCReplay : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:proto3.MsgLCReplay) */ {
 public:
  MsgLCReplay();
  virtual ~MsgLCReplay();

  MsgLCReplay(const MsgLCReplay& from);

  inline MsgLCReplay& operator=(const MsgLCReplay& from) {
    CopyFrom(from);
    return *this;
  }

  static const MsgLCReplay& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const MsgLCReplay* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(MsgLCReplay* other);

  // implements Message ----------------------------------------------

  inline MsgLCReplay* New() const { return New(NULL); }

  MsgLCReplay* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const MsgLCReplay& from);
  void MergeFrom(const MsgLCReplay& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MsgLCReplay* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto3.pb_msg mid = 1;
  void clear_mid();
  static const int kMidFieldNumber = 1;
  ::proto3::pb_msg mid() const;
  void set_mid(::proto3::pb_msg value);

  // optional int32 gameId = 2;
  void clear_gameid();
  static const int kGameIdFieldNumber = 2;
  ::google::protobuf::int32 gameid() const;
  void set_gameid(::google::protobuf::int32 value);

  // optional .proto3.pb_msg gameCategory = 3;
  void clear_gamecategory();
  static const int kGameCategoryFieldNumber = 3;
  ::proto3::pb_msg gamecategory() const;
  void set_gamecategory(::proto3::pb_msg value);

  // optional int32 banker = 4;
  void clear_banker();
  static const int kBankerFieldNumber = 4;
  ::google::protobuf::int32 banker() const;
  void set_banker(::google::protobuf::int32 value);

  // optional int32 round = 5;
  void clear_round();
  static const int kRoundFieldNumber = 5;
  ::google::protobuf::int32 round() const;
  void set_round(::google::protobuf::int32 value);

  // optional int32 rounds = 6;
  void clear_rounds();
  static const int kRoundsFieldNumber = 6;
  ::google::protobuf::int32 rounds() const;
  void set_rounds(::google::protobuf::int32 value);

  // repeated int32 piles = 7;
  int piles_size() const;
  void clear_piles();
  static const int kPilesFieldNumber = 7;
  ::google::protobuf::int32 piles(int index) const;
  void set_piles(int index, ::google::protobuf::int32 value);
  void add_piles(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      piles() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_piles();

  // repeated int32 bottom = 8;
  int bottom_size() const;
  void clear_bottom();
  static const int kBottomFieldNumber = 8;
  ::google::protobuf::int32 bottom(int index) const;
  void set_bottom(int index, ::google::protobuf::int32 value);
  void add_bottom(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      bottom() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_bottom();

  // repeated .proto3.bunch_t hands = 9;
  int hands_size() const;
  void clear_hands();
  static const int kHandsFieldNumber = 9;
  const ::proto3::bunch_t& hands(int index) const;
  ::proto3::bunch_t* mutable_hands(int index);
  ::proto3::bunch_t* add_hands();
  ::google::protobuf::RepeatedPtrField< ::proto3::bunch_t >*
      mutable_hands();
  const ::google::protobuf::RepeatedPtrField< ::proto3::bunch_t >&
      hands() const;

  // repeated int32 engage = 10;
  int engage_size() const;
  void clear_engage();
  static const int kEngageFieldNumber = 10;
  ::google::protobuf::int32 engage(int index) const;
  void set_engage(int index, ::google::protobuf::int32 value);
  void add_engage(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      engage() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_engage();

  // repeated .proto3.bunch_t ops = 11;
  int ops_size() const;
  void clear_ops();
  static const int kOpsFieldNumber = 11;
  const ::proto3::bunch_t& ops(int index) const;
  ::proto3::bunch_t* mutable_ops(int index);
  ::proto3::bunch_t* add_ops();
  ::google::protobuf::RepeatedPtrField< ::proto3::bunch_t >*
      mutable_ops();
  const ::google::protobuf::RepeatedPtrField< ::proto3::bunch_t >&
      ops() const;

  // optional .proto3.pb_enum result = 12;
  void clear_result();
  static const int kResultFieldNumber = 12;
  ::proto3::pb_enum result() const;
  void set_result(::proto3::pb_enum value);

  // @@protoc_insertion_point(class_scope:proto3.MsgLCReplay)
 private:

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  bool _is_default_instance_;
  int mid_;
  ::google::protobuf::int32 gameid_;
  int gamecategory_;
  ::google::protobuf::int32 banker_;
  ::google::protobuf::int32 round_;
  ::google::protobuf::int32 rounds_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > piles_;
  mutable int _piles_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > bottom_;
  mutable int _bottom_cached_byte_size_;
  ::google::protobuf::RepeatedPtrField< ::proto3::bunch_t > hands_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > engage_;
  mutable int _engage_cached_byte_size_;
  ::google::protobuf::RepeatedPtrField< ::proto3::bunch_t > ops_;
  int result_;
  mutable int _cached_size_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_protocol_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_protocol_2eproto();
  #endif
  friend void protobuf_AssignDesc_protocol_2eproto();
  friend void protobuf_ShutdownFile_protocol_2eproto();

  void InitAsDefaultInstance();
  static MsgLCReplay* default_instance_;
};
// -------------------------------------------------------------------

class MsgCHLogin : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:proto3.MsgCHLogin) */ {
 public:
  MsgCHLogin();
  virtual ~MsgCHLogin();

  MsgCHLogin(const MsgCHLogin& from);

  inline MsgCHLogin& operator=(const MsgCHLogin& from) {
    CopyFrom(from);
    return *this;
  }

  static const MsgCHLogin& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const MsgCHLogin* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(MsgCHLogin* other);

  // implements Message ----------------------------------------------

  inline MsgCHLogin* New() const { return New(NULL); }

  MsgCHLogin* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const MsgCHLogin& from);
  void MergeFrom(const MsgCHLogin& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MsgCHLogin* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto3.pb_msg mid = 1;
  void clear_mid();
  static const int kMidFieldNumber = 1;
  ::proto3::pb_msg mid() const;
  void set_mid(::proto3::pb_msg value);

  // optional uint32 version = 2;
  void clear_version();
  static const int kVersionFieldNumber = 2;
  ::google::protobuf::uint32 version() const;
  void set_version(::google::protobuf::uint32 value);

  // optional string phone = 3;
  void clear_phone();
  static const int kPhoneFieldNumber = 3;
  const ::std::string& phone() const;
  void set_phone(const ::std::string& value);
  void set_phone(const char* value);
  void set_phone(const char* value, size_t size);
  ::std::string* mutable_phone();
  ::std::string* release_phone();
  void set_allocated_phone(::std::string* phone);

  // optional string pswd = 4;
  void clear_pswd();
  static const int kPswdFieldNumber = 4;
  const ::std::string& pswd() const;
  void set_pswd(const ::std::string& value);
  void set_pswd(const char* value);
  void set_pswd(const char* value, size_t size);
  ::std::string* mutable_pswd();
  ::std::string* release_pswd();
  void set_allocated_pswd(::std::string* pswd);

  // @@protoc_insertion_point(class_scope:proto3.MsgCHLogin)
 private:

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  bool _is_default_instance_;
  int mid_;
  ::google::protobuf::uint32 version_;
  ::google::protobuf::internal::ArenaStringPtr phone_;
  ::google::protobuf::internal::ArenaStringPtr pswd_;
  mutable int _cached_size_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_protocol_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_protocol_2eproto();
  #endif
  friend void protobuf_AssignDesc_protocol_2eproto();
  friend void protobuf_ShutdownFile_protocol_2eproto();

  void InitAsDefaultInstance();
  static MsgCHLogin* default_instance_;
};
// -------------------------------------------------------------------

class MsgHCLogin : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:proto3.MsgHCLogin) */ {
 public:
  MsgHCLogin();
  virtual ~MsgHCLogin();

  MsgHCLogin(const MsgHCLogin& from);

  inline MsgHCLogin& operator=(const MsgHCLogin& from) {
    CopyFrom(from);
    return *this;
  }

  static const MsgHCLogin& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const MsgHCLogin* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(MsgHCLogin* other);

  // implements Message ----------------------------------------------

  inline MsgHCLogin* New() const { return New(NULL); }

  MsgHCLogin* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const MsgHCLogin& from);
  void MergeFrom(const MsgHCLogin& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MsgHCLogin* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto3.pb_msg mid = 1;
  void clear_mid();
  static const int kMidFieldNumber = 1;
  ::proto3::pb_msg mid() const;
  void set_mid(::proto3::pb_msg value);

  // optional int32 amount = 2;
  void clear_amount();
  static const int kAmountFieldNumber = 2;
  ::google::protobuf::int32 amount() const;
  void set_amount(::google::protobuf::int32 value);

  // optional uint64 session = 3;
  void clear_session();
  static const int kSessionFieldNumber = 3;
  ::google::protobuf::uint64 session() const;
  void set_session(::google::protobuf::uint64 value);

  // optional .proto3.pb_enum result = 4;
  void clear_result();
  static const int kResultFieldNumber = 4;
  ::proto3::pb_enum result() const;
  void set_result(::proto3::pb_enum value);

  // @@protoc_insertion_point(class_scope:proto3.MsgHCLogin)
 private:

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  bool _is_default_instance_;
  int mid_;
  ::google::protobuf::int32 amount_;
  ::google::protobuf::uint64 session_;
  int result_;
  mutable int _cached_size_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_protocol_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_protocol_2eproto();
  #endif
  friend void protobuf_AssignDesc_protocol_2eproto();
  friend void protobuf_ShutdownFile_protocol_2eproto();

  void InitAsDefaultInstance();
  static MsgHCLogin* default_instance_;
};
// -------------------------------------------------------------------

class MsgCHRegister : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:proto3.MsgCHRegister) */ {
 public:
  MsgCHRegister();
  virtual ~MsgCHRegister();

  MsgCHRegister(const MsgCHRegister& from);

  inline MsgCHRegister& operator=(const MsgCHRegister& from) {
    CopyFrom(from);
    return *this;
  }

  static const MsgCHRegister& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const MsgCHRegister* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(MsgCHRegister* other);

  // implements Message ----------------------------------------------

  inline MsgCHRegister* New() const { return New(NULL); }

  MsgCHRegister* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const MsgCHRegister& from);
  void MergeFrom(const MsgCHRegister& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MsgCHRegister* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto3.pb_msg mid = 1;
  void clear_mid();
  static const int kMidFieldNumber = 1;
  ::proto3::pb_msg mid() const;
  void set_mid(::proto3::pb_msg value);

  // optional string uid = 2;
  void clear_uid();
  static const int kUidFieldNumber = 2;
  const ::std::string& uid() const;
  void set_uid(const ::std::string& value);
  void set_uid(const char* value);
  void set_uid(const char* value, size_t size);
  ::std::string* mutable_uid();
  ::std::string* release_uid();
  void set_allocated_uid(::std::string* uid);

  // optional string phone = 3;
  void clear_phone();
  static const int kPhoneFieldNumber = 3;
  const ::std::string& phone() const;
  void set_phone(const ::std::string& value);
  void set_phone(const char* value);
  void set_phone(const char* value, size_t size);
  ::std::string* mutable_phone();
  ::std::string* release_phone();
  void set_allocated_phone(::std::string* phone);

  // optional string pswd = 4;
  void clear_pswd();
  static const int kPswdFieldNumber = 4;
  const ::std::string& pswd() const;
  void set_pswd(const ::std::string& value);
  void set_pswd(const char* value);
  void set_pswd(const char* value, size_t size);
  ::std::string* mutable_pswd();
  ::std::string* release_pswd();
  void set_allocated_pswd(::std::string* pswd);

  // optional string name = 5;
  void clear_name();
  static const int kNameFieldNumber = 5;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional string address = 6;
  void clear_address();
  static const int kAddressFieldNumber = 6;
  const ::std::string& address() const;
  void set_address(const ::std::string& value);
  void set_address(const char* value);
  void set_address(const char* value, size_t size);
  ::std::string* mutable_address();
  ::std::string* release_address();
  void set_allocated_address(::std::string* address);

  // optional string idcard = 7;
  void clear_idcard();
  static const int kIdcardFieldNumber = 7;
  const ::std::string& idcard() const;
  void set_idcard(const ::std::string& value);
  void set_idcard(const char* value);
  void set_idcard(const char* value, size_t size);
  ::std::string* mutable_idcard();
  ::std::string* release_idcard();
  void set_allocated_idcard(::std::string* idcard);

  // optional string wechat = 8;
  void clear_wechat();
  static const int kWechatFieldNumber = 8;
  const ::std::string& wechat() const;
  void set_wechat(const ::std::string& value);
  void set_wechat(const char* value);
  void set_wechat(const char* value, size_t size);
  ::std::string* mutable_wechat();
  ::std::string* release_wechat();
  void set_allocated_wechat(::std::string* wechat);

  // optional string alipay = 9;
  void clear_alipay();
  static const int kAlipayFieldNumber = 9;
  const ::std::string& alipay() const;
  void set_alipay(const ::std::string& value);
  void set_alipay(const char* value);
  void set_alipay(const char* value, size_t size);
  ::std::string* mutable_alipay();
  ::std::string* release_alipay();
  void set_allocated_alipay(::std::string* alipay);

  // optional string verifycode = 10;
  void clear_verifycode();
  static const int kVerifycodeFieldNumber = 10;
  const ::std::string& verifycode() const;
  void set_verifycode(const ::std::string& value);
  void set_verifycode(const char* value);
  void set_verifycode(const char* value, size_t size);
  ::std::string* mutable_verifycode();
  ::std::string* release_verifycode();
  void set_allocated_verifycode(::std::string* verifycode);

  // @@protoc_insertion_point(class_scope:proto3.MsgCHRegister)
 private:

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr uid_;
  ::google::protobuf::internal::ArenaStringPtr phone_;
  ::google::protobuf::internal::ArenaStringPtr pswd_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr address_;
  ::google::protobuf::internal::ArenaStringPtr idcard_;
  ::google::protobuf::internal::ArenaStringPtr wechat_;
  ::google::protobuf::internal::ArenaStringPtr alipay_;
  ::google::protobuf::internal::ArenaStringPtr verifycode_;
  int mid_;
  mutable int _cached_size_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_protocol_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_protocol_2eproto();
  #endif
  friend void protobuf_AssignDesc_protocol_2eproto();
  friend void protobuf_ShutdownFile_protocol_2eproto();

  void InitAsDefaultInstance();
  static MsgCHRegister* default_instance_;
};
// -------------------------------------------------------------------

class MsgHCRegister : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:proto3.MsgHCRegister) */ {
 public:
  MsgHCRegister();
  virtual ~MsgHCRegister();

  MsgHCRegister(const MsgHCRegister& from);

  inline MsgHCRegister& operator=(const MsgHCRegister& from) {
    CopyFrom(from);
    return *this;
  }

  static const MsgHCRegister& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const MsgHCRegister* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(MsgHCRegister* other);

  // implements Message ----------------------------------------------

  inline MsgHCRegister* New() const { return New(NULL); }

  MsgHCRegister* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const MsgHCRegister& from);
  void MergeFrom(const MsgHCRegister& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MsgHCRegister* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto3.pb_msg mid = 1;
  void clear_mid();
  static const int kMidFieldNumber = 1;
  ::proto3::pb_msg mid() const;
  void set_mid(::proto3::pb_msg value);

  // optional .proto3.pb_enum result = 2;
  void clear_result();
  static const int kResultFieldNumber = 2;
  ::proto3::pb_enum result() const;
  void set_result(::proto3::pb_enum value);

  // @@protoc_insertion_point(class_scope:proto3.MsgHCRegister)
 private:

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  bool _is_default_instance_;
  int mid_;
  int result_;
  mutable int _cached_size_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_protocol_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_protocol_2eproto();
  #endif
  friend void protobuf_AssignDesc_protocol_2eproto();
  friend void protobuf_ShutdownFile_protocol_2eproto();

  void InitAsDefaultInstance();
  static MsgHCRegister* default_instance_;
};
// -------------------------------------------------------------------

class MsgCHCharge : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:proto3.MsgCHCharge) */ {
 public:
  MsgCHCharge();
  virtual ~MsgCHCharge();

  MsgCHCharge(const MsgCHCharge& from);

  inline MsgCHCharge& operator=(const MsgCHCharge& from) {
    CopyFrom(from);
    return *this;
  }

  static const MsgCHCharge& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const MsgCHCharge* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(MsgCHCharge* other);

  // implements Message ----------------------------------------------

  inline MsgCHCharge* New() const { return New(NULL); }

  MsgCHCharge* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const MsgCHCharge& from);
  void MergeFrom(const MsgCHCharge& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MsgCHCharge* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto3.pb_msg mid = 1;
  void clear_mid();
  static const int kMidFieldNumber = 1;
  ::proto3::pb_msg mid() const;
  void set_mid(::proto3::pb_msg value);

  // optional uint64 session = 2;
  void clear_session();
  static const int kSessionFieldNumber = 2;
  ::google::protobuf::uint64 session() const;
  void set_session(::google::protobuf::uint64 value);

  // optional string uid = 3;
  void clear_uid();
  static const int kUidFieldNumber = 3;
  const ::std::string& uid() const;
  void set_uid(const ::std::string& value);
  void set_uid(const char* value);
  void set_uid(const char* value, size_t size);
  ::std::string* mutable_uid();
  ::std::string* release_uid();
  void set_allocated_uid(::std::string* uid);

  // optional int32 amount = 4;
  void clear_amount();
  static const int kAmountFieldNumber = 4;
  ::google::protobuf::int32 amount() const;
  void set_amount(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto3.MsgCHCharge)
 private:

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  bool _is_default_instance_;
  ::google::protobuf::uint64 session_;
  int mid_;
  ::google::protobuf::int32 amount_;
  ::google::protobuf::internal::ArenaStringPtr uid_;
  mutable int _cached_size_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_protocol_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_protocol_2eproto();
  #endif
  friend void protobuf_AssignDesc_protocol_2eproto();
  friend void protobuf_ShutdownFile_protocol_2eproto();

  void InitAsDefaultInstance();
  static MsgCHCharge* default_instance_;
};
// -------------------------------------------------------------------

class MsgHCCharge : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:proto3.MsgHCCharge) */ {
 public:
  MsgHCCharge();
  virtual ~MsgHCCharge();

  MsgHCCharge(const MsgHCCharge& from);

  inline MsgHCCharge& operator=(const MsgHCCharge& from) {
    CopyFrom(from);
    return *this;
  }

  static const MsgHCCharge& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const MsgHCCharge* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(MsgHCCharge* other);

  // implements Message ----------------------------------------------

  inline MsgHCCharge* New() const { return New(NULL); }

  MsgHCCharge* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const MsgHCCharge& from);
  void MergeFrom(const MsgHCCharge& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MsgHCCharge* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto3.pb_msg mid = 1;
  void clear_mid();
  static const int kMidFieldNumber = 1;
  ::proto3::pb_msg mid() const;
  void set_mid(::proto3::pb_msg value);

  // optional .proto3.pb_enum result = 5;
  void clear_result();
  static const int kResultFieldNumber = 5;
  ::proto3::pb_enum result() const;
  void set_result(::proto3::pb_enum value);

  // @@protoc_insertion_point(class_scope:proto3.MsgHCCharge)
 private:

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  bool _is_default_instance_;
  int mid_;
  int result_;
  mutable int _cached_size_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_protocol_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_protocol_2eproto();
  #endif
  friend void protobuf_AssignDesc_protocol_2eproto();
  friend void protobuf_ShutdownFile_protocol_2eproto();

  void InitAsDefaultInstance();
  static MsgHCCharge* default_instance_;
};
// -------------------------------------------------------------------

class MsgCHQuery : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:proto3.MsgCHQuery) */ {
 public:
  MsgCHQuery();
  virtual ~MsgCHQuery();

  MsgCHQuery(const MsgCHQuery& from);

  inline MsgCHQuery& operator=(const MsgCHQuery& from) {
    CopyFrom(from);
    return *this;
  }

  static const MsgCHQuery& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const MsgCHQuery* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(MsgCHQuery* other);

  // implements Message ----------------------------------------------

  inline MsgCHQuery* New() const { return New(NULL); }

  MsgCHQuery* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const MsgCHQuery& from);
  void MergeFrom(const MsgCHQuery& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MsgCHQuery* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto3.pb_msg mid = 1;
  void clear_mid();
  static const int kMidFieldNumber = 1;
  ::proto3::pb_msg mid() const;
  void set_mid(::proto3::pb_msg value);

  // optional uint64 session = 2;
  void clear_session();
  static const int kSessionFieldNumber = 2;
  ::google::protobuf::uint64 session() const;
  void set_session(::google::protobuf::uint64 value);

  // optional string uid = 3;
  void clear_uid();
  static const int kUidFieldNumber = 3;
  const ::std::string& uid() const;
  void set_uid(const ::std::string& value);
  void set_uid(const char* value);
  void set_uid(const char* value, size_t size);
  ::std::string* mutable_uid();
  ::std::string* release_uid();
  void set_allocated_uid(::std::string* uid);

  // @@protoc_insertion_point(class_scope:proto3.MsgCHQuery)
 private:

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  bool _is_default_instance_;
  ::google::protobuf::uint64 session_;
  ::google::protobuf::internal::ArenaStringPtr uid_;
  int mid_;
  mutable int _cached_size_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_protocol_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_protocol_2eproto();
  #endif
  friend void protobuf_AssignDesc_protocol_2eproto();
  friend void protobuf_ShutdownFile_protocol_2eproto();

  void InitAsDefaultInstance();
  static MsgCHQuery* default_instance_;
};
// -------------------------------------------------------------------

class MsgHCQuery : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:proto3.MsgHCQuery) */ {
 public:
  MsgHCQuery();
  virtual ~MsgHCQuery();

  MsgHCQuery(const MsgHCQuery& from);

  inline MsgHCQuery& operator=(const MsgHCQuery& from) {
    CopyFrom(from);
    return *this;
  }

  static const MsgHCQuery& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const MsgHCQuery* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(MsgHCQuery* other);

  // implements Message ----------------------------------------------

  inline MsgHCQuery* New() const { return New(NULL); }

  MsgHCQuery* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const MsgHCQuery& from);
  void MergeFrom(const MsgHCQuery& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MsgHCQuery* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto3.pb_msg mid = 1;
  void clear_mid();
  static const int kMidFieldNumber = 1;
  ::proto3::pb_msg mid() const;
  void set_mid(::proto3::pb_msg value);

  // repeated .proto3.charge_t log = 2;
  int log_size() const;
  void clear_log();
  static const int kLogFieldNumber = 2;
  const ::proto3::charge_t& log(int index) const;
  ::proto3::charge_t* mutable_log(int index);
  ::proto3::charge_t* add_log();
  ::google::protobuf::RepeatedPtrField< ::proto3::charge_t >*
      mutable_log();
  const ::google::protobuf::RepeatedPtrField< ::proto3::charge_t >&
      log() const;

  // optional .proto3.pb_enum result = 3;
  void clear_result();
  static const int kResultFieldNumber = 3;
  ::proto3::pb_enum result() const;
  void set_result(::proto3::pb_enum value);

  // @@protoc_insertion_point(class_scope:proto3.MsgHCQuery)
 private:

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  bool _is_default_instance_;
  ::google::protobuf::RepeatedPtrField< ::proto3::charge_t > log_;
  int mid_;
  int result_;
  mutable int _cached_size_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_protocol_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_protocol_2eproto();
  #endif
  friend void protobuf_AssignDesc_protocol_2eproto();
  friend void protobuf_ShutdownFile_protocol_2eproto();

  void InitAsDefaultInstance();
  static MsgHCQuery* default_instance_;
};
// -------------------------------------------------------------------

class MsgCNConnect : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:proto3.MsgCNConnect) */ {
 public:
  MsgCNConnect();
  virtual ~MsgCNConnect();

  MsgCNConnect(const MsgCNConnect& from);

  inline MsgCNConnect& operator=(const MsgCNConnect& from) {
    CopyFrom(from);
    return *this;
  }

  static const MsgCNConnect& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const MsgCNConnect* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(MsgCNConnect* other);

  // implements Message ----------------------------------------------

  inline MsgCNConnect* New() const { return New(NULL); }

  MsgCNConnect* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const MsgCNConnect& from);
  void MergeFrom(const MsgCNConnect& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MsgCNConnect* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto3.pb_msg mid = 1;
  void clear_mid();
  static const int kMidFieldNumber = 1;
  ::proto3::pb_msg mid() const;
  void set_mid(::proto3::pb_msg value);

  // optional string uid = 2;
  void clear_uid();
  static const int kUidFieldNumber = 2;
  const ::std::string& uid() const;
  void set_uid(const ::std::string& value);
  void set_uid(const char* value);
  void set_uid(const char* value, size_t size);
  ::std::string* mutable_uid();
  ::std::string* release_uid();
  void set_allocated_uid(::std::string* uid);

  // optional uint32 version = 3;
  void clear_version();
  static const int kVersionFieldNumber = 3;
  ::google::protobuf::uint32 version() const;
  void set_version(::google::protobuf::uint32 value);

  // optional uint64 session = 4;
  void clear_session();
  static const int kSessionFieldNumber = 4;
  ::google::protobuf::uint64 session() const;
  void set_session(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto3.MsgCNConnect)
 private:

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr uid_;
  int mid_;
  ::google::protobuf::uint32 version_;
  ::google::protobuf::uint64 session_;
  mutable int _cached_size_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_protocol_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_protocol_2eproto();
  #endif
  friend void protobuf_AssignDesc_protocol_2eproto();
  friend void protobuf_ShutdownFile_protocol_2eproto();

  void InitAsDefaultInstance();
  static MsgCNConnect* default_instance_;
};
// -------------------------------------------------------------------

class MsgNCConnect : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:proto3.MsgNCConnect) */ {
 public:
  MsgNCConnect();
  virtual ~MsgNCConnect();

  MsgNCConnect(const MsgNCConnect& from);

  inline MsgNCConnect& operator=(const MsgNCConnect& from) {
    CopyFrom(from);
    return *this;
  }

  static const MsgNCConnect& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const MsgNCConnect* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(MsgNCConnect* other);

  // implements Message ----------------------------------------------

  inline MsgNCConnect* New() const { return New(NULL); }

  MsgNCConnect* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const MsgNCConnect& from);
  void MergeFrom(const MsgNCConnect& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MsgNCConnect* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto3.pb_msg mid = 1;
  void clear_mid();
  static const int kMidFieldNumber = 1;
  ::proto3::pb_msg mid() const;
  void set_mid(::proto3::pb_msg value);

  // optional .proto3.player_t player = 2;
  bool has_player() const;
  void clear_player();
  static const int kPlayerFieldNumber = 2;
  const ::proto3::player_t& player() const;
  ::proto3::player_t* mutable_player();
  ::proto3::player_t* release_player();
  void set_allocated_player(::proto3::player_t* player);

  // optional .proto3.pb_enum result = 3;
  void clear_result();
  static const int kResultFieldNumber = 3;
  ::proto3::pb_enum result() const;
  void set_result(::proto3::pb_enum value);

  // @@protoc_insertion_point(class_scope:proto3.MsgNCConnect)
 private:

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  bool _is_default_instance_;
  ::proto3::player_t* player_;
  int mid_;
  int result_;
  mutable int _cached_size_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_protocol_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_protocol_2eproto();
  #endif
  friend void protobuf_AssignDesc_protocol_2eproto();
  friend void protobuf_ShutdownFile_protocol_2eproto();

  void InitAsDefaultInstance();
  static MsgNCConnect* default_instance_;
};
// -------------------------------------------------------------------

class MsgCNCreate : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:proto3.MsgCNCreate) */ {
 public:
  MsgCNCreate();
  virtual ~MsgCNCreate();

  MsgCNCreate(const MsgCNCreate& from);

  inline MsgCNCreate& operator=(const MsgCNCreate& from) {
    CopyFrom(from);
    return *this;
  }

  static const MsgCNCreate& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const MsgCNCreate* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(MsgCNCreate* other);

  // implements Message ----------------------------------------------

  inline MsgCNCreate* New() const { return New(NULL); }

  MsgCNCreate* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const MsgCNCreate& from);
  void MergeFrom(const MsgCNCreate& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MsgCNCreate* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto3.pb_msg mid = 1;
  void clear_mid();
  static const int kMidFieldNumber = 1;
  ::proto3::pb_msg mid() const;
  void set_mid(::proto3::pb_msg value);

  // optional .proto3.pb_enum game = 2;
  void clear_game();
  static const int kGameFieldNumber = 2;
  ::proto3::pb_enum game() const;
  void set_game(::proto3::pb_enum value);

  // repeated .proto3.key_value options = 3;
  int options_size() const;
  void clear_options();
  static const int kOptionsFieldNumber = 3;
  const ::proto3::key_value& options(int index) const;
  ::proto3::key_value* mutable_options(int index);
  ::proto3::key_value* add_options();
  ::google::protobuf::RepeatedPtrField< ::proto3::key_value >*
      mutable_options();
  const ::google::protobuf::RepeatedPtrField< ::proto3::key_value >&
      options() const;

  // @@protoc_insertion_point(class_scope:proto3.MsgCNCreate)
 private:

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  bool _is_default_instance_;
  int mid_;
  int game_;
  ::google::protobuf::RepeatedPtrField< ::proto3::key_value > options_;
  mutable int _cached_size_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_protocol_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_protocol_2eproto();
  #endif
  friend void protobuf_AssignDesc_protocol_2eproto();
  friend void protobuf_ShutdownFile_protocol_2eproto();

  void InitAsDefaultInstance();
  static MsgCNCreate* default_instance_;
};
// -------------------------------------------------------------------

class MsgNCCreate : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:proto3.MsgNCCreate) */ {
 public:
  MsgNCCreate();
  virtual ~MsgNCCreate();

  MsgNCCreate(const MsgNCCreate& from);

  inline MsgNCCreate& operator=(const MsgNCCreate& from) {
    CopyFrom(from);
    return *this;
  }

  static const MsgNCCreate& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const MsgNCCreate* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(MsgNCCreate* other);

  // implements Message ----------------------------------------------

  inline MsgNCCreate* New() const { return New(NULL); }

  MsgNCCreate* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const MsgNCCreate& from);
  void MergeFrom(const MsgNCCreate& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MsgNCCreate* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto3.pb_msg mid = 1;
  void clear_mid();
  static const int kMidFieldNumber = 1;
  ::proto3::pb_msg mid() const;
  void set_mid(::proto3::pb_msg value);

  // optional int32 game_id = 2;
  void clear_game_id();
  static const int kGameIdFieldNumber = 2;
  ::google::protobuf::int32 game_id() const;
  void set_game_id(::google::protobuf::int32 value);

  // optional .proto3.pb_enum result = 3;
  void clear_result();
  static const int kResultFieldNumber = 3;
  ::proto3::pb_enum result() const;
  void set_result(::proto3::pb_enum value);

  // @@protoc_insertion_point(class_scope:proto3.MsgNCCreate)
 private:

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  bool _is_default_instance_;
  int mid_;
  ::google::protobuf::int32 game_id_;
  int result_;
  mutable int _cached_size_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_protocol_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_protocol_2eproto();
  #endif
  friend void protobuf_AssignDesc_protocol_2eproto();
  friend void protobuf_ShutdownFile_protocol_2eproto();

  void InitAsDefaultInstance();
  static MsgNCCreate* default_instance_;
};
// -------------------------------------------------------------------

class MsgCNJoin : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:proto3.MsgCNJoin) */ {
 public:
  MsgCNJoin();
  virtual ~MsgCNJoin();

  MsgCNJoin(const MsgCNJoin& from);

  inline MsgCNJoin& operator=(const MsgCNJoin& from) {
    CopyFrom(from);
    return *this;
  }

  static const MsgCNJoin& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const MsgCNJoin* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(MsgCNJoin* other);

  // implements Message ----------------------------------------------

  inline MsgCNJoin* New() const { return New(NULL); }

  MsgCNJoin* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const MsgCNJoin& from);
  void MergeFrom(const MsgCNJoin& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MsgCNJoin* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto3.pb_msg mid = 1;
  void clear_mid();
  static const int kMidFieldNumber = 1;
  ::proto3::pb_msg mid() const;
  void set_mid(::proto3::pb_msg value);

  // optional int32 game_id = 2;
  void clear_game_id();
  static const int kGameIdFieldNumber = 2;
  ::google::protobuf::int32 game_id() const;
  void set_game_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto3.MsgCNJoin)
 private:

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  bool _is_default_instance_;
  int mid_;
  ::google::protobuf::int32 game_id_;
  mutable int _cached_size_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_protocol_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_protocol_2eproto();
  #endif
  friend void protobuf_AssignDesc_protocol_2eproto();
  friend void protobuf_ShutdownFile_protocol_2eproto();

  void InitAsDefaultInstance();
  static MsgCNJoin* default_instance_;
};
// -------------------------------------------------------------------

class MsgNCJoin : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:proto3.MsgNCJoin) */ {
 public:
  MsgNCJoin();
  virtual ~MsgNCJoin();

  MsgNCJoin(const MsgNCJoin& from);

  inline MsgNCJoin& operator=(const MsgNCJoin& from) {
    CopyFrom(from);
    return *this;
  }

  static const MsgNCJoin& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const MsgNCJoin* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(MsgNCJoin* other);

  // implements Message ----------------------------------------------

  inline MsgNCJoin* New() const { return New(NULL); }

  MsgNCJoin* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const MsgNCJoin& from);
  void MergeFrom(const MsgNCJoin& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MsgNCJoin* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto3.pb_msg mid = 1;
  void clear_mid();
  static const int kMidFieldNumber = 1;
  ::proto3::pb_msg mid() const;
  void set_mid(::proto3::pb_msg value);

  // optional .proto3.pb_enum game = 2;
  void clear_game();
  static const int kGameFieldNumber = 2;
  ::proto3::pb_enum game() const;
  void set_game(::proto3::pb_enum value);

  // optional .proto3.pb_enum category = 3;
  void clear_category();
  static const int kCategoryFieldNumber = 3;
  ::proto3::pb_enum category() const;
  void set_category(::proto3::pb_enum value);

  // repeated .proto3.player_t players = 4;
  int players_size() const;
  void clear_players();
  static const int kPlayersFieldNumber = 4;
  const ::proto3::player_t& players(int index) const;
  ::proto3::player_t* mutable_players(int index);
  ::proto3::player_t* add_players();
  ::google::protobuf::RepeatedPtrField< ::proto3::player_t >*
      mutable_players();
  const ::google::protobuf::RepeatedPtrField< ::proto3::player_t >&
      players() const;

  // optional .proto3.pb_enum result = 5;
  void clear_result();
  static const int kResultFieldNumber = 5;
  ::proto3::pb_enum result() const;
  void set_result(::proto3::pb_enum value);

  // @@protoc_insertion_point(class_scope:proto3.MsgNCJoin)
 private:

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  bool _is_default_instance_;
  int mid_;
  int game_;
  ::google::protobuf::RepeatedPtrField< ::proto3::player_t > players_;
  int category_;
  int result_;
  mutable int _cached_size_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_protocol_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_protocol_2eproto();
  #endif
  friend void protobuf_AssignDesc_protocol_2eproto();
  friend void protobuf_ShutdownFile_protocol_2eproto();

  void InitAsDefaultInstance();
  static MsgNCJoin* default_instance_;
};
// -------------------------------------------------------------------

class MsgCNReady : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:proto3.MsgCNReady) */ {
 public:
  MsgCNReady();
  virtual ~MsgCNReady();

  MsgCNReady(const MsgCNReady& from);

  inline MsgCNReady& operator=(const MsgCNReady& from) {
    CopyFrom(from);
    return *this;
  }

  static const MsgCNReady& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const MsgCNReady* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(MsgCNReady* other);

  // implements Message ----------------------------------------------

  inline MsgCNReady* New() const { return New(NULL); }

  MsgCNReady* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const MsgCNReady& from);
  void MergeFrom(const MsgCNReady& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MsgCNReady* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto3.pb_msg mid = 1;
  void clear_mid();
  static const int kMidFieldNumber = 1;
  ::proto3::pb_msg mid() const;
  void set_mid(::proto3::pb_msg value);

  // @@protoc_insertion_point(class_scope:proto3.MsgCNReady)
 private:

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  bool _is_default_instance_;
  int mid_;
  mutable int _cached_size_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_protocol_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_protocol_2eproto();
  #endif
  friend void protobuf_AssignDesc_protocol_2eproto();
  friend void protobuf_ShutdownFile_protocol_2eproto();

  void InitAsDefaultInstance();
  static MsgCNReady* default_instance_;
};
// -------------------------------------------------------------------

class MsgNCReady : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:proto3.MsgNCReady) */ {
 public:
  MsgNCReady();
  virtual ~MsgNCReady();

  MsgNCReady(const MsgNCReady& from);

  inline MsgNCReady& operator=(const MsgNCReady& from) {
    CopyFrom(from);
    return *this;
  }

  static const MsgNCReady& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const MsgNCReady* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(MsgNCReady* other);

  // implements Message ----------------------------------------------

  inline MsgNCReady* New() const { return New(NULL); }

  MsgNCReady* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const MsgNCReady& from);
  void MergeFrom(const MsgNCReady& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MsgNCReady* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto3.pb_msg mid = 1;
  void clear_mid();
  static const int kMidFieldNumber = 1;
  ::proto3::pb_msg mid() const;
  void set_mid(::proto3::pb_msg value);

  // optional int32 pos = 2;
  void clear_pos();
  static const int kPosFieldNumber = 2;
  ::google::protobuf::int32 pos() const;
  void set_pos(::google::protobuf::int32 value);

  // optional .proto3.pb_enum result = 3;
  void clear_result();
  static const int kResultFieldNumber = 3;
  ::proto3::pb_enum result() const;
  void set_result(::proto3::pb_enum value);

  // @@protoc_insertion_point(class_scope:proto3.MsgNCReady)
 private:

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  bool _is_default_instance_;
  int mid_;
  ::google::protobuf::int32 pos_;
  int result_;
  mutable int _cached_size_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_protocol_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_protocol_2eproto();
  #endif
  friend void protobuf_AssignDesc_protocol_2eproto();
  friend void protobuf_ShutdownFile_protocol_2eproto();

  void InitAsDefaultInstance();
  static MsgNCReady* default_instance_;
};
// -------------------------------------------------------------------

class MsgCNRevive : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:proto3.MsgCNRevive) */ {
 public:
  MsgCNRevive();
  virtual ~MsgCNRevive();

  MsgCNRevive(const MsgCNRevive& from);

  inline MsgCNRevive& operator=(const MsgCNRevive& from) {
    CopyFrom(from);
    return *this;
  }

  static const MsgCNRevive& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const MsgCNRevive* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(MsgCNRevive* other);

  // implements Message ----------------------------------------------

  inline MsgCNRevive* New() const { return New(NULL); }

  MsgCNRevive* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const MsgCNRevive& from);
  void MergeFrom(const MsgCNRevive& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MsgCNRevive* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto3.pb_msg mid = 1;
  void clear_mid();
  static const int kMidFieldNumber = 1;
  ::proto3::pb_msg mid() const;
  void set_mid(::proto3::pb_msg value);

  // optional int32 game = 2;
  void clear_game();
  static const int kGameFieldNumber = 2;
  ::google::protobuf::int32 game() const;
  void set_game(::google::protobuf::int32 value);

  // optional uint64 session = 3;
  void clear_session();
  static const int kSessionFieldNumber = 3;
  ::google::protobuf::uint64 session() const;
  void set_session(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto3.MsgCNRevive)
 private:

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  bool _is_default_instance_;
  int mid_;
  ::google::protobuf::int32 game_;
  ::google::protobuf::uint64 session_;
  mutable int _cached_size_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_protocol_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_protocol_2eproto();
  #endif
  friend void protobuf_AssignDesc_protocol_2eproto();
  friend void protobuf_ShutdownFile_protocol_2eproto();

  void InitAsDefaultInstance();
  static MsgCNRevive* default_instance_;
};
// -------------------------------------------------------------------

class MsgNCRevive : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:proto3.MsgNCRevive) */ {
 public:
  MsgNCRevive();
  virtual ~MsgNCRevive();

  MsgNCRevive(const MsgNCRevive& from);

  inline MsgNCRevive& operator=(const MsgNCRevive& from) {
    CopyFrom(from);
    return *this;
  }

  static const MsgNCRevive& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const MsgNCRevive* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(MsgNCRevive* other);

  // implements Message ----------------------------------------------

  inline MsgNCRevive* New() const { return New(NULL); }

  MsgNCRevive* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const MsgNCRevive& from);
  void MergeFrom(const MsgNCRevive& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MsgNCRevive* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto3.pb_msg mid = 1;
  void clear_mid();
  static const int kMidFieldNumber = 1;
  ::proto3::pb_msg mid() const;
  void set_mid(::proto3::pb_msg value);

  // optional .proto3.MsgNCDeal deal = 2;
  bool has_deal() const;
  void clear_deal();
  static const int kDealFieldNumber = 2;
  const ::proto3::MsgNCDeal& deal() const;
  ::proto3::MsgNCDeal* mutable_deal();
  ::proto3::MsgNCDeal* release_deal();
  void set_allocated_deal(::proto3::MsgNCDeal* deal);

  // repeated .proto3.play_t play = 3;
  int play_size() const;
  void clear_play();
  static const int kPlayFieldNumber = 3;
  const ::proto3::play_t& play(int index) const;
  ::proto3::play_t* mutable_play(int index);
  ::proto3::play_t* add_play();
  ::google::protobuf::RepeatedPtrField< ::proto3::play_t >*
      mutable_play();
  const ::google::protobuf::RepeatedPtrField< ::proto3::play_t >&
      play() const;

  // optional .proto3.pb_enum result = 4;
  void clear_result();
  static const int kResultFieldNumber = 4;
  ::proto3::pb_enum result() const;
  void set_result(::proto3::pb_enum value);

  // @@protoc_insertion_point(class_scope:proto3.MsgNCRevive)
 private:

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  bool _is_default_instance_;
  ::proto3::MsgNCDeal* deal_;
  int mid_;
  int result_;
  ::google::protobuf::RepeatedPtrField< ::proto3::play_t > play_;
  mutable int _cached_size_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_protocol_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_protocol_2eproto();
  #endif
  friend void protobuf_AssignDesc_protocol_2eproto();
  friend void protobuf_ShutdownFile_protocol_2eproto();

  void InitAsDefaultInstance();
  static MsgNCRevive* default_instance_;
};
// -------------------------------------------------------------------

class MsgNCDeal : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:proto3.MsgNCDeal) */ {
 public:
  MsgNCDeal();
  virtual ~MsgNCDeal();

  MsgNCDeal(const MsgNCDeal& from);

  inline MsgNCDeal& operator=(const MsgNCDeal& from) {
    CopyFrom(from);
    return *this;
  }

  static const MsgNCDeal& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const MsgNCDeal* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(MsgNCDeal* other);

  // implements Message ----------------------------------------------

  inline MsgNCDeal* New() const { return New(NULL); }

  MsgNCDeal* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const MsgNCDeal& from);
  void MergeFrom(const MsgNCDeal& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MsgNCDeal* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto3.pb_msg mid = 1;
  void clear_mid();
  static const int kMidFieldNumber = 1;
  ::proto3::pb_msg mid() const;
  void set_mid(::proto3::pb_msg value);

  // optional int32 banker = 2;
  void clear_banker();
  static const int kBankerFieldNumber = 2;
  ::google::protobuf::int32 banker() const;
  void set_banker(::google::protobuf::int32 value);

  // optional int32 pos = 3;
  void clear_pos();
  static const int kPosFieldNumber = 3;
  ::google::protobuf::int32 pos() const;
  void set_pos(::google::protobuf::int32 value);

  // optional int32 ante = 4;
  void clear_ante();
  static const int kAnteFieldNumber = 4;
  ::google::protobuf::int32 ante() const;
  void set_ante(::google::protobuf::int32 value);

  // optional int32 multiple = 5;
  void clear_multiple();
  static const int kMultipleFieldNumber = 5;
  ::google::protobuf::int32 multiple() const;
  void set_multiple(::google::protobuf::int32 value);

  // repeated int32 hands = 6;
  int hands_size() const;
  void clear_hands();
  static const int kHandsFieldNumber = 6;
  ::google::protobuf::int32 hands(int index) const;
  void set_hands(int index, ::google::protobuf::int32 value);
  void add_hands(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      hands() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_hands();

  // repeated int32 bottom = 7;
  int bottom_size() const;
  void clear_bottom();
  static const int kBottomFieldNumber = 7;
  ::google::protobuf::int32 bottom(int index) const;
  void set_bottom(int index, ::google::protobuf::int32 value);
  void add_bottom(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      bottom() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_bottom();

  // repeated int32 count = 8;
  int count_size() const;
  void clear_count();
  static const int kCountFieldNumber = 8;
  ::google::protobuf::int32 count(int index) const;
  void set_count(int index, ::google::protobuf::int32 value);
  void add_count(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      count() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_count();

  // optional int32 piles = 9;
  void clear_piles();
  static const int kPilesFieldNumber = 9;
  ::google::protobuf::int32 piles() const;
  void set_piles(::google::protobuf::int32 value);

  // optional .proto3.pb_enum result = 10;
  void clear_result();
  static const int kResultFieldNumber = 10;
  ::proto3::pb_enum result() const;
  void set_result(::proto3::pb_enum value);

  // @@protoc_insertion_point(class_scope:proto3.MsgNCDeal)
 private:

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  bool _is_default_instance_;
  int mid_;
  ::google::protobuf::int32 banker_;
  ::google::protobuf::int32 pos_;
  ::google::protobuf::int32 ante_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > hands_;
  mutable int _hands_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > bottom_;
  mutable int _bottom_cached_byte_size_;
  ::google::protobuf::int32 multiple_;
  ::google::protobuf::int32 piles_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > count_;
  mutable int _count_cached_byte_size_;
  int result_;
  mutable int _cached_size_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_protocol_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_protocol_2eproto();
  #endif
  friend void protobuf_AssignDesc_protocol_2eproto();
  friend void protobuf_ShutdownFile_protocol_2eproto();

  void InitAsDefaultInstance();
  static MsgNCDeal* default_instance_;
};
// -------------------------------------------------------------------

class MsgCNEngage : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:proto3.MsgCNEngage) */ {
 public:
  MsgCNEngage();
  virtual ~MsgCNEngage();

  MsgCNEngage(const MsgCNEngage& from);

  inline MsgCNEngage& operator=(const MsgCNEngage& from) {
    CopyFrom(from);
    return *this;
  }

  static const MsgCNEngage& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const MsgCNEngage* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(MsgCNEngage* other);

  // implements Message ----------------------------------------------

  inline MsgCNEngage* New() const { return New(NULL); }

  MsgCNEngage* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const MsgCNEngage& from);
  void MergeFrom(const MsgCNEngage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MsgCNEngage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto3.pb_msg mid = 1;
  void clear_mid();
  static const int kMidFieldNumber = 1;
  ::proto3::pb_msg mid() const;
  void set_mid(::proto3::pb_msg value);

  // optional int32 key = 2;
  void clear_key();
  static const int kKeyFieldNumber = 2;
  ::google::protobuf::int32 key() const;
  void set_key(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto3.MsgCNEngage)
 private:

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  bool _is_default_instance_;
  int mid_;
  ::google::protobuf::int32 key_;
  mutable int _cached_size_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_protocol_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_protocol_2eproto();
  #endif
  friend void protobuf_AssignDesc_protocol_2eproto();
  friend void protobuf_ShutdownFile_protocol_2eproto();

  void InitAsDefaultInstance();
  static MsgCNEngage* default_instance_;
};
// -------------------------------------------------------------------

class MsgNCEngage : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:proto3.MsgNCEngage) */ {
 public:
  MsgNCEngage();
  virtual ~MsgNCEngage();

  MsgNCEngage(const MsgNCEngage& from);

  inline MsgNCEngage& operator=(const MsgNCEngage& from) {
    CopyFrom(from);
    return *this;
  }

  static const MsgNCEngage& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const MsgNCEngage* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(MsgNCEngage* other);

  // implements Message ----------------------------------------------

  inline MsgNCEngage* New() const { return New(NULL); }

  MsgNCEngage* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const MsgNCEngage& from);
  void MergeFrom(const MsgNCEngage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MsgNCEngage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto3.pb_msg mid = 1;
  void clear_mid();
  static const int kMidFieldNumber = 1;
  ::proto3::pb_msg mid() const;
  void set_mid(::proto3::pb_msg value);

  // repeated int32 keys = 2;
  int keys_size() const;
  void clear_keys();
  static const int kKeysFieldNumber = 2;
  ::google::protobuf::int32 keys(int index) const;
  void set_keys(int index, ::google::protobuf::int32 value);
  void add_keys(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      keys() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_keys();

  // repeated .proto3.bunch_t bunch = 3;
  int bunch_size() const;
  void clear_bunch();
  static const int kBunchFieldNumber = 3;
  const ::proto3::bunch_t& bunch(int index) const;
  ::proto3::bunch_t* mutable_bunch(int index);
  ::proto3::bunch_t* add_bunch();
  ::google::protobuf::RepeatedPtrField< ::proto3::bunch_t >*
      mutable_bunch();
  const ::google::protobuf::RepeatedPtrField< ::proto3::bunch_t >&
      bunch() const;

  // optional .proto3.pb_enum result = 6;
  void clear_result();
  static const int kResultFieldNumber = 6;
  ::proto3::pb_enum result() const;
  void set_result(::proto3::pb_enum value);

  // @@protoc_insertion_point(class_scope:proto3.MsgNCEngage)
 private:

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  bool _is_default_instance_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > keys_;
  mutable int _keys_cached_byte_size_;
  int mid_;
  int result_;
  ::google::protobuf::RepeatedPtrField< ::proto3::bunch_t > bunch_;
  mutable int _cached_size_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_protocol_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_protocol_2eproto();
  #endif
  friend void protobuf_AssignDesc_protocol_2eproto();
  friend void protobuf_ShutdownFile_protocol_2eproto();

  void InitAsDefaultInstance();
  static MsgNCEngage* default_instance_;
};
// -------------------------------------------------------------------

class MsgCNDiscard : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:proto3.MsgCNDiscard) */ {
 public:
  MsgCNDiscard();
  virtual ~MsgCNDiscard();

  MsgCNDiscard(const MsgCNDiscard& from);

  inline MsgCNDiscard& operator=(const MsgCNDiscard& from) {
    CopyFrom(from);
    return *this;
  }

  static const MsgCNDiscard& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const MsgCNDiscard* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(MsgCNDiscard* other);

  // implements Message ----------------------------------------------

  inline MsgCNDiscard* New() const { return New(NULL); }

  MsgCNDiscard* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const MsgCNDiscard& from);
  void MergeFrom(const MsgCNDiscard& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MsgCNDiscard* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto3.pb_msg mid = 1;
  void clear_mid();
  static const int kMidFieldNumber = 1;
  ::proto3::pb_msg mid() const;
  void set_mid(::proto3::pb_msg value);

  // optional .proto3.bunch_t bunch = 2;
  bool has_bunch() const;
  void clear_bunch();
  static const int kBunchFieldNumber = 2;
  const ::proto3::bunch_t& bunch() const;
  ::proto3::bunch_t* mutable_bunch();
  ::proto3::bunch_t* release_bunch();
  void set_allocated_bunch(::proto3::bunch_t* bunch);

  // @@protoc_insertion_point(class_scope:proto3.MsgCNDiscard)
 private:

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  bool _is_default_instance_;
  ::proto3::bunch_t* bunch_;
  int mid_;
  mutable int _cached_size_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_protocol_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_protocol_2eproto();
  #endif
  friend void protobuf_AssignDesc_protocol_2eproto();
  friend void protobuf_ShutdownFile_protocol_2eproto();

  void InitAsDefaultInstance();
  static MsgCNDiscard* default_instance_;
};
// -------------------------------------------------------------------

class MsgNCDiscard : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:proto3.MsgNCDiscard) */ {
 public:
  MsgNCDiscard();
  virtual ~MsgNCDiscard();

  MsgNCDiscard(const MsgNCDiscard& from);

  inline MsgNCDiscard& operator=(const MsgNCDiscard& from) {
    CopyFrom(from);
    return *this;
  }

  static const MsgNCDiscard& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const MsgNCDiscard* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(MsgNCDiscard* other);

  // implements Message ----------------------------------------------

  inline MsgNCDiscard* New() const { return New(NULL); }

  MsgNCDiscard* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const MsgNCDiscard& from);
  void MergeFrom(const MsgNCDiscard& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MsgNCDiscard* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto3.pb_msg mid = 1;
  void clear_mid();
  static const int kMidFieldNumber = 1;
  ::proto3::pb_msg mid() const;
  void set_mid(::proto3::pb_msg value);

  // optional .proto3.bunch_t bunch = 2;
  bool has_bunch() const;
  void clear_bunch();
  static const int kBunchFieldNumber = 2;
  const ::proto3::bunch_t& bunch() const;
  ::proto3::bunch_t* mutable_bunch();
  ::proto3::bunch_t* release_bunch();
  void set_allocated_bunch(::proto3::bunch_t* bunch);

  // optional .proto3.pb_enum result = 3;
  void clear_result();
  static const int kResultFieldNumber = 3;
  ::proto3::pb_enum result() const;
  void set_result(::proto3::pb_enum value);

  // @@protoc_insertion_point(class_scope:proto3.MsgNCDiscard)
 private:

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  bool _is_default_instance_;
  ::proto3::bunch_t* bunch_;
  int mid_;
  int result_;
  mutable int _cached_size_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_protocol_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_protocol_2eproto();
  #endif
  friend void protobuf_AssignDesc_protocol_2eproto();
  friend void protobuf_ShutdownFile_protocol_2eproto();

  void InitAsDefaultInstance();
  static MsgNCDiscard* default_instance_;
};
// -------------------------------------------------------------------

class MsgCNMeld : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:proto3.MsgCNMeld) */ {
 public:
  MsgCNMeld();
  virtual ~MsgCNMeld();

  MsgCNMeld(const MsgCNMeld& from);

  inline MsgCNMeld& operator=(const MsgCNMeld& from) {
    CopyFrom(from);
    return *this;
  }

  static const MsgCNMeld& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const MsgCNMeld* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(MsgCNMeld* other);

  // implements Message ----------------------------------------------

  inline MsgCNMeld* New() const { return New(NULL); }

  MsgCNMeld* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const MsgCNMeld& from);
  void MergeFrom(const MsgCNMeld& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MsgCNMeld* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto3.pb_msg mid = 1;
  void clear_mid();
  static const int kMidFieldNumber = 1;
  ::proto3::pb_msg mid() const;
  void set_mid(::proto3::pb_msg value);

  // optional .proto3.bunch_t bunch = 2;
  bool has_bunch() const;
  void clear_bunch();
  static const int kBunchFieldNumber = 2;
  const ::proto3::bunch_t& bunch() const;
  ::proto3::bunch_t* mutable_bunch();
  ::proto3::bunch_t* release_bunch();
  void set_allocated_bunch(::proto3::bunch_t* bunch);

  // repeated .proto3.bunch_t extra = 3;
  int extra_size() const;
  void clear_extra();
  static const int kExtraFieldNumber = 3;
  const ::proto3::bunch_t& extra(int index) const;
  ::proto3::bunch_t* mutable_extra(int index);
  ::proto3::bunch_t* add_extra();
  ::google::protobuf::RepeatedPtrField< ::proto3::bunch_t >*
      mutable_extra();
  const ::google::protobuf::RepeatedPtrField< ::proto3::bunch_t >&
      extra() const;

  // @@protoc_insertion_point(class_scope:proto3.MsgCNMeld)
 private:

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  bool _is_default_instance_;
  ::proto3::bunch_t* bunch_;
  ::google::protobuf::RepeatedPtrField< ::proto3::bunch_t > extra_;
  int mid_;
  mutable int _cached_size_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_protocol_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_protocol_2eproto();
  #endif
  friend void protobuf_AssignDesc_protocol_2eproto();
  friend void protobuf_ShutdownFile_protocol_2eproto();

  void InitAsDefaultInstance();
  static MsgCNMeld* default_instance_;
};
// -------------------------------------------------------------------

class MsgNCMeld : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:proto3.MsgNCMeld) */ {
 public:
  MsgNCMeld();
  virtual ~MsgNCMeld();

  MsgNCMeld(const MsgNCMeld& from);

  inline MsgNCMeld& operator=(const MsgNCMeld& from) {
    CopyFrom(from);
    return *this;
  }

  static const MsgNCMeld& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const MsgNCMeld* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(MsgNCMeld* other);

  // implements Message ----------------------------------------------

  inline MsgNCMeld* New() const { return New(NULL); }

  MsgNCMeld* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const MsgNCMeld& from);
  void MergeFrom(const MsgNCMeld& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MsgNCMeld* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto3.pb_msg mid = 1;
  void clear_mid();
  static const int kMidFieldNumber = 1;
  ::proto3::pb_msg mid() const;
  void set_mid(::proto3::pb_msg value);

  // optional .proto3.bunch_t bunch = 2;
  bool has_bunch() const;
  void clear_bunch();
  static const int kBunchFieldNumber = 2;
  const ::proto3::bunch_t& bunch() const;
  ::proto3::bunch_t* mutable_bunch();
  ::proto3::bunch_t* release_bunch();
  void set_allocated_bunch(::proto3::bunch_t* bunch);

  // optional int32 from = 3;
  void clear_from();
  static const int kFromFieldNumber = 3;
  ::google::protobuf::int32 from() const;
  void set_from(::google::protobuf::int32 value);

  // optional .proto3.pb_enum result = 4;
  void clear_result();
  static const int kResultFieldNumber = 4;
  ::proto3::pb_enum result() const;
  void set_result(::proto3::pb_enum value);

  // @@protoc_insertion_point(class_scope:proto3.MsgNCMeld)
 private:

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  bool _is_default_instance_;
  ::proto3::bunch_t* bunch_;
  int mid_;
  ::google::protobuf::int32 from_;
  int result_;
  mutable int _cached_size_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_protocol_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_protocol_2eproto();
  #endif
  friend void protobuf_AssignDesc_protocol_2eproto();
  friend void protobuf_ShutdownFile_protocol_2eproto();

  void InitAsDefaultInstance();
  static MsgNCMeld* default_instance_;
};
// -------------------------------------------------------------------

class MsgNCDraw : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:proto3.MsgNCDraw) */ {
 public:
  MsgNCDraw();
  virtual ~MsgNCDraw();

  MsgNCDraw(const MsgNCDraw& from);

  inline MsgNCDraw& operator=(const MsgNCDraw& from) {
    CopyFrom(from);
    return *this;
  }

  static const MsgNCDraw& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const MsgNCDraw* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(MsgNCDraw* other);

  // implements Message ----------------------------------------------

  inline MsgNCDraw* New() const { return New(NULL); }

  MsgNCDraw* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const MsgNCDraw& from);
  void MergeFrom(const MsgNCDraw& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MsgNCDraw* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto3.pb_msg mid = 1;
  void clear_mid();
  static const int kMidFieldNumber = 1;
  ::proto3::pb_msg mid() const;
  void set_mid(::proto3::pb_msg value);

  // optional int32 pos = 2;
  void clear_pos();
  static const int kPosFieldNumber = 2;
  ::google::protobuf::int32 pos() const;
  void set_pos(::google::protobuf::int32 value);

  // optional int32 card = 3;
  void clear_card();
  static const int kCardFieldNumber = 3;
  ::google::protobuf::int32 card() const;
  void set_card(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto3.MsgNCDraw)
 private:

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  bool _is_default_instance_;
  int mid_;
  ::google::protobuf::int32 pos_;
  ::google::protobuf::int32 card_;
  mutable int _cached_size_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_protocol_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_protocol_2eproto();
  #endif
  friend void protobuf_AssignDesc_protocol_2eproto();
  friend void protobuf_ShutdownFile_protocol_2eproto();

  void InitAsDefaultInstance();
  static MsgNCDraw* default_instance_;
};
// -------------------------------------------------------------------

class MsgCNDismissSync : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:proto3.MsgCNDismissSync) */ {
 public:
  MsgCNDismissSync();
  virtual ~MsgCNDismissSync();

  MsgCNDismissSync(const MsgCNDismissSync& from);

  inline MsgCNDismissSync& operator=(const MsgCNDismissSync& from) {
    CopyFrom(from);
    return *this;
  }

  static const MsgCNDismissSync& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const MsgCNDismissSync* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(MsgCNDismissSync* other);

  // implements Message ----------------------------------------------

  inline MsgCNDismissSync* New() const { return New(NULL); }

  MsgCNDismissSync* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const MsgCNDismissSync& from);
  void MergeFrom(const MsgCNDismissSync& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MsgCNDismissSync* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto3.pb_msg mid = 1;
  void clear_mid();
  static const int kMidFieldNumber = 1;
  ::proto3::pb_msg mid() const;
  void set_mid(::proto3::pb_msg value);

  // @@protoc_insertion_point(class_scope:proto3.MsgCNDismissSync)
 private:

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  bool _is_default_instance_;
  int mid_;
  mutable int _cached_size_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_protocol_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_protocol_2eproto();
  #endif
  friend void protobuf_AssignDesc_protocol_2eproto();
  friend void protobuf_ShutdownFile_protocol_2eproto();

  void InitAsDefaultInstance();
  static MsgCNDismissSync* default_instance_;
};
// -------------------------------------------------------------------

class MsgNCDismissSync : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:proto3.MsgNCDismissSync) */ {
 public:
  MsgNCDismissSync();
  virtual ~MsgNCDismissSync();

  MsgNCDismissSync(const MsgNCDismissSync& from);

  inline MsgNCDismissSync& operator=(const MsgNCDismissSync& from) {
    CopyFrom(from);
    return *this;
  }

  static const MsgNCDismissSync& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const MsgNCDismissSync* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(MsgNCDismissSync* other);

  // implements Message ----------------------------------------------

  inline MsgNCDismissSync* New() const { return New(NULL); }

  MsgNCDismissSync* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const MsgNCDismissSync& from);
  void MergeFrom(const MsgNCDismissSync& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MsgNCDismissSync* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto3.pb_msg mid = 1;
  void clear_mid();
  static const int kMidFieldNumber = 1;
  ::proto3::pb_msg mid() const;
  void set_mid(::proto3::pb_msg value);

  // optional int32 pos = 2;
  void clear_pos();
  static const int kPosFieldNumber = 2;
  ::google::protobuf::int32 pos() const;
  void set_pos(::google::protobuf::int32 value);

  // optional .proto3.pb_enum result = 3;
  void clear_result();
  static const int kResultFieldNumber = 3;
  ::proto3::pb_enum result() const;
  void set_result(::proto3::pb_enum value);

  // @@protoc_insertion_point(class_scope:proto3.MsgNCDismissSync)
 private:

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  bool _is_default_instance_;
  int mid_;
  ::google::protobuf::int32 pos_;
  int result_;
  mutable int _cached_size_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_protocol_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_protocol_2eproto();
  #endif
  friend void protobuf_AssignDesc_protocol_2eproto();
  friend void protobuf_ShutdownFile_protocol_2eproto();

  void InitAsDefaultInstance();
  static MsgNCDismissSync* default_instance_;
};
// -------------------------------------------------------------------

class MsgCNDismissAck : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:proto3.MsgCNDismissAck) */ {
 public:
  MsgCNDismissAck();
  virtual ~MsgCNDismissAck();

  MsgCNDismissAck(const MsgCNDismissAck& from);

  inline MsgCNDismissAck& operator=(const MsgCNDismissAck& from) {
    CopyFrom(from);
    return *this;
  }

  static const MsgCNDismissAck& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const MsgCNDismissAck* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(MsgCNDismissAck* other);

  // implements Message ----------------------------------------------

  inline MsgCNDismissAck* New() const { return New(NULL); }

  MsgCNDismissAck* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const MsgCNDismissAck& from);
  void MergeFrom(const MsgCNDismissAck& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MsgCNDismissAck* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto3.pb_msg mid = 1;
  void clear_mid();
  static const int kMidFieldNumber = 1;
  ::proto3::pb_msg mid() const;
  void set_mid(::proto3::pb_msg value);

  // @@protoc_insertion_point(class_scope:proto3.MsgCNDismissAck)
 private:

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  bool _is_default_instance_;
  int mid_;
  mutable int _cached_size_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_protocol_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_protocol_2eproto();
  #endif
  friend void protobuf_AssignDesc_protocol_2eproto();
  friend void protobuf_ShutdownFile_protocol_2eproto();

  void InitAsDefaultInstance();
  static MsgCNDismissAck* default_instance_;
};
// -------------------------------------------------------------------

class MsgNCDismissAck : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:proto3.MsgNCDismissAck) */ {
 public:
  MsgNCDismissAck();
  virtual ~MsgNCDismissAck();

  MsgNCDismissAck(const MsgNCDismissAck& from);

  inline MsgNCDismissAck& operator=(const MsgNCDismissAck& from) {
    CopyFrom(from);
    return *this;
  }

  static const MsgNCDismissAck& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const MsgNCDismissAck* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(MsgNCDismissAck* other);

  // implements Message ----------------------------------------------

  inline MsgNCDismissAck* New() const { return New(NULL); }

  MsgNCDismissAck* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const MsgNCDismissAck& from);
  void MergeFrom(const MsgNCDismissAck& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MsgNCDismissAck* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto3.pb_msg mid = 1;
  void clear_mid();
  static const int kMidFieldNumber = 1;
  ::proto3::pb_msg mid() const;
  void set_mid(::proto3::pb_msg value);

  // optional int32 pos = 2;
  void clear_pos();
  static const int kPosFieldNumber = 2;
  ::google::protobuf::int32 pos() const;
  void set_pos(::google::protobuf::int32 value);

  // optional .proto3.pb_enum result = 3;
  void clear_result();
  static const int kResultFieldNumber = 3;
  ::proto3::pb_enum result() const;
  void set_result(::proto3::pb_enum value);

  // @@protoc_insertion_point(class_scope:proto3.MsgNCDismissAck)
 private:

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  bool _is_default_instance_;
  int mid_;
  ::google::protobuf::int32 pos_;
  int result_;
  mutable int _cached_size_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_protocol_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_protocol_2eproto();
  #endif
  friend void protobuf_AssignDesc_protocol_2eproto();
  friend void protobuf_ShutdownFile_protocol_2eproto();

  void InitAsDefaultInstance();
  static MsgNCDismissAck* default_instance_;
};
// -------------------------------------------------------------------

class MsgNCSettle : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:proto3.MsgNCSettle) */ {
 public:
  MsgNCSettle();
  virtual ~MsgNCSettle();

  MsgNCSettle(const MsgNCSettle& from);

  inline MsgNCSettle& operator=(const MsgNCSettle& from) {
    CopyFrom(from);
    return *this;
  }

  static const MsgNCSettle& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const MsgNCSettle* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(MsgNCSettle* other);

  // implements Message ----------------------------------------------

  inline MsgNCSettle* New() const { return New(NULL); }

  MsgNCSettle* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const MsgNCSettle& from);
  void MergeFrom(const MsgNCSettle& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MsgNCSettle* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto3.pb_msg mid = 1;
  void clear_mid();
  static const int kMidFieldNumber = 1;
  ::proto3::pb_msg mid() const;
  void set_mid(::proto3::pb_msg value);

  // repeated .proto3.play_t play = 2;
  int play_size() const;
  void clear_play();
  static const int kPlayFieldNumber = 2;
  const ::proto3::play_t& play(int index) const;
  ::proto3::play_t* mutable_play(int index);
  ::proto3::play_t* add_play();
  ::google::protobuf::RepeatedPtrField< ::proto3::play_t >*
      mutable_play();
  const ::google::protobuf::RepeatedPtrField< ::proto3::play_t >&
      play() const;

  // repeated int32 pile = 3;
  int pile_size() const;
  void clear_pile();
  static const int kPileFieldNumber = 3;
  ::google::protobuf::int32 pile(int index) const;
  void set_pile(int index, ::google::protobuf::int32 value);
  void add_pile(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      pile() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_pile();

  // optional .proto3.pb_enum result = 4;
  void clear_result();
  static const int kResultFieldNumber = 4;
  ::proto3::pb_enum result() const;
  void set_result(::proto3::pb_enum value);

  // @@protoc_insertion_point(class_scope:proto3.MsgNCSettle)
 private:

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  bool _is_default_instance_;
  ::google::protobuf::RepeatedPtrField< ::proto3::play_t > play_;
  int mid_;
  int result_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > pile_;
  mutable int _pile_cached_byte_size_;
  mutable int _cached_size_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_protocol_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_protocol_2eproto();
  #endif
  friend void protobuf_AssignDesc_protocol_2eproto();
  friend void protobuf_ShutdownFile_protocol_2eproto();

  void InitAsDefaultInstance();
  static MsgNCSettle* default_instance_;
};
// -------------------------------------------------------------------

class MsgNCFinish : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:proto3.MsgNCFinish) */ {
 public:
  MsgNCFinish();
  virtual ~MsgNCFinish();

  MsgNCFinish(const MsgNCFinish& from);

  inline MsgNCFinish& operator=(const MsgNCFinish& from) {
    CopyFrom(from);
    return *this;
  }

  static const MsgNCFinish& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const MsgNCFinish* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(MsgNCFinish* other);

  // implements Message ----------------------------------------------

  inline MsgNCFinish* New() const { return New(NULL); }

  MsgNCFinish* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const MsgNCFinish& from);
  void MergeFrom(const MsgNCFinish& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MsgNCFinish* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto3.pb_msg mid = 1;
  void clear_mid();
  static const int kMidFieldNumber = 1;
  ::proto3::pb_msg mid() const;
  void set_mid(::proto3::pb_msg value);

  // repeated .proto3.play_t play = 2;
  int play_size() const;
  void clear_play();
  static const int kPlayFieldNumber = 2;
  const ::proto3::play_t& play(int index) const;
  ::proto3::play_t* mutable_play(int index);
  ::proto3::play_t* add_play();
  ::google::protobuf::RepeatedPtrField< ::proto3::play_t >*
      mutable_play();
  const ::google::protobuf::RepeatedPtrField< ::proto3::play_t >&
      play() const;

  // optional .proto3.pb_enum result = 3;
  void clear_result();
  static const int kResultFieldNumber = 3;
  ::proto3::pb_enum result() const;
  void set_result(::proto3::pb_enum value);

  // @@protoc_insertion_point(class_scope:proto3.MsgNCFinish)
 private:

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  bool _is_default_instance_;
  ::google::protobuf::RepeatedPtrField< ::proto3::play_t > play_;
  int mid_;
  int result_;
  mutable int _cached_size_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_protocol_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_protocol_2eproto();
  #endif
  friend void protobuf_AssignDesc_protocol_2eproto();
  friend void protobuf_ShutdownFile_protocol_2eproto();

  void InitAsDefaultInstance();
  static MsgNCFinish* default_instance_;
};
// -------------------------------------------------------------------

class MsgCNStats : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:proto3.MsgCNStats) */ {
 public:
  MsgCNStats();
  virtual ~MsgCNStats();

  MsgCNStats(const MsgCNStats& from);

  inline MsgCNStats& operator=(const MsgCNStats& from) {
    CopyFrom(from);
    return *this;
  }

  static const MsgCNStats& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const MsgCNStats* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(MsgCNStats* other);

  // implements Message ----------------------------------------------

  inline MsgCNStats* New() const { return New(NULL); }

  MsgCNStats* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const MsgCNStats& from);
  void MergeFrom(const MsgCNStats& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MsgCNStats* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto3.pb_msg mid = 1;
  void clear_mid();
  static const int kMidFieldNumber = 1;
  ::proto3::pb_msg mid() const;
  void set_mid(::proto3::pb_msg value);

  // optional string key = 2;
  void clear_key();
  static const int kKeyFieldNumber = 2;
  const ::std::string& key() const;
  void set_key(const ::std::string& value);
  void set_key(const char* value);
  void set_key(const char* value, size_t size);
  ::std::string* mutable_key();
  ::std::string* release_key();
  void set_allocated_key(::std::string* key);

  // optional string value = 3;
  void clear_value();
  static const int kValueFieldNumber = 3;
  const ::std::string& value() const;
  void set_value(const ::std::string& value);
  void set_value(const char* value);
  void set_value(const char* value, size_t size);
  ::std::string* mutable_value();
  ::std::string* release_value();
  void set_allocated_value(::std::string* value);

  // @@protoc_insertion_point(class_scope:proto3.MsgCNStats)
 private:

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr key_;
  ::google::protobuf::internal::ArenaStringPtr value_;
  int mid_;
  mutable int _cached_size_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_protocol_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_protocol_2eproto();
  #endif
  friend void protobuf_AssignDesc_protocol_2eproto();
  friend void protobuf_ShutdownFile_protocol_2eproto();

  void InitAsDefaultInstance();
  static MsgCNStats* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// key_value

// optional string key = 1;
inline void key_value::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& key_value::key() const {
  // @@protoc_insertion_point(field_get:proto3.key_value.key)
  return key_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void key_value::set_key(const ::std::string& value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto3.key_value.key)
}
inline void key_value::set_key(const char* value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto3.key_value.key)
}
inline void key_value::set_key(const char* value, size_t size) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto3.key_value.key)
}
inline ::std::string* key_value::mutable_key() {
  
  // @@protoc_insertion_point(field_mutable:proto3.key_value.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* key_value::release_key() {
  // @@protoc_insertion_point(field_release:proto3.key_value.key)
  
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void key_value::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    
  } else {
    
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:proto3.key_value.key)
}

// optional string value = 2;
inline void key_value::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& key_value::value() const {
  // @@protoc_insertion_point(field_get:proto3.key_value.value)
  return value_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void key_value::set_value(const ::std::string& value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto3.key_value.value)
}
inline void key_value::set_value(const char* value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto3.key_value.value)
}
inline void key_value::set_value(const char* value, size_t size) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto3.key_value.value)
}
inline ::std::string* key_value::mutable_value() {
  
  // @@protoc_insertion_point(field_mutable:proto3.key_value.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* key_value::release_value() {
  // @@protoc_insertion_point(field_release:proto3.key_value.value)
  
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void key_value::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    
  } else {
    
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:proto3.key_value.value)
}

// optional .proto3.pb_enum ikey = 3;
inline void key_value::clear_ikey() {
  ikey_ = 0;
}
inline ::proto3::pb_enum key_value::ikey() const {
  // @@protoc_insertion_point(field_get:proto3.key_value.ikey)
  return static_cast< ::proto3::pb_enum >(ikey_);
}
inline void key_value::set_ikey(::proto3::pb_enum value) {
  
  ikey_ = value;
  // @@protoc_insertion_point(field_set:proto3.key_value.ikey)
}

// optional int32 ivalue = 4;
inline void key_value::clear_ivalue() {
  ivalue_ = 0;
}
inline ::google::protobuf::int32 key_value::ivalue() const {
  // @@protoc_insertion_point(field_get:proto3.key_value.ivalue)
  return ivalue_;
}
inline void key_value::set_ivalue(::google::protobuf::int32 value) {
  
  ivalue_ = value;
  // @@protoc_insertion_point(field_set:proto3.key_value.ivalue)
}

// -------------------------------------------------------------------

// user_t

// optional string uid = 1;
inline void user_t::clear_uid() {
  uid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& user_t::uid() const {
  // @@protoc_insertion_point(field_get:proto3.user_t.uid)
  return uid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void user_t::set_uid(const ::std::string& value) {
  
  uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto3.user_t.uid)
}
inline void user_t::set_uid(const char* value) {
  
  uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto3.user_t.uid)
}
inline void user_t::set_uid(const char* value, size_t size) {
  
  uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto3.user_t.uid)
}
inline ::std::string* user_t::mutable_uid() {
  
  // @@protoc_insertion_point(field_mutable:proto3.user_t.uid)
  return uid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* user_t::release_uid() {
  // @@protoc_insertion_point(field_release:proto3.user_t.uid)
  
  return uid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void user_t::set_allocated_uid(::std::string* uid) {
  if (uid != NULL) {
    
  } else {
    
  }
  uid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uid);
  // @@protoc_insertion_point(field_set_allocated:proto3.user_t.uid)
}

// optional int32 flag = 2;
inline void user_t::clear_flag() {
  flag_ = 0;
}
inline ::google::protobuf::int32 user_t::flag() const {
  // @@protoc_insertion_point(field_get:proto3.user_t.flag)
  return flag_;
}
inline void user_t::set_flag(::google::protobuf::int32 value) {
  
  flag_ = value;
  // @@protoc_insertion_point(field_set:proto3.user_t.flag)
}

// optional .proto3.pb_enum dev_type = 3;
inline void user_t::clear_dev_type() {
  dev_type_ = 0;
}
inline ::proto3::pb_enum user_t::dev_type() const {
  // @@protoc_insertion_point(field_get:proto3.user_t.dev_type)
  return static_cast< ::proto3::pb_enum >(dev_type_);
}
inline void user_t::set_dev_type(::proto3::pb_enum value) {
  
  dev_type_ = value;
  // @@protoc_insertion_point(field_set:proto3.user_t.dev_type)
}

// optional string account = 4;
inline void user_t::clear_account() {
  account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& user_t::account() const {
  // @@protoc_insertion_point(field_get:proto3.user_t.account)
  return account_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void user_t::set_account(const ::std::string& value) {
  
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto3.user_t.account)
}
inline void user_t::set_account(const char* value) {
  
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto3.user_t.account)
}
inline void user_t::set_account(const char* value, size_t size) {
  
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto3.user_t.account)
}
inline ::std::string* user_t::mutable_account() {
  
  // @@protoc_insertion_point(field_mutable:proto3.user_t.account)
  return account_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* user_t::release_account() {
  // @@protoc_insertion_point(field_release:proto3.user_t.account)
  
  return account_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void user_t::set_allocated_account(::std::string* account) {
  if (account != NULL) {
    
  } else {
    
  }
  account_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account);
  // @@protoc_insertion_point(field_set_allocated:proto3.user_t.account)
}

// optional string name = 5;
inline void user_t::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& user_t::name() const {
  // @@protoc_insertion_point(field_get:proto3.user_t.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void user_t::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto3.user_t.name)
}
inline void user_t::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto3.user_t.name)
}
inline void user_t::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto3.user_t.name)
}
inline ::std::string* user_t::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:proto3.user_t.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* user_t::release_name() {
  // @@protoc_insertion_point(field_release:proto3.user_t.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void user_t::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:proto3.user_t.name)
}

// optional string pswd = 6;
inline void user_t::clear_pswd() {
  pswd_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& user_t::pswd() const {
  // @@protoc_insertion_point(field_get:proto3.user_t.pswd)
  return pswd_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void user_t::set_pswd(const ::std::string& value) {
  
  pswd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto3.user_t.pswd)
}
inline void user_t::set_pswd(const char* value) {
  
  pswd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto3.user_t.pswd)
}
inline void user_t::set_pswd(const char* value, size_t size) {
  
  pswd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto3.user_t.pswd)
}
inline ::std::string* user_t::mutable_pswd() {
  
  // @@protoc_insertion_point(field_mutable:proto3.user_t.pswd)
  return pswd_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* user_t::release_pswd() {
  // @@protoc_insertion_point(field_release:proto3.user_t.pswd)
  
  return pswd_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void user_t::set_allocated_pswd(::std::string* pswd) {
  if (pswd != NULL) {
    
  } else {
    
  }
  pswd_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pswd);
  // @@protoc_insertion_point(field_set_allocated:proto3.user_t.pswd)
}

// optional int32 gender = 7;
inline void user_t::clear_gender() {
  gender_ = 0;
}
inline ::google::protobuf::int32 user_t::gender() const {
  // @@protoc_insertion_point(field_get:proto3.user_t.gender)
  return gender_;
}
inline void user_t::set_gender(::google::protobuf::int32 value) {
  
  gender_ = value;
  // @@protoc_insertion_point(field_set:proto3.user_t.gender)
}

// optional int32 age = 8;
inline void user_t::clear_age() {
  age_ = 0;
}
inline ::google::protobuf::int32 user_t::age() const {
  // @@protoc_insertion_point(field_get:proto3.user_t.age)
  return age_;
}
inline void user_t::set_age(::google::protobuf::int32 value) {
  
  age_ = value;
  // @@protoc_insertion_point(field_set:proto3.user_t.age)
}

// optional string udid = 9;
inline void user_t::clear_udid() {
  udid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& user_t::udid() const {
  // @@protoc_insertion_point(field_get:proto3.user_t.udid)
  return udid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void user_t::set_udid(const ::std::string& value) {
  
  udid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto3.user_t.udid)
}
inline void user_t::set_udid(const char* value) {
  
  udid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto3.user_t.udid)
}
inline void user_t::set_udid(const char* value, size_t size) {
  
  udid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto3.user_t.udid)
}
inline ::std::string* user_t::mutable_udid() {
  
  // @@protoc_insertion_point(field_mutable:proto3.user_t.udid)
  return udid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* user_t::release_udid() {
  // @@protoc_insertion_point(field_release:proto3.user_t.udid)
  
  return udid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void user_t::set_allocated_udid(::std::string* udid) {
  if (udid != NULL) {
    
  } else {
    
  }
  udid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), udid);
  // @@protoc_insertion_point(field_set_allocated:proto3.user_t.udid)
}

// -------------------------------------------------------------------

// player_t

// optional string uid = 1;
inline void player_t::clear_uid() {
  uid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& player_t::uid() const {
  // @@protoc_insertion_point(field_get:proto3.player_t.uid)
  return uid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void player_t::set_uid(const ::std::string& value) {
  
  uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto3.player_t.uid)
}
inline void player_t::set_uid(const char* value) {
  
  uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto3.player_t.uid)
}
inline void player_t::set_uid(const char* value, size_t size) {
  
  uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto3.player_t.uid)
}
inline ::std::string* player_t::mutable_uid() {
  
  // @@protoc_insertion_point(field_mutable:proto3.player_t.uid)
  return uid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* player_t::release_uid() {
  // @@protoc_insertion_point(field_release:proto3.player_t.uid)
  
  return uid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void player_t::set_allocated_uid(::std::string* uid) {
  if (uid != NULL) {
    
  } else {
    
  }
  uid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uid);
  // @@protoc_insertion_point(field_set_allocated:proto3.player_t.uid)
}

// optional uint32 pid = 2;
inline void player_t::clear_pid() {
  pid_ = 0u;
}
inline ::google::protobuf::uint32 player_t::pid() const {
  // @@protoc_insertion_point(field_get:proto3.player_t.pid)
  return pid_;
}
inline void player_t::set_pid(::google::protobuf::uint32 value) {
  
  pid_ = value;
  // @@protoc_insertion_point(field_set:proto3.player_t.pid)
}

// optional int32 level = 3;
inline void player_t::clear_level() {
  level_ = 0;
}
inline ::google::protobuf::int32 player_t::level() const {
  // @@protoc_insertion_point(field_get:proto3.player_t.level)
  return level_;
}
inline void player_t::set_level(::google::protobuf::int32 value) {
  
  level_ = value;
  // @@protoc_insertion_point(field_set:proto3.player_t.level)
}

// optional int32 xp = 4;
inline void player_t::clear_xp() {
  xp_ = 0;
}
inline ::google::protobuf::int32 player_t::xp() const {
  // @@protoc_insertion_point(field_get:proto3.player_t.xp)
  return xp_;
}
inline void player_t::set_xp(::google::protobuf::int32 value) {
  
  xp_ = value;
  // @@protoc_insertion_point(field_set:proto3.player_t.xp)
}

// optional int32 silver = 5;
inline void player_t::clear_silver() {
  silver_ = 0;
}
inline ::google::protobuf::int32 player_t::silver() const {
  // @@protoc_insertion_point(field_get:proto3.player_t.silver)
  return silver_;
}
inline void player_t::set_silver(::google::protobuf::int32 value) {
  
  silver_ = value;
  // @@protoc_insertion_point(field_set:proto3.player_t.silver)
}

// optional int32 gold = 6;
inline void player_t::clear_gold() {
  gold_ = 0;
}
inline ::google::protobuf::int32 player_t::gold() const {
  // @@protoc_insertion_point(field_get:proto3.player_t.gold)
  return gold_;
}
inline void player_t::set_gold(::google::protobuf::int32 value) {
  
  gold_ = value;
  // @@protoc_insertion_point(field_set:proto3.player_t.gold)
}

// optional int32 energy = 7;
inline void player_t::clear_energy() {
  energy_ = 0;
}
inline ::google::protobuf::int32 player_t::energy() const {
  // @@protoc_insertion_point(field_get:proto3.player_t.energy)
  return energy_;
}
inline void player_t::set_energy(::google::protobuf::int32 value) {
  
  energy_ = value;
  // @@protoc_insertion_point(field_set:proto3.player_t.energy)
}

// repeated .proto3.win_t wins = 8;
inline int player_t::wins_size() const {
  return wins_.size();
}
inline void player_t::clear_wins() {
  wins_.Clear();
}
inline const ::proto3::win_t& player_t::wins(int index) const {
  // @@protoc_insertion_point(field_get:proto3.player_t.wins)
  return wins_.Get(index);
}
inline ::proto3::win_t* player_t::mutable_wins(int index) {
  // @@protoc_insertion_point(field_mutable:proto3.player_t.wins)
  return wins_.Mutable(index);
}
inline ::proto3::win_t* player_t::add_wins() {
  // @@protoc_insertion_point(field_add:proto3.player_t.wins)
  return wins_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto3::win_t >*
player_t::mutable_wins() {
  // @@protoc_insertion_point(field_mutable_list:proto3.player_t.wins)
  return &wins_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto3::win_t >&
player_t::wins() const {
  // @@protoc_insertion_point(field_list:proto3.player_t.wins)
  return wins_;
}

// repeated .proto3.achv_t achvs = 9;
inline int player_t::achvs_size() const {
  return achvs_.size();
}
inline void player_t::clear_achvs() {
  achvs_.Clear();
}
inline const ::proto3::achv_t& player_t::achvs(int index) const {
  // @@protoc_insertion_point(field_get:proto3.player_t.achvs)
  return achvs_.Get(index);
}
inline ::proto3::achv_t* player_t::mutable_achvs(int index) {
  // @@protoc_insertion_point(field_mutable:proto3.player_t.achvs)
  return achvs_.Mutable(index);
}
inline ::proto3::achv_t* player_t::add_achvs() {
  // @@protoc_insertion_point(field_add:proto3.player_t.achvs)
  return achvs_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto3::achv_t >*
player_t::mutable_achvs() {
  // @@protoc_insertion_point(field_mutable_list:proto3.player_t.achvs)
  return &achvs_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto3::achv_t >&
player_t::achvs() const {
  // @@protoc_insertion_point(field_list:proto3.player_t.achvs)
  return achvs_;
}

// -------------------------------------------------------------------

// win_t

// optional string uid = 1;
inline void win_t::clear_uid() {
  uid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& win_t::uid() const {
  // @@protoc_insertion_point(field_get:proto3.win_t.uid)
  return uid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void win_t::set_uid(const ::std::string& value) {
  
  uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto3.win_t.uid)
}
inline void win_t::set_uid(const char* value) {
  
  uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto3.win_t.uid)
}
inline void win_t::set_uid(const char* value, size_t size) {
  
  uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto3.win_t.uid)
}
inline ::std::string* win_t::mutable_uid() {
  
  // @@protoc_insertion_point(field_mutable:proto3.win_t.uid)
  return uid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* win_t::release_uid() {
  // @@protoc_insertion_point(field_release:proto3.win_t.uid)
  
  return uid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void win_t::set_allocated_uid(::std::string* uid) {
  if (uid != NULL) {
    
  } else {
    
  }
  uid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uid);
  // @@protoc_insertion_point(field_set_allocated:proto3.win_t.uid)
}

// optional int32 gid = 2;
inline void win_t::clear_gid() {
  gid_ = 0;
}
inline ::google::protobuf::int32 win_t::gid() const {
  // @@protoc_insertion_point(field_get:proto3.win_t.gid)
  return gid_;
}
inline void win_t::set_gid(::google::protobuf::int32 value) {
  
  gid_ = value;
  // @@protoc_insertion_point(field_set:proto3.win_t.gid)
}

// optional int32 win = 3;
inline void win_t::clear_win() {
  win_ = 0;
}
inline ::google::protobuf::int32 win_t::win() const {
  // @@protoc_insertion_point(field_get:proto3.win_t.win)
  return win_;
}
inline void win_t::set_win(::google::protobuf::int32 value) {
  
  win_ = value;
  // @@protoc_insertion_point(field_set:proto3.win_t.win)
}

// optional int32 lose = 4;
inline void win_t::clear_lose() {
  lose_ = 0;
}
inline ::google::protobuf::int32 win_t::lose() const {
  // @@protoc_insertion_point(field_get:proto3.win_t.lose)
  return lose_;
}
inline void win_t::set_lose(::google::protobuf::int32 value) {
  
  lose_ = value;
  // @@protoc_insertion_point(field_set:proto3.win_t.lose)
}

// optional int32 draw = 5;
inline void win_t::clear_draw() {
  draw_ = 0;
}
inline ::google::protobuf::int32 win_t::draw() const {
  // @@protoc_insertion_point(field_get:proto3.win_t.draw)
  return draw_;
}
inline void win_t::set_draw(::google::protobuf::int32 value) {
  
  draw_ = value;
  // @@protoc_insertion_point(field_set:proto3.win_t.draw)
}

// optional int32 score = 6;
inline void win_t::clear_score() {
  score_ = 0;
}
inline ::google::protobuf::int32 win_t::score() const {
  // @@protoc_insertion_point(field_get:proto3.win_t.score)
  return score_;
}
inline void win_t::set_score(::google::protobuf::int32 value) {
  
  score_ = value;
  // @@protoc_insertion_point(field_set:proto3.win_t.score)
}

// -------------------------------------------------------------------

// achv_t

// optional .proto3.pb_enum type = 1;
inline void achv_t::clear_type() {
  type_ = 0;
}
inline ::proto3::pb_enum achv_t::type() const {
  // @@protoc_insertion_point(field_get:proto3.achv_t.type)
  return static_cast< ::proto3::pb_enum >(type_);
}
inline void achv_t::set_type(::proto3::pb_enum value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:proto3.achv_t.type)
}

// optional string name = 2;
inline void achv_t::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& achv_t::name() const {
  // @@protoc_insertion_point(field_get:proto3.achv_t.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void achv_t::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto3.achv_t.name)
}
inline void achv_t::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto3.achv_t.name)
}
inline void achv_t::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto3.achv_t.name)
}
inline ::std::string* achv_t::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:proto3.achv_t.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* achv_t::release_name() {
  // @@protoc_insertion_point(field_release:proto3.achv_t.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void achv_t::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:proto3.achv_t.name)
}

// optional int32 key = 3;
inline void achv_t::clear_key() {
  key_ = 0;
}
inline ::google::protobuf::int32 achv_t::key() const {
  // @@protoc_insertion_point(field_get:proto3.achv_t.key)
  return key_;
}
inline void achv_t::set_key(::google::protobuf::int32 value) {
  
  key_ = value;
  // @@protoc_insertion_point(field_set:proto3.achv_t.key)
}

// optional int32 value = 4;
inline void achv_t::clear_value() {
  value_ = 0;
}
inline ::google::protobuf::int32 achv_t::value() const {
  // @@protoc_insertion_point(field_get:proto3.achv_t.value)
  return value_;
}
inline void achv_t::set_value(::google::protobuf::int32 value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:proto3.achv_t.value)
}

// -------------------------------------------------------------------

// game_t

// optional int32 id = 1;
inline void game_t::clear_id() {
  id_ = 0;
}
inline ::google::protobuf::int32 game_t::id() const {
  // @@protoc_insertion_point(field_get:proto3.game_t.id)
  return id_;
}
inline void game_t::set_id(::google::protobuf::int32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:proto3.game_t.id)
}

// optional uint32 version = 2;
inline void game_t::clear_version() {
  version_ = 0u;
}
inline ::google::protobuf::uint32 game_t::version() const {
  // @@protoc_insertion_point(field_get:proto3.game_t.version)
  return version_;
}
inline void game_t::set_version(::google::protobuf::uint32 value) {
  
  version_ = value;
  // @@protoc_insertion_point(field_set:proto3.game_t.version)
}

// optional string ip = 3;
inline void game_t::clear_ip() {
  ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& game_t::ip() const {
  // @@protoc_insertion_point(field_get:proto3.game_t.ip)
  return ip_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void game_t::set_ip(const ::std::string& value) {
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto3.game_t.ip)
}
inline void game_t::set_ip(const char* value) {
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto3.game_t.ip)
}
inline void game_t::set_ip(const char* value, size_t size) {
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto3.game_t.ip)
}
inline ::std::string* game_t::mutable_ip() {
  
  // @@protoc_insertion_point(field_mutable:proto3.game_t.ip)
  return ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* game_t::release_ip() {
  // @@protoc_insertion_point(field_release:proto3.game_t.ip)
  
  return ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void game_t::set_allocated_ip(::std::string* ip) {
  if (ip != NULL) {
    
  } else {
    
  }
  ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ip);
  // @@protoc_insertion_point(field_set_allocated:proto3.game_t.ip)
}

// optional uint32 port = 4;
inline void game_t::clear_port() {
  port_ = 0u;
}
inline ::google::protobuf::uint32 game_t::port() const {
  // @@protoc_insertion_point(field_get:proto3.game_t.port)
  return port_;
}
inline void game_t::set_port(::google::protobuf::uint32 value) {
  
  port_ = value;
  // @@protoc_insertion_point(field_set:proto3.game_t.port)
}

// optional int32 occupied = 5;
inline void game_t::clear_occupied() {
  occupied_ = 0;
}
inline ::google::protobuf::int32 game_t::occupied() const {
  // @@protoc_insertion_point(field_get:proto3.game_t.occupied)
  return occupied_;
}
inline void game_t::set_occupied(::google::protobuf::int32 value) {
  
  occupied_ = value;
  // @@protoc_insertion_point(field_set:proto3.game_t.occupied)
}

// optional int32 capacity = 6;
inline void game_t::clear_capacity() {
  capacity_ = 0;
}
inline ::google::protobuf::int32 game_t::capacity() const {
  // @@protoc_insertion_point(field_get:proto3.game_t.capacity)
  return capacity_;
}
inline void game_t::set_capacity(::google::protobuf::int32 value) {
  
  capacity_ = value;
  // @@protoc_insertion_point(field_set:proto3.game_t.capacity)
}

// optional string desc = 7;
inline void game_t::clear_desc() {
  desc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& game_t::desc() const {
  // @@protoc_insertion_point(field_get:proto3.game_t.desc)
  return desc_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void game_t::set_desc(const ::std::string& value) {
  
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto3.game_t.desc)
}
inline void game_t::set_desc(const char* value) {
  
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto3.game_t.desc)
}
inline void game_t::set_desc(const char* value, size_t size) {
  
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto3.game_t.desc)
}
inline ::std::string* game_t::mutable_desc() {
  
  // @@protoc_insertion_point(field_mutable:proto3.game_t.desc)
  return desc_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* game_t::release_desc() {
  // @@protoc_insertion_point(field_release:proto3.game_t.desc)
  
  return desc_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void game_t::set_allocated_desc(::std::string* desc) {
  if (desc != NULL) {
    
  } else {
    
  }
  desc_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), desc);
  // @@protoc_insertion_point(field_set_allocated:proto3.game_t.desc)
}

// optional int32 status = 8;
inline void game_t::clear_status() {
  status_ = 0;
}
inline ::google::protobuf::int32 game_t::status() const {
  // @@protoc_insertion_point(field_get:proto3.game_t.status)
  return status_;
}
inline void game_t::set_status(::google::protobuf::int32 value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:proto3.game_t.status)
}

// optional uint32 openning_time = 9;
inline void game_t::clear_openning_time() {
  openning_time_ = 0u;
}
inline ::google::protobuf::uint32 game_t::openning_time() const {
  // @@protoc_insertion_point(field_get:proto3.game_t.openning_time)
  return openning_time_;
}
inline void game_t::set_openning_time(::google::protobuf::uint32 value) {
  
  openning_time_ = value;
  // @@protoc_insertion_point(field_set:proto3.game_t.openning_time)
}

// optional uint32 maintain_start = 10;
inline void game_t::clear_maintain_start() {
  maintain_start_ = 0u;
}
inline ::google::protobuf::uint32 game_t::maintain_start() const {
  // @@protoc_insertion_point(field_get:proto3.game_t.maintain_start)
  return maintain_start_;
}
inline void game_t::set_maintain_start(::google::protobuf::uint32 value) {
  
  maintain_start_ = value;
  // @@protoc_insertion_point(field_set:proto3.game_t.maintain_start)
}

// optional uint32 maintain_end = 11;
inline void game_t::clear_maintain_end() {
  maintain_end_ = 0u;
}
inline ::google::protobuf::uint32 game_t::maintain_end() const {
  // @@protoc_insertion_point(field_get:proto3.game_t.maintain_end)
  return maintain_end_;
}
inline void game_t::set_maintain_end(::google::protobuf::uint32 value) {
  
  maintain_end_ = value;
  // @@protoc_insertion_point(field_set:proto3.game_t.maintain_end)
}

// -------------------------------------------------------------------

// lobby_t

// optional uint32 version = 1;
inline void lobby_t::clear_version() {
  version_ = 0u;
}
inline ::google::protobuf::uint32 lobby_t::version() const {
  // @@protoc_insertion_point(field_get:proto3.lobby_t.version)
  return version_;
}
inline void lobby_t::set_version(::google::protobuf::uint32 value) {
  
  version_ = value;
  // @@protoc_insertion_point(field_set:proto3.lobby_t.version)
}

// optional string ip = 2;
inline void lobby_t::clear_ip() {
  ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& lobby_t::ip() const {
  // @@protoc_insertion_point(field_get:proto3.lobby_t.ip)
  return ip_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void lobby_t::set_ip(const ::std::string& value) {
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto3.lobby_t.ip)
}
inline void lobby_t::set_ip(const char* value) {
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto3.lobby_t.ip)
}
inline void lobby_t::set_ip(const char* value, size_t size) {
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto3.lobby_t.ip)
}
inline ::std::string* lobby_t::mutable_ip() {
  
  // @@protoc_insertion_point(field_mutable:proto3.lobby_t.ip)
  return ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* lobby_t::release_ip() {
  // @@protoc_insertion_point(field_release:proto3.lobby_t.ip)
  
  return ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void lobby_t::set_allocated_ip(::std::string* ip) {
  if (ip != NULL) {
    
  } else {
    
  }
  ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ip);
  // @@protoc_insertion_point(field_set_allocated:proto3.lobby_t.ip)
}

// optional uint32 port = 3;
inline void lobby_t::clear_port() {
  port_ = 0u;
}
inline ::google::protobuf::uint32 lobby_t::port() const {
  // @@protoc_insertion_point(field_get:proto3.lobby_t.port)
  return port_;
}
inline void lobby_t::set_port(::google::protobuf::uint32 value) {
  
  port_ = value;
  // @@protoc_insertion_point(field_set:proto3.lobby_t.port)
}

// optional int32 occupied = 4;
inline void lobby_t::clear_occupied() {
  occupied_ = 0;
}
inline ::google::protobuf::int32 lobby_t::occupied() const {
  // @@protoc_insertion_point(field_get:proto3.lobby_t.occupied)
  return occupied_;
}
inline void lobby_t::set_occupied(::google::protobuf::int32 value) {
  
  occupied_ = value;
  // @@protoc_insertion_point(field_set:proto3.lobby_t.occupied)
}

// optional int32 capacity = 5;
inline void lobby_t::clear_capacity() {
  capacity_ = 0;
}
inline ::google::protobuf::int32 lobby_t::capacity() const {
  // @@protoc_insertion_point(field_get:proto3.lobby_t.capacity)
  return capacity_;
}
inline void lobby_t::set_capacity(::google::protobuf::int32 value) {
  
  capacity_ = value;
  // @@protoc_insertion_point(field_set:proto3.lobby_t.capacity)
}

// optional string desc = 6;
inline void lobby_t::clear_desc() {
  desc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& lobby_t::desc() const {
  // @@protoc_insertion_point(field_get:proto3.lobby_t.desc)
  return desc_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void lobby_t::set_desc(const ::std::string& value) {
  
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto3.lobby_t.desc)
}
inline void lobby_t::set_desc(const char* value) {
  
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto3.lobby_t.desc)
}
inline void lobby_t::set_desc(const char* value, size_t size) {
  
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto3.lobby_t.desc)
}
inline ::std::string* lobby_t::mutable_desc() {
  
  // @@protoc_insertion_point(field_mutable:proto3.lobby_t.desc)
  return desc_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* lobby_t::release_desc() {
  // @@protoc_insertion_point(field_release:proto3.lobby_t.desc)
  
  return desc_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void lobby_t::set_allocated_desc(::std::string* desc) {
  if (desc != NULL) {
    
  } else {
    
  }
  desc_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), desc);
  // @@protoc_insertion_point(field_set_allocated:proto3.lobby_t.desc)
}

// optional string bulletin = 7;
inline void lobby_t::clear_bulletin() {
  bulletin_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& lobby_t::bulletin() const {
  // @@protoc_insertion_point(field_get:proto3.lobby_t.bulletin)
  return bulletin_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void lobby_t::set_bulletin(const ::std::string& value) {
  
  bulletin_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto3.lobby_t.bulletin)
}
inline void lobby_t::set_bulletin(const char* value) {
  
  bulletin_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto3.lobby_t.bulletin)
}
inline void lobby_t::set_bulletin(const char* value, size_t size) {
  
  bulletin_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto3.lobby_t.bulletin)
}
inline ::std::string* lobby_t::mutable_bulletin() {
  
  // @@protoc_insertion_point(field_mutable:proto3.lobby_t.bulletin)
  return bulletin_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* lobby_t::release_bulletin() {
  // @@protoc_insertion_point(field_release:proto3.lobby_t.bulletin)
  
  return bulletin_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void lobby_t::set_allocated_bulletin(::std::string* bulletin) {
  if (bulletin != NULL) {
    
  } else {
    
  }
  bulletin_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bulletin);
  // @@protoc_insertion_point(field_set_allocated:proto3.lobby_t.bulletin)
}

// optional int32 status = 8;
inline void lobby_t::clear_status() {
  status_ = 0;
}
inline ::google::protobuf::int32 lobby_t::status() const {
  // @@protoc_insertion_point(field_get:proto3.lobby_t.status)
  return status_;
}
inline void lobby_t::set_status(::google::protobuf::int32 value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:proto3.lobby_t.status)
}

// optional uint32 maintain_start = 9;
inline void lobby_t::clear_maintain_start() {
  maintain_start_ = 0u;
}
inline ::google::protobuf::uint32 lobby_t::maintain_start() const {
  // @@protoc_insertion_point(field_get:proto3.lobby_t.maintain_start)
  return maintain_start_;
}
inline void lobby_t::set_maintain_start(::google::protobuf::uint32 value) {
  
  maintain_start_ = value;
  // @@protoc_insertion_point(field_set:proto3.lobby_t.maintain_start)
}

// optional uint32 maintain_end = 10;
inline void lobby_t::clear_maintain_end() {
  maintain_end_ = 0u;
}
inline ::google::protobuf::uint32 lobby_t::maintain_end() const {
  // @@protoc_insertion_point(field_get:proto3.lobby_t.maintain_end)
  return maintain_end_;
}
inline void lobby_t::set_maintain_end(::google::protobuf::uint32 value) {
  
  maintain_end_ = value;
  // @@protoc_insertion_point(field_set:proto3.lobby_t.maintain_end)
}

// optional uint32 time_zone = 11;
inline void lobby_t::clear_time_zone() {
  time_zone_ = 0u;
}
inline ::google::protobuf::uint32 lobby_t::time_zone() const {
  // @@protoc_insertion_point(field_get:proto3.lobby_t.time_zone)
  return time_zone_;
}
inline void lobby_t::set_time_zone(::google::protobuf::uint32 value) {
  
  time_zone_ = value;
  // @@protoc_insertion_point(field_set:proto3.lobby_t.time_zone)
}

// repeated .proto3.game_t games = 12;
inline int lobby_t::games_size() const {
  return games_.size();
}
inline void lobby_t::clear_games() {
  games_.Clear();
}
inline const ::proto3::game_t& lobby_t::games(int index) const {
  // @@protoc_insertion_point(field_get:proto3.lobby_t.games)
  return games_.Get(index);
}
inline ::proto3::game_t* lobby_t::mutable_games(int index) {
  // @@protoc_insertion_point(field_mutable:proto3.lobby_t.games)
  return games_.Mutable(index);
}
inline ::proto3::game_t* lobby_t::add_games() {
  // @@protoc_insertion_point(field_add:proto3.lobby_t.games)
  return games_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto3::game_t >*
lobby_t::mutable_games() {
  // @@protoc_insertion_point(field_mutable_list:proto3.lobby_t.games)
  return &games_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto3::game_t >&
lobby_t::games() const {
  // @@protoc_insertion_point(field_list:proto3.lobby_t.games)
  return games_;
}

// -------------------------------------------------------------------

// bunch_t

// optional .proto3.pb_enum type = 1;
inline void bunch_t::clear_type() {
  type_ = 0;
}
inline ::proto3::pb_enum bunch_t::type() const {
  // @@protoc_insertion_point(field_get:proto3.bunch_t.type)
  return static_cast< ::proto3::pb_enum >(type_);
}
inline void bunch_t::set_type(::proto3::pb_enum value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:proto3.bunch_t.type)
}

// optional int32 pos = 2;
inline void bunch_t::clear_pos() {
  pos_ = 0;
}
inline ::google::protobuf::int32 bunch_t::pos() const {
  // @@protoc_insertion_point(field_get:proto3.bunch_t.pos)
  return pos_;
}
inline void bunch_t::set_pos(::google::protobuf::int32 value) {
  
  pos_ = value;
  // @@protoc_insertion_point(field_set:proto3.bunch_t.pos)
}

// repeated int32 pawns = 3;
inline int bunch_t::pawns_size() const {
  return pawns_.size();
}
inline void bunch_t::clear_pawns() {
  pawns_.Clear();
}
inline ::google::protobuf::int32 bunch_t::pawns(int index) const {
  // @@protoc_insertion_point(field_get:proto3.bunch_t.pawns)
  return pawns_.Get(index);
}
inline void bunch_t::set_pawns(int index, ::google::protobuf::int32 value) {
  pawns_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto3.bunch_t.pawns)
}
inline void bunch_t::add_pawns(::google::protobuf::int32 value) {
  pawns_.Add(value);
  // @@protoc_insertion_point(field_add:proto3.bunch_t.pawns)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
bunch_t::pawns() const {
  // @@protoc_insertion_point(field_list:proto3.bunch_t.pawns)
  return pawns_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
bunch_t::mutable_pawns() {
  // @@protoc_insertion_point(field_mutable_list:proto3.bunch_t.pawns)
  return &pawns_;
}

// repeated .proto3.bunch_t child = 4;
inline int bunch_t::child_size() const {
  return child_.size();
}
inline void bunch_t::clear_child() {
  child_.Clear();
}
inline const ::proto3::bunch_t& bunch_t::child(int index) const {
  // @@protoc_insertion_point(field_get:proto3.bunch_t.child)
  return child_.Get(index);
}
inline ::proto3::bunch_t* bunch_t::mutable_child(int index) {
  // @@protoc_insertion_point(field_mutable:proto3.bunch_t.child)
  return child_.Mutable(index);
}
inline ::proto3::bunch_t* bunch_t::add_child() {
  // @@protoc_insertion_point(field_add:proto3.bunch_t.child)
  return child_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto3::bunch_t >*
bunch_t::mutable_child() {
  // @@protoc_insertion_point(field_mutable_list:proto3.bunch_t.child)
  return &child_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto3::bunch_t >&
bunch_t::child() const {
  // @@protoc_insertion_point(field_list:proto3.bunch_t.child)
  return child_;
}

// -------------------------------------------------------------------

// play_t

// optional .proto3.player_t player = 1;
inline bool play_t::has_player() const {
  return !_is_default_instance_ && player_ != NULL;
}
inline void play_t::clear_player() {
  if (GetArenaNoVirtual() == NULL && player_ != NULL) delete player_;
  player_ = NULL;
}
inline const ::proto3::player_t& play_t::player() const {
  // @@protoc_insertion_point(field_get:proto3.play_t.player)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return player_ != NULL ? *player_ : *default_instance().player_;
#else
  return player_ != NULL ? *player_ : *default_instance_->player_;
#endif
}
inline ::proto3::player_t* play_t::mutable_player() {
  
  if (player_ == NULL) {
    player_ = new ::proto3::player_t;
  }
  // @@protoc_insertion_point(field_mutable:proto3.play_t.player)
  return player_;
}
inline ::proto3::player_t* play_t::release_player() {
  // @@protoc_insertion_point(field_release:proto3.play_t.player)
  
  ::proto3::player_t* temp = player_;
  player_ = NULL;
  return temp;
}
inline void play_t::set_allocated_player(::proto3::player_t* player) {
  delete player_;
  player_ = player;
  if (player) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto3.play_t.player)
}

// repeated int32 hands = 2;
inline int play_t::hands_size() const {
  return hands_.size();
}
inline void play_t::clear_hands() {
  hands_.Clear();
}
inline ::google::protobuf::int32 play_t::hands(int index) const {
  // @@protoc_insertion_point(field_get:proto3.play_t.hands)
  return hands_.Get(index);
}
inline void play_t::set_hands(int index, ::google::protobuf::int32 value) {
  hands_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto3.play_t.hands)
}
inline void play_t::add_hands(::google::protobuf::int32 value) {
  hands_.Add(value);
  // @@protoc_insertion_point(field_add:proto3.play_t.hands)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
play_t::hands() const {
  // @@protoc_insertion_point(field_list:proto3.play_t.hands)
  return hands_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
play_t::mutable_hands() {
  // @@protoc_insertion_point(field_mutable_list:proto3.play_t.hands)
  return &hands_;
}

// repeated int32 discards = 3;
inline int play_t::discards_size() const {
  return discards_.size();
}
inline void play_t::clear_discards() {
  discards_.Clear();
}
inline ::google::protobuf::int32 play_t::discards(int index) const {
  // @@protoc_insertion_point(field_get:proto3.play_t.discards)
  return discards_.Get(index);
}
inline void play_t::set_discards(int index, ::google::protobuf::int32 value) {
  discards_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto3.play_t.discards)
}
inline void play_t::add_discards(::google::protobuf::int32 value) {
  discards_.Add(value);
  // @@protoc_insertion_point(field_add:proto3.play_t.discards)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
play_t::discards() const {
  // @@protoc_insertion_point(field_list:proto3.play_t.discards)
  return discards_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
play_t::mutable_discards() {
  // @@protoc_insertion_point(field_mutable_list:proto3.play_t.discards)
  return &discards_;
}

// repeated .proto3.bunch_t bunch = 4;
inline int play_t::bunch_size() const {
  return bunch_.size();
}
inline void play_t::clear_bunch() {
  bunch_.Clear();
}
inline const ::proto3::bunch_t& play_t::bunch(int index) const {
  // @@protoc_insertion_point(field_get:proto3.play_t.bunch)
  return bunch_.Get(index);
}
inline ::proto3::bunch_t* play_t::mutable_bunch(int index) {
  // @@protoc_insertion_point(field_mutable:proto3.play_t.bunch)
  return bunch_.Mutable(index);
}
inline ::proto3::bunch_t* play_t::add_bunch() {
  // @@protoc_insertion_point(field_add:proto3.play_t.bunch)
  return bunch_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto3::bunch_t >*
play_t::mutable_bunch() {
  // @@protoc_insertion_point(field_mutable_list:proto3.play_t.bunch)
  return &bunch_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto3::bunch_t >&
play_t::bunch() const {
  // @@protoc_insertion_point(field_list:proto3.play_t.bunch)
  return bunch_;
}

// optional int32 selected_card = 5;
inline void play_t::clear_selected_card() {
  selected_card_ = 0;
}
inline ::google::protobuf::int32 play_t::selected_card() const {
  // @@protoc_insertion_point(field_get:proto3.play_t.selected_card)
  return selected_card_;
}
inline void play_t::set_selected_card(::google::protobuf::int32 value) {
  
  selected_card_ = value;
  // @@protoc_insertion_point(field_set:proto3.play_t.selected_card)
}

// optional int32 win = 6;
inline void play_t::clear_win() {
  win_ = 0;
}
inline ::google::protobuf::int32 play_t::win() const {
  // @@protoc_insertion_point(field_get:proto3.play_t.win)
  return win_;
}
inline void play_t::set_win(::google::protobuf::int32 value) {
  
  win_ = value;
  // @@protoc_insertion_point(field_set:proto3.play_t.win)
}

// repeated int32 winby = 7;
inline int play_t::winby_size() const {
  return winby_.size();
}
inline void play_t::clear_winby() {
  winby_.Clear();
}
inline ::google::protobuf::int32 play_t::winby(int index) const {
  // @@protoc_insertion_point(field_get:proto3.play_t.winby)
  return winby_.Get(index);
}
inline void play_t::set_winby(int index, ::google::protobuf::int32 value) {
  winby_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto3.play_t.winby)
}
inline void play_t::add_winby(::google::protobuf::int32 value) {
  winby_.Add(value);
  // @@protoc_insertion_point(field_add:proto3.play_t.winby)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
play_t::winby() const {
  // @@protoc_insertion_point(field_list:proto3.play_t.winby)
  return winby_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
play_t::mutable_winby() {
  // @@protoc_insertion_point(field_mutable_list:proto3.play_t.winby)
  return &winby_;
}

// optional int32 point = 8;
inline void play_t::clear_point() {
  point_ = 0;
}
inline ::google::protobuf::int32 play_t::point() const {
  // @@protoc_insertion_point(field_get:proto3.play_t.point)
  return point_;
}
inline void play_t::set_point(::google::protobuf::int32 value) {
  
  point_ = value;
  // @@protoc_insertion_point(field_set:proto3.play_t.point)
}

// optional int32 chunk = 9;
inline void play_t::clear_chunk() {
  chunk_ = 0;
}
inline ::google::protobuf::int32 play_t::chunk() const {
  // @@protoc_insertion_point(field_get:proto3.play_t.chunk)
  return chunk_;
}
inline void play_t::set_chunk(::google::protobuf::int32 value) {
  
  chunk_ = value;
  // @@protoc_insertion_point(field_set:proto3.play_t.chunk)
}

// optional int32 multiple = 10;
inline void play_t::clear_multiple() {
  multiple_ = 0;
}
inline ::google::protobuf::int32 play_t::multiple() const {
  // @@protoc_insertion_point(field_get:proto3.play_t.multiple)
  return multiple_;
}
inline void play_t::set_multiple(::google::protobuf::int32 value) {
  
  multiple_ = value;
  // @@protoc_insertion_point(field_set:proto3.play_t.multiple)
}

// optional int32 score = 11;
inline void play_t::clear_score() {
  score_ = 0;
}
inline ::google::protobuf::int32 play_t::score() const {
  // @@protoc_insertion_point(field_get:proto3.play_t.score)
  return score_;
}
inline void play_t::set_score(::google::protobuf::int32 value) {
  
  score_ = value;
  // @@protoc_insertion_point(field_set:proto3.play_t.score)
}

// optional int32 total = 12;
inline void play_t::clear_total() {
  total_ = 0;
}
inline ::google::protobuf::int32 play_t::total() const {
  // @@protoc_insertion_point(field_get:proto3.play_t.total)
  return total_;
}
inline void play_t::set_total(::google::protobuf::int32 value) {
  
  total_ = value;
  // @@protoc_insertion_point(field_set:proto3.play_t.total)
}

// optional int32 seat = 13;
inline void play_t::clear_seat() {
  seat_ = 0;
}
inline ::google::protobuf::int32 play_t::seat() const {
  // @@protoc_insertion_point(field_get:proto3.play_t.seat)
  return seat_;
}
inline void play_t::set_seat(::google::protobuf::int32 value) {
  
  seat_ = value;
  // @@protoc_insertion_point(field_set:proto3.play_t.seat)
}

// repeated .proto3.achv_t achvs = 14;
inline int play_t::achvs_size() const {
  return achvs_.size();
}
inline void play_t::clear_achvs() {
  achvs_.Clear();
}
inline const ::proto3::achv_t& play_t::achvs(int index) const {
  // @@protoc_insertion_point(field_get:proto3.play_t.achvs)
  return achvs_.Get(index);
}
inline ::proto3::achv_t* play_t::mutable_achvs(int index) {
  // @@protoc_insertion_point(field_mutable:proto3.play_t.achvs)
  return achvs_.Mutable(index);
}
inline ::proto3::achv_t* play_t::add_achvs() {
  // @@protoc_insertion_point(field_add:proto3.play_t.achvs)
  return achvs_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto3::achv_t >*
play_t::mutable_achvs() {
  // @@protoc_insertion_point(field_mutable_list:proto3.play_t.achvs)
  return &achvs_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto3::achv_t >&
play_t::achvs() const {
  // @@protoc_insertion_point(field_list:proto3.play_t.achvs)
  return achvs_;
}

// -------------------------------------------------------------------

// charge_t

// optional string phone = 1;
inline void charge_t::clear_phone() {
  phone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& charge_t::phone() const {
  // @@protoc_insertion_point(field_get:proto3.charge_t.phone)
  return phone_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void charge_t::set_phone(const ::std::string& value) {
  
  phone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto3.charge_t.phone)
}
inline void charge_t::set_phone(const char* value) {
  
  phone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto3.charge_t.phone)
}
inline void charge_t::set_phone(const char* value, size_t size) {
  
  phone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto3.charge_t.phone)
}
inline ::std::string* charge_t::mutable_phone() {
  
  // @@protoc_insertion_point(field_mutable:proto3.charge_t.phone)
  return phone_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* charge_t::release_phone() {
  // @@protoc_insertion_point(field_release:proto3.charge_t.phone)
  
  return phone_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void charge_t::set_allocated_phone(::std::string* phone) {
  if (phone != NULL) {
    
  } else {
    
  }
  phone_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), phone);
  // @@protoc_insertion_point(field_set_allocated:proto3.charge_t.phone)
}

// optional string uid = 2;
inline void charge_t::clear_uid() {
  uid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& charge_t::uid() const {
  // @@protoc_insertion_point(field_get:proto3.charge_t.uid)
  return uid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void charge_t::set_uid(const ::std::string& value) {
  
  uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto3.charge_t.uid)
}
inline void charge_t::set_uid(const char* value) {
  
  uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto3.charge_t.uid)
}
inline void charge_t::set_uid(const char* value, size_t size) {
  
  uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto3.charge_t.uid)
}
inline ::std::string* charge_t::mutable_uid() {
  
  // @@protoc_insertion_point(field_mutable:proto3.charge_t.uid)
  return uid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* charge_t::release_uid() {
  // @@protoc_insertion_point(field_release:proto3.charge_t.uid)
  
  return uid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void charge_t::set_allocated_uid(::std::string* uid) {
  if (uid != NULL) {
    
  } else {
    
  }
  uid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uid);
  // @@protoc_insertion_point(field_set_allocated:proto3.charge_t.uid)
}

// optional uint32 time = 3;
inline void charge_t::clear_time() {
  time_ = 0u;
}
inline ::google::protobuf::uint32 charge_t::time() const {
  // @@protoc_insertion_point(field_get:proto3.charge_t.time)
  return time_;
}
inline void charge_t::set_time(::google::protobuf::uint32 value) {
  
  time_ = value;
  // @@protoc_insertion_point(field_set:proto3.charge_t.time)
}

// optional int32 amount = 4;
inline void charge_t::clear_amount() {
  amount_ = 0;
}
inline ::google::protobuf::int32 charge_t::amount() const {
  // @@protoc_insertion_point(field_get:proto3.charge_t.amount)
  return amount_;
}
inline void charge_t::set_amount(::google::protobuf::int32 value) {
  
  amount_ = value;
  // @@protoc_insertion_point(field_set:proto3.charge_t.amount)
}

// -------------------------------------------------------------------

// MsgBase

// optional .proto3.pb_msg mid = 1;
inline void MsgBase::clear_mid() {
  mid_ = 0;
}
inline ::proto3::pb_msg MsgBase::mid() const {
  // @@protoc_insertion_point(field_get:proto3.MsgBase.mid)
  return static_cast< ::proto3::pb_msg >(mid_);
}
inline void MsgBase::set_mid(::proto3::pb_msg value) {
  
  mid_ = value;
  // @@protoc_insertion_point(field_set:proto3.MsgBase.mid)
}

// -------------------------------------------------------------------

// MsgCSLogin

// optional .proto3.pb_msg mid = 1;
inline void MsgCSLogin::clear_mid() {
  mid_ = 0;
}
inline ::proto3::pb_msg MsgCSLogin::mid() const {
  // @@protoc_insertion_point(field_get:proto3.MsgCSLogin.mid)
  return static_cast< ::proto3::pb_msg >(mid_);
}
inline void MsgCSLogin::set_mid(::proto3::pb_msg value) {
  
  mid_ = value;
  // @@protoc_insertion_point(field_set:proto3.MsgCSLogin.mid)
}

// optional uint32 version = 3;
inline void MsgCSLogin::clear_version() {
  version_ = 0u;
}
inline ::google::protobuf::uint32 MsgCSLogin::version() const {
  // @@protoc_insertion_point(field_get:proto3.MsgCSLogin.version)
  return version_;
}
inline void MsgCSLogin::set_version(::google::protobuf::uint32 value) {
  
  version_ = value;
  // @@protoc_insertion_point(field_set:proto3.MsgCSLogin.version)
}

// optional .proto3.user_t user = 2;
inline bool MsgCSLogin::has_user() const {
  return !_is_default_instance_ && user_ != NULL;
}
inline void MsgCSLogin::clear_user() {
  if (GetArenaNoVirtual() == NULL && user_ != NULL) delete user_;
  user_ = NULL;
}
inline const ::proto3::user_t& MsgCSLogin::user() const {
  // @@protoc_insertion_point(field_get:proto3.MsgCSLogin.user)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return user_ != NULL ? *user_ : *default_instance().user_;
#else
  return user_ != NULL ? *user_ : *default_instance_->user_;
#endif
}
inline ::proto3::user_t* MsgCSLogin::mutable_user() {
  
  if (user_ == NULL) {
    user_ = new ::proto3::user_t;
  }
  // @@protoc_insertion_point(field_mutable:proto3.MsgCSLogin.user)
  return user_;
}
inline ::proto3::user_t* MsgCSLogin::release_user() {
  // @@protoc_insertion_point(field_release:proto3.MsgCSLogin.user)
  
  ::proto3::user_t* temp = user_;
  user_ = NULL;
  return temp;
}
inline void MsgCSLogin::set_allocated_user(::proto3::user_t* user) {
  delete user_;
  user_ = user;
  if (user) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto3.MsgCSLogin.user)
}

// -------------------------------------------------------------------

// MsgSCLogin

// optional .proto3.pb_msg mid = 1;
inline void MsgSCLogin::clear_mid() {
  mid_ = 0;
}
inline ::proto3::pb_msg MsgSCLogin::mid() const {
  // @@protoc_insertion_point(field_get:proto3.MsgSCLogin.mid)
  return static_cast< ::proto3::pb_msg >(mid_);
}
inline void MsgSCLogin::set_mid(::proto3::pb_msg value) {
  
  mid_ = value;
  // @@protoc_insertion_point(field_set:proto3.MsgSCLogin.mid)
}

// optional string uid = 2;
inline void MsgSCLogin::clear_uid() {
  uid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgSCLogin::uid() const {
  // @@protoc_insertion_point(field_get:proto3.MsgSCLogin.uid)
  return uid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgSCLogin::set_uid(const ::std::string& value) {
  
  uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto3.MsgSCLogin.uid)
}
inline void MsgSCLogin::set_uid(const char* value) {
  
  uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto3.MsgSCLogin.uid)
}
inline void MsgSCLogin::set_uid(const char* value, size_t size) {
  
  uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto3.MsgSCLogin.uid)
}
inline ::std::string* MsgSCLogin::mutable_uid() {
  
  // @@protoc_insertion_point(field_mutable:proto3.MsgSCLogin.uid)
  return uid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgSCLogin::release_uid() {
  // @@protoc_insertion_point(field_release:proto3.MsgSCLogin.uid)
  
  return uid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgSCLogin::set_allocated_uid(::std::string* uid) {
  if (uid != NULL) {
    
  } else {
    
  }
  uid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uid);
  // @@protoc_insertion_point(field_set_allocated:proto3.MsgSCLogin.uid)
}

// optional uint32 version = 3;
inline void MsgSCLogin::clear_version() {
  version_ = 0u;
}
inline ::google::protobuf::uint32 MsgSCLogin::version() const {
  // @@protoc_insertion_point(field_get:proto3.MsgSCLogin.version)
  return version_;
}
inline void MsgSCLogin::set_version(::google::protobuf::uint32 value) {
  
  version_ = value;
  // @@protoc_insertion_point(field_set:proto3.MsgSCLogin.version)
}

// optional uint64 session = 4;
inline void MsgSCLogin::clear_session() {
  session_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 MsgSCLogin::session() const {
  // @@protoc_insertion_point(field_get:proto3.MsgSCLogin.session)
  return session_;
}
inline void MsgSCLogin::set_session(::google::protobuf::uint64 value) {
  
  session_ = value;
  // @@protoc_insertion_point(field_set:proto3.MsgSCLogin.session)
}

// optional string ip = 5;
inline void MsgSCLogin::clear_ip() {
  ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgSCLogin::ip() const {
  // @@protoc_insertion_point(field_get:proto3.MsgSCLogin.ip)
  return ip_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgSCLogin::set_ip(const ::std::string& value) {
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto3.MsgSCLogin.ip)
}
inline void MsgSCLogin::set_ip(const char* value) {
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto3.MsgSCLogin.ip)
}
inline void MsgSCLogin::set_ip(const char* value, size_t size) {
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto3.MsgSCLogin.ip)
}
inline ::std::string* MsgSCLogin::mutable_ip() {
  
  // @@protoc_insertion_point(field_mutable:proto3.MsgSCLogin.ip)
  return ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgSCLogin::release_ip() {
  // @@protoc_insertion_point(field_release:proto3.MsgSCLogin.ip)
  
  return ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgSCLogin::set_allocated_ip(::std::string* ip) {
  if (ip != NULL) {
    
  } else {
    
  }
  ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ip);
  // @@protoc_insertion_point(field_set_allocated:proto3.MsgSCLogin.ip)
}

// optional uint32 port = 6;
inline void MsgSCLogin::clear_port() {
  port_ = 0u;
}
inline ::google::protobuf::uint32 MsgSCLogin::port() const {
  // @@protoc_insertion_point(field_get:proto3.MsgSCLogin.port)
  return port_;
}
inline void MsgSCLogin::set_port(::google::protobuf::uint32 value) {
  
  port_ = value;
  // @@protoc_insertion_point(field_set:proto3.MsgSCLogin.port)
}

// optional .proto3.pb_enum result = 7;
inline void MsgSCLogin::clear_result() {
  result_ = 0;
}
inline ::proto3::pb_enum MsgSCLogin::result() const {
  // @@protoc_insertion_point(field_get:proto3.MsgSCLogin.result)
  return static_cast< ::proto3::pb_enum >(result_);
}
inline void MsgSCLogin::set_result(::proto3::pb_enum value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:proto3.MsgSCLogin.result)
}

// -------------------------------------------------------------------

// MsgCLEnter

// optional .proto3.pb_msg mid = 1;
inline void MsgCLEnter::clear_mid() {
  mid_ = 0;
}
inline ::proto3::pb_msg MsgCLEnter::mid() const {
  // @@protoc_insertion_point(field_get:proto3.MsgCLEnter.mid)
  return static_cast< ::proto3::pb_msg >(mid_);
}
inline void MsgCLEnter::set_mid(::proto3::pb_msg value) {
  
  mid_ = value;
  // @@protoc_insertion_point(field_set:proto3.MsgCLEnter.mid)
}

// optional string uid = 2;
inline void MsgCLEnter::clear_uid() {
  uid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgCLEnter::uid() const {
  // @@protoc_insertion_point(field_get:proto3.MsgCLEnter.uid)
  return uid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgCLEnter::set_uid(const ::std::string& value) {
  
  uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto3.MsgCLEnter.uid)
}
inline void MsgCLEnter::set_uid(const char* value) {
  
  uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto3.MsgCLEnter.uid)
}
inline void MsgCLEnter::set_uid(const char* value, size_t size) {
  
  uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto3.MsgCLEnter.uid)
}
inline ::std::string* MsgCLEnter::mutable_uid() {
  
  // @@protoc_insertion_point(field_mutable:proto3.MsgCLEnter.uid)
  return uid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgCLEnter::release_uid() {
  // @@protoc_insertion_point(field_release:proto3.MsgCLEnter.uid)
  
  return uid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgCLEnter::set_allocated_uid(::std::string* uid) {
  if (uid != NULL) {
    
  } else {
    
  }
  uid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uid);
  // @@protoc_insertion_point(field_set_allocated:proto3.MsgCLEnter.uid)
}

// optional uint32 version = 3;
inline void MsgCLEnter::clear_version() {
  version_ = 0u;
}
inline ::google::protobuf::uint32 MsgCLEnter::version() const {
  // @@protoc_insertion_point(field_get:proto3.MsgCLEnter.version)
  return version_;
}
inline void MsgCLEnter::set_version(::google::protobuf::uint32 value) {
  
  version_ = value;
  // @@protoc_insertion_point(field_set:proto3.MsgCLEnter.version)
}

// optional uint64 session = 4;
inline void MsgCLEnter::clear_session() {
  session_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 MsgCLEnter::session() const {
  // @@protoc_insertion_point(field_get:proto3.MsgCLEnter.session)
  return session_;
}
inline void MsgCLEnter::set_session(::google::protobuf::uint64 value) {
  
  session_ = value;
  // @@protoc_insertion_point(field_set:proto3.MsgCLEnter.session)
}

// -------------------------------------------------------------------

// MsgLCEnter

// optional .proto3.pb_msg mid = 1;
inline void MsgLCEnter::clear_mid() {
  mid_ = 0;
}
inline ::proto3::pb_msg MsgLCEnter::mid() const {
  // @@protoc_insertion_point(field_get:proto3.MsgLCEnter.mid)
  return static_cast< ::proto3::pb_msg >(mid_);
}
inline void MsgLCEnter::set_mid(::proto3::pb_msg value) {
  
  mid_ = value;
  // @@protoc_insertion_point(field_set:proto3.MsgLCEnter.mid)
}

// optional int32 key = 2;
inline void MsgLCEnter::clear_key() {
  key_ = 0;
}
inline ::google::protobuf::int32 MsgLCEnter::key() const {
  // @@protoc_insertion_point(field_get:proto3.MsgLCEnter.key)
  return key_;
}
inline void MsgLCEnter::set_key(::google::protobuf::int32 value) {
  
  key_ = value;
  // @@protoc_insertion_point(field_set:proto3.MsgLCEnter.key)
}

// optional .proto3.player_t player = 3;
inline bool MsgLCEnter::has_player() const {
  return !_is_default_instance_ && player_ != NULL;
}
inline void MsgLCEnter::clear_player() {
  if (GetArenaNoVirtual() == NULL && player_ != NULL) delete player_;
  player_ = NULL;
}
inline const ::proto3::player_t& MsgLCEnter::player() const {
  // @@protoc_insertion_point(field_get:proto3.MsgLCEnter.player)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return player_ != NULL ? *player_ : *default_instance().player_;
#else
  return player_ != NULL ? *player_ : *default_instance_->player_;
#endif
}
inline ::proto3::player_t* MsgLCEnter::mutable_player() {
  
  if (player_ == NULL) {
    player_ = new ::proto3::player_t;
  }
  // @@protoc_insertion_point(field_mutable:proto3.MsgLCEnter.player)
  return player_;
}
inline ::proto3::player_t* MsgLCEnter::release_player() {
  // @@protoc_insertion_point(field_release:proto3.MsgLCEnter.player)
  
  ::proto3::player_t* temp = player_;
  player_ = NULL;
  return temp;
}
inline void MsgLCEnter::set_allocated_player(::proto3::player_t* player) {
  delete player_;
  player_ = player;
  if (player) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto3.MsgLCEnter.player)
}

// optional .proto3.lobby_t lobby = 4;
inline bool MsgLCEnter::has_lobby() const {
  return !_is_default_instance_ && lobby_ != NULL;
}
inline void MsgLCEnter::clear_lobby() {
  if (GetArenaNoVirtual() == NULL && lobby_ != NULL) delete lobby_;
  lobby_ = NULL;
}
inline const ::proto3::lobby_t& MsgLCEnter::lobby() const {
  // @@protoc_insertion_point(field_get:proto3.MsgLCEnter.lobby)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return lobby_ != NULL ? *lobby_ : *default_instance().lobby_;
#else
  return lobby_ != NULL ? *lobby_ : *default_instance_->lobby_;
#endif
}
inline ::proto3::lobby_t* MsgLCEnter::mutable_lobby() {
  
  if (lobby_ == NULL) {
    lobby_ = new ::proto3::lobby_t;
  }
  // @@protoc_insertion_point(field_mutable:proto3.MsgLCEnter.lobby)
  return lobby_;
}
inline ::proto3::lobby_t* MsgLCEnter::release_lobby() {
  // @@protoc_insertion_point(field_release:proto3.MsgLCEnter.lobby)
  
  ::proto3::lobby_t* temp = lobby_;
  lobby_ = NULL;
  return temp;
}
inline void MsgLCEnter::set_allocated_lobby(::proto3::lobby_t* lobby) {
  delete lobby_;
  lobby_ = lobby;
  if (lobby) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto3.MsgLCEnter.lobby)
}

// optional .proto3.pb_enum result = 5;
inline void MsgLCEnter::clear_result() {
  result_ = 0;
}
inline ::proto3::pb_enum MsgLCEnter::result() const {
  // @@protoc_insertion_point(field_get:proto3.MsgLCEnter.result)
  return static_cast< ::proto3::pb_enum >(result_);
}
inline void MsgLCEnter::set_result(::proto3::pb_enum value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:proto3.MsgLCEnter.result)
}

// -------------------------------------------------------------------

// MsgCLReplays

// optional .proto3.pb_msg mid = 1;
inline void MsgCLReplays::clear_mid() {
  mid_ = 0;
}
inline ::proto3::pb_msg MsgCLReplays::mid() const {
  // @@protoc_insertion_point(field_get:proto3.MsgCLReplays.mid)
  return static_cast< ::proto3::pb_msg >(mid_);
}
inline void MsgCLReplays::set_mid(::proto3::pb_msg value) {
  
  mid_ = value;
  // @@protoc_insertion_point(field_set:proto3.MsgCLReplays.mid)
}

// optional string uid = 2;
inline void MsgCLReplays::clear_uid() {
  uid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgCLReplays::uid() const {
  // @@protoc_insertion_point(field_get:proto3.MsgCLReplays.uid)
  return uid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgCLReplays::set_uid(const ::std::string& value) {
  
  uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto3.MsgCLReplays.uid)
}
inline void MsgCLReplays::set_uid(const char* value) {
  
  uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto3.MsgCLReplays.uid)
}
inline void MsgCLReplays::set_uid(const char* value, size_t size) {
  
  uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto3.MsgCLReplays.uid)
}
inline ::std::string* MsgCLReplays::mutable_uid() {
  
  // @@protoc_insertion_point(field_mutable:proto3.MsgCLReplays.uid)
  return uid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgCLReplays::release_uid() {
  // @@protoc_insertion_point(field_release:proto3.MsgCLReplays.uid)
  
  return uid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgCLReplays::set_allocated_uid(::std::string* uid) {
  if (uid != NULL) {
    
  } else {
    
  }
  uid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uid);
  // @@protoc_insertion_point(field_set_allocated:proto3.MsgCLReplays.uid)
}

// optional uint64 session = 3;
inline void MsgCLReplays::clear_session() {
  session_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 MsgCLReplays::session() const {
  // @@protoc_insertion_point(field_get:proto3.MsgCLReplays.session)
  return session_;
}
inline void MsgCLReplays::set_session(::google::protobuf::uint64 value) {
  
  session_ = value;
  // @@protoc_insertion_point(field_set:proto3.MsgCLReplays.session)
}

// -------------------------------------------------------------------

// MsgLCReplays

// repeated .proto3.user_t users = 1;
inline int MsgLCReplays::users_size() const {
  return users_.size();
}
inline void MsgLCReplays::clear_users() {
  users_.Clear();
}
inline const ::proto3::user_t& MsgLCReplays::users(int index) const {
  // @@protoc_insertion_point(field_get:proto3.MsgLCReplays.users)
  return users_.Get(index);
}
inline ::proto3::user_t* MsgLCReplays::mutable_users(int index) {
  // @@protoc_insertion_point(field_mutable:proto3.MsgLCReplays.users)
  return users_.Mutable(index);
}
inline ::proto3::user_t* MsgLCReplays::add_users() {
  // @@protoc_insertion_point(field_add:proto3.MsgLCReplays.users)
  return users_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto3::user_t >*
MsgLCReplays::mutable_users() {
  // @@protoc_insertion_point(field_mutable_list:proto3.MsgLCReplays.users)
  return &users_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto3::user_t >&
MsgLCReplays::users() const {
  // @@protoc_insertion_point(field_list:proto3.MsgLCReplays.users)
  return users_;
}

// repeated int32 gameIds = 2;
inline int MsgLCReplays::gameids_size() const {
  return gameids_.size();
}
inline void MsgLCReplays::clear_gameids() {
  gameids_.Clear();
}
inline ::google::protobuf::int32 MsgLCReplays::gameids(int index) const {
  // @@protoc_insertion_point(field_get:proto3.MsgLCReplays.gameIds)
  return gameids_.Get(index);
}
inline void MsgLCReplays::set_gameids(int index, ::google::protobuf::int32 value) {
  gameids_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto3.MsgLCReplays.gameIds)
}
inline void MsgLCReplays::add_gameids(::google::protobuf::int32 value) {
  gameids_.Add(value);
  // @@protoc_insertion_point(field_add:proto3.MsgLCReplays.gameIds)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
MsgLCReplays::gameids() const {
  // @@protoc_insertion_point(field_list:proto3.MsgLCReplays.gameIds)
  return gameids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
MsgLCReplays::mutable_gameids() {
  // @@protoc_insertion_point(field_mutable_list:proto3.MsgLCReplays.gameIds)
  return &gameids_;
}

// optional .proto3.pb_enum result = 3;
inline void MsgLCReplays::clear_result() {
  result_ = 0;
}
inline ::proto3::pb_enum MsgLCReplays::result() const {
  // @@protoc_insertion_point(field_get:proto3.MsgLCReplays.result)
  return static_cast< ::proto3::pb_enum >(result_);
}
inline void MsgLCReplays::set_result(::proto3::pb_enum value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:proto3.MsgLCReplays.result)
}

// -------------------------------------------------------------------

// MsgCLReplay

// optional .proto3.pb_msg mid = 1;
inline void MsgCLReplay::clear_mid() {
  mid_ = 0;
}
inline ::proto3::pb_msg MsgCLReplay::mid() const {
  // @@protoc_insertion_point(field_get:proto3.MsgCLReplay.mid)
  return static_cast< ::proto3::pb_msg >(mid_);
}
inline void MsgCLReplay::set_mid(::proto3::pb_msg value) {
  
  mid_ = value;
  // @@protoc_insertion_point(field_set:proto3.MsgCLReplay.mid)
}

// optional uint32 gameId = 2;
inline void MsgCLReplay::clear_gameid() {
  gameid_ = 0u;
}
inline ::google::protobuf::uint32 MsgCLReplay::gameid() const {
  // @@protoc_insertion_point(field_get:proto3.MsgCLReplay.gameId)
  return gameid_;
}
inline void MsgCLReplay::set_gameid(::google::protobuf::uint32 value) {
  
  gameid_ = value;
  // @@protoc_insertion_point(field_set:proto3.MsgCLReplay.gameId)
}

// optional uint64 session = 3;
inline void MsgCLReplay::clear_session() {
  session_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 MsgCLReplay::session() const {
  // @@protoc_insertion_point(field_get:proto3.MsgCLReplay.session)
  return session_;
}
inline void MsgCLReplay::set_session(::google::protobuf::uint64 value) {
  
  session_ = value;
  // @@protoc_insertion_point(field_set:proto3.MsgCLReplay.session)
}

// -------------------------------------------------------------------

// MsgLCReplay

// optional .proto3.pb_msg mid = 1;
inline void MsgLCReplay::clear_mid() {
  mid_ = 0;
}
inline ::proto3::pb_msg MsgLCReplay::mid() const {
  // @@protoc_insertion_point(field_get:proto3.MsgLCReplay.mid)
  return static_cast< ::proto3::pb_msg >(mid_);
}
inline void MsgLCReplay::set_mid(::proto3::pb_msg value) {
  
  mid_ = value;
  // @@protoc_insertion_point(field_set:proto3.MsgLCReplay.mid)
}

// optional int32 gameId = 2;
inline void MsgLCReplay::clear_gameid() {
  gameid_ = 0;
}
inline ::google::protobuf::int32 MsgLCReplay::gameid() const {
  // @@protoc_insertion_point(field_get:proto3.MsgLCReplay.gameId)
  return gameid_;
}
inline void MsgLCReplay::set_gameid(::google::protobuf::int32 value) {
  
  gameid_ = value;
  // @@protoc_insertion_point(field_set:proto3.MsgLCReplay.gameId)
}

// optional .proto3.pb_msg gameCategory = 3;
inline void MsgLCReplay::clear_gamecategory() {
  gamecategory_ = 0;
}
inline ::proto3::pb_msg MsgLCReplay::gamecategory() const {
  // @@protoc_insertion_point(field_get:proto3.MsgLCReplay.gameCategory)
  return static_cast< ::proto3::pb_msg >(gamecategory_);
}
inline void MsgLCReplay::set_gamecategory(::proto3::pb_msg value) {
  
  gamecategory_ = value;
  // @@protoc_insertion_point(field_set:proto3.MsgLCReplay.gameCategory)
}

// optional int32 banker = 4;
inline void MsgLCReplay::clear_banker() {
  banker_ = 0;
}
inline ::google::protobuf::int32 MsgLCReplay::banker() const {
  // @@protoc_insertion_point(field_get:proto3.MsgLCReplay.banker)
  return banker_;
}
inline void MsgLCReplay::set_banker(::google::protobuf::int32 value) {
  
  banker_ = value;
  // @@protoc_insertion_point(field_set:proto3.MsgLCReplay.banker)
}

// optional int32 round = 5;
inline void MsgLCReplay::clear_round() {
  round_ = 0;
}
inline ::google::protobuf::int32 MsgLCReplay::round() const {
  // @@protoc_insertion_point(field_get:proto3.MsgLCReplay.round)
  return round_;
}
inline void MsgLCReplay::set_round(::google::protobuf::int32 value) {
  
  round_ = value;
  // @@protoc_insertion_point(field_set:proto3.MsgLCReplay.round)
}

// optional int32 rounds = 6;
inline void MsgLCReplay::clear_rounds() {
  rounds_ = 0;
}
inline ::google::protobuf::int32 MsgLCReplay::rounds() const {
  // @@protoc_insertion_point(field_get:proto3.MsgLCReplay.rounds)
  return rounds_;
}
inline void MsgLCReplay::set_rounds(::google::protobuf::int32 value) {
  
  rounds_ = value;
  // @@protoc_insertion_point(field_set:proto3.MsgLCReplay.rounds)
}

// repeated int32 piles = 7;
inline int MsgLCReplay::piles_size() const {
  return piles_.size();
}
inline void MsgLCReplay::clear_piles() {
  piles_.Clear();
}
inline ::google::protobuf::int32 MsgLCReplay::piles(int index) const {
  // @@protoc_insertion_point(field_get:proto3.MsgLCReplay.piles)
  return piles_.Get(index);
}
inline void MsgLCReplay::set_piles(int index, ::google::protobuf::int32 value) {
  piles_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto3.MsgLCReplay.piles)
}
inline void MsgLCReplay::add_piles(::google::protobuf::int32 value) {
  piles_.Add(value);
  // @@protoc_insertion_point(field_add:proto3.MsgLCReplay.piles)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
MsgLCReplay::piles() const {
  // @@protoc_insertion_point(field_list:proto3.MsgLCReplay.piles)
  return piles_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
MsgLCReplay::mutable_piles() {
  // @@protoc_insertion_point(field_mutable_list:proto3.MsgLCReplay.piles)
  return &piles_;
}

// repeated int32 bottom = 8;
inline int MsgLCReplay::bottom_size() const {
  return bottom_.size();
}
inline void MsgLCReplay::clear_bottom() {
  bottom_.Clear();
}
inline ::google::protobuf::int32 MsgLCReplay::bottom(int index) const {
  // @@protoc_insertion_point(field_get:proto3.MsgLCReplay.bottom)
  return bottom_.Get(index);
}
inline void MsgLCReplay::set_bottom(int index, ::google::protobuf::int32 value) {
  bottom_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto3.MsgLCReplay.bottom)
}
inline void MsgLCReplay::add_bottom(::google::protobuf::int32 value) {
  bottom_.Add(value);
  // @@protoc_insertion_point(field_add:proto3.MsgLCReplay.bottom)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
MsgLCReplay::bottom() const {
  // @@protoc_insertion_point(field_list:proto3.MsgLCReplay.bottom)
  return bottom_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
MsgLCReplay::mutable_bottom() {
  // @@protoc_insertion_point(field_mutable_list:proto3.MsgLCReplay.bottom)
  return &bottom_;
}

// repeated .proto3.bunch_t hands = 9;
inline int MsgLCReplay::hands_size() const {
  return hands_.size();
}
inline void MsgLCReplay::clear_hands() {
  hands_.Clear();
}
inline const ::proto3::bunch_t& MsgLCReplay::hands(int index) const {
  // @@protoc_insertion_point(field_get:proto3.MsgLCReplay.hands)
  return hands_.Get(index);
}
inline ::proto3::bunch_t* MsgLCReplay::mutable_hands(int index) {
  // @@protoc_insertion_point(field_mutable:proto3.MsgLCReplay.hands)
  return hands_.Mutable(index);
}
inline ::proto3::bunch_t* MsgLCReplay::add_hands() {
  // @@protoc_insertion_point(field_add:proto3.MsgLCReplay.hands)
  return hands_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto3::bunch_t >*
MsgLCReplay::mutable_hands() {
  // @@protoc_insertion_point(field_mutable_list:proto3.MsgLCReplay.hands)
  return &hands_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto3::bunch_t >&
MsgLCReplay::hands() const {
  // @@protoc_insertion_point(field_list:proto3.MsgLCReplay.hands)
  return hands_;
}

// repeated int32 engage = 10;
inline int MsgLCReplay::engage_size() const {
  return engage_.size();
}
inline void MsgLCReplay::clear_engage() {
  engage_.Clear();
}
inline ::google::protobuf::int32 MsgLCReplay::engage(int index) const {
  // @@protoc_insertion_point(field_get:proto3.MsgLCReplay.engage)
  return engage_.Get(index);
}
inline void MsgLCReplay::set_engage(int index, ::google::protobuf::int32 value) {
  engage_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto3.MsgLCReplay.engage)
}
inline void MsgLCReplay::add_engage(::google::protobuf::int32 value) {
  engage_.Add(value);
  // @@protoc_insertion_point(field_add:proto3.MsgLCReplay.engage)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
MsgLCReplay::engage() const {
  // @@protoc_insertion_point(field_list:proto3.MsgLCReplay.engage)
  return engage_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
MsgLCReplay::mutable_engage() {
  // @@protoc_insertion_point(field_mutable_list:proto3.MsgLCReplay.engage)
  return &engage_;
}

// repeated .proto3.bunch_t ops = 11;
inline int MsgLCReplay::ops_size() const {
  return ops_.size();
}
inline void MsgLCReplay::clear_ops() {
  ops_.Clear();
}
inline const ::proto3::bunch_t& MsgLCReplay::ops(int index) const {
  // @@protoc_insertion_point(field_get:proto3.MsgLCReplay.ops)
  return ops_.Get(index);
}
inline ::proto3::bunch_t* MsgLCReplay::mutable_ops(int index) {
  // @@protoc_insertion_point(field_mutable:proto3.MsgLCReplay.ops)
  return ops_.Mutable(index);
}
inline ::proto3::bunch_t* MsgLCReplay::add_ops() {
  // @@protoc_insertion_point(field_add:proto3.MsgLCReplay.ops)
  return ops_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto3::bunch_t >*
MsgLCReplay::mutable_ops() {
  // @@protoc_insertion_point(field_mutable_list:proto3.MsgLCReplay.ops)
  return &ops_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto3::bunch_t >&
MsgLCReplay::ops() const {
  // @@protoc_insertion_point(field_list:proto3.MsgLCReplay.ops)
  return ops_;
}

// optional .proto3.pb_enum result = 12;
inline void MsgLCReplay::clear_result() {
  result_ = 0;
}
inline ::proto3::pb_enum MsgLCReplay::result() const {
  // @@protoc_insertion_point(field_get:proto3.MsgLCReplay.result)
  return static_cast< ::proto3::pb_enum >(result_);
}
inline void MsgLCReplay::set_result(::proto3::pb_enum value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:proto3.MsgLCReplay.result)
}

// -------------------------------------------------------------------

// MsgCHLogin

// optional .proto3.pb_msg mid = 1;
inline void MsgCHLogin::clear_mid() {
  mid_ = 0;
}
inline ::proto3::pb_msg MsgCHLogin::mid() const {
  // @@protoc_insertion_point(field_get:proto3.MsgCHLogin.mid)
  return static_cast< ::proto3::pb_msg >(mid_);
}
inline void MsgCHLogin::set_mid(::proto3::pb_msg value) {
  
  mid_ = value;
  // @@protoc_insertion_point(field_set:proto3.MsgCHLogin.mid)
}

// optional uint32 version = 2;
inline void MsgCHLogin::clear_version() {
  version_ = 0u;
}
inline ::google::protobuf::uint32 MsgCHLogin::version() const {
  // @@protoc_insertion_point(field_get:proto3.MsgCHLogin.version)
  return version_;
}
inline void MsgCHLogin::set_version(::google::protobuf::uint32 value) {
  
  version_ = value;
  // @@protoc_insertion_point(field_set:proto3.MsgCHLogin.version)
}

// optional string phone = 3;
inline void MsgCHLogin::clear_phone() {
  phone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgCHLogin::phone() const {
  // @@protoc_insertion_point(field_get:proto3.MsgCHLogin.phone)
  return phone_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgCHLogin::set_phone(const ::std::string& value) {
  
  phone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto3.MsgCHLogin.phone)
}
inline void MsgCHLogin::set_phone(const char* value) {
  
  phone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto3.MsgCHLogin.phone)
}
inline void MsgCHLogin::set_phone(const char* value, size_t size) {
  
  phone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto3.MsgCHLogin.phone)
}
inline ::std::string* MsgCHLogin::mutable_phone() {
  
  // @@protoc_insertion_point(field_mutable:proto3.MsgCHLogin.phone)
  return phone_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgCHLogin::release_phone() {
  // @@protoc_insertion_point(field_release:proto3.MsgCHLogin.phone)
  
  return phone_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgCHLogin::set_allocated_phone(::std::string* phone) {
  if (phone != NULL) {
    
  } else {
    
  }
  phone_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), phone);
  // @@protoc_insertion_point(field_set_allocated:proto3.MsgCHLogin.phone)
}

// optional string pswd = 4;
inline void MsgCHLogin::clear_pswd() {
  pswd_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgCHLogin::pswd() const {
  // @@protoc_insertion_point(field_get:proto3.MsgCHLogin.pswd)
  return pswd_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgCHLogin::set_pswd(const ::std::string& value) {
  
  pswd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto3.MsgCHLogin.pswd)
}
inline void MsgCHLogin::set_pswd(const char* value) {
  
  pswd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto3.MsgCHLogin.pswd)
}
inline void MsgCHLogin::set_pswd(const char* value, size_t size) {
  
  pswd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto3.MsgCHLogin.pswd)
}
inline ::std::string* MsgCHLogin::mutable_pswd() {
  
  // @@protoc_insertion_point(field_mutable:proto3.MsgCHLogin.pswd)
  return pswd_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgCHLogin::release_pswd() {
  // @@protoc_insertion_point(field_release:proto3.MsgCHLogin.pswd)
  
  return pswd_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgCHLogin::set_allocated_pswd(::std::string* pswd) {
  if (pswd != NULL) {
    
  } else {
    
  }
  pswd_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pswd);
  // @@protoc_insertion_point(field_set_allocated:proto3.MsgCHLogin.pswd)
}

// -------------------------------------------------------------------

// MsgHCLogin

// optional .proto3.pb_msg mid = 1;
inline void MsgHCLogin::clear_mid() {
  mid_ = 0;
}
inline ::proto3::pb_msg MsgHCLogin::mid() const {
  // @@protoc_insertion_point(field_get:proto3.MsgHCLogin.mid)
  return static_cast< ::proto3::pb_msg >(mid_);
}
inline void MsgHCLogin::set_mid(::proto3::pb_msg value) {
  
  mid_ = value;
  // @@protoc_insertion_point(field_set:proto3.MsgHCLogin.mid)
}

// optional int32 amount = 2;
inline void MsgHCLogin::clear_amount() {
  amount_ = 0;
}
inline ::google::protobuf::int32 MsgHCLogin::amount() const {
  // @@protoc_insertion_point(field_get:proto3.MsgHCLogin.amount)
  return amount_;
}
inline void MsgHCLogin::set_amount(::google::protobuf::int32 value) {
  
  amount_ = value;
  // @@protoc_insertion_point(field_set:proto3.MsgHCLogin.amount)
}

// optional uint64 session = 3;
inline void MsgHCLogin::clear_session() {
  session_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 MsgHCLogin::session() const {
  // @@protoc_insertion_point(field_get:proto3.MsgHCLogin.session)
  return session_;
}
inline void MsgHCLogin::set_session(::google::protobuf::uint64 value) {
  
  session_ = value;
  // @@protoc_insertion_point(field_set:proto3.MsgHCLogin.session)
}

// optional .proto3.pb_enum result = 4;
inline void MsgHCLogin::clear_result() {
  result_ = 0;
}
inline ::proto3::pb_enum MsgHCLogin::result() const {
  // @@protoc_insertion_point(field_get:proto3.MsgHCLogin.result)
  return static_cast< ::proto3::pb_enum >(result_);
}
inline void MsgHCLogin::set_result(::proto3::pb_enum value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:proto3.MsgHCLogin.result)
}

// -------------------------------------------------------------------

// MsgCHRegister

// optional .proto3.pb_msg mid = 1;
inline void MsgCHRegister::clear_mid() {
  mid_ = 0;
}
inline ::proto3::pb_msg MsgCHRegister::mid() const {
  // @@protoc_insertion_point(field_get:proto3.MsgCHRegister.mid)
  return static_cast< ::proto3::pb_msg >(mid_);
}
inline void MsgCHRegister::set_mid(::proto3::pb_msg value) {
  
  mid_ = value;
  // @@protoc_insertion_point(field_set:proto3.MsgCHRegister.mid)
}

// optional string uid = 2;
inline void MsgCHRegister::clear_uid() {
  uid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgCHRegister::uid() const {
  // @@protoc_insertion_point(field_get:proto3.MsgCHRegister.uid)
  return uid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgCHRegister::set_uid(const ::std::string& value) {
  
  uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto3.MsgCHRegister.uid)
}
inline void MsgCHRegister::set_uid(const char* value) {
  
  uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto3.MsgCHRegister.uid)
}
inline void MsgCHRegister::set_uid(const char* value, size_t size) {
  
  uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto3.MsgCHRegister.uid)
}
inline ::std::string* MsgCHRegister::mutable_uid() {
  
  // @@protoc_insertion_point(field_mutable:proto3.MsgCHRegister.uid)
  return uid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgCHRegister::release_uid() {
  // @@protoc_insertion_point(field_release:proto3.MsgCHRegister.uid)
  
  return uid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgCHRegister::set_allocated_uid(::std::string* uid) {
  if (uid != NULL) {
    
  } else {
    
  }
  uid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uid);
  // @@protoc_insertion_point(field_set_allocated:proto3.MsgCHRegister.uid)
}

// optional string phone = 3;
inline void MsgCHRegister::clear_phone() {
  phone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgCHRegister::phone() const {
  // @@protoc_insertion_point(field_get:proto3.MsgCHRegister.phone)
  return phone_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgCHRegister::set_phone(const ::std::string& value) {
  
  phone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto3.MsgCHRegister.phone)
}
inline void MsgCHRegister::set_phone(const char* value) {
  
  phone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto3.MsgCHRegister.phone)
}
inline void MsgCHRegister::set_phone(const char* value, size_t size) {
  
  phone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto3.MsgCHRegister.phone)
}
inline ::std::string* MsgCHRegister::mutable_phone() {
  
  // @@protoc_insertion_point(field_mutable:proto3.MsgCHRegister.phone)
  return phone_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgCHRegister::release_phone() {
  // @@protoc_insertion_point(field_release:proto3.MsgCHRegister.phone)
  
  return phone_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgCHRegister::set_allocated_phone(::std::string* phone) {
  if (phone != NULL) {
    
  } else {
    
  }
  phone_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), phone);
  // @@protoc_insertion_point(field_set_allocated:proto3.MsgCHRegister.phone)
}

// optional string pswd = 4;
inline void MsgCHRegister::clear_pswd() {
  pswd_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgCHRegister::pswd() const {
  // @@protoc_insertion_point(field_get:proto3.MsgCHRegister.pswd)
  return pswd_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgCHRegister::set_pswd(const ::std::string& value) {
  
  pswd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto3.MsgCHRegister.pswd)
}
inline void MsgCHRegister::set_pswd(const char* value) {
  
  pswd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto3.MsgCHRegister.pswd)
}
inline void MsgCHRegister::set_pswd(const char* value, size_t size) {
  
  pswd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto3.MsgCHRegister.pswd)
}
inline ::std::string* MsgCHRegister::mutable_pswd() {
  
  // @@protoc_insertion_point(field_mutable:proto3.MsgCHRegister.pswd)
  return pswd_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgCHRegister::release_pswd() {
  // @@protoc_insertion_point(field_release:proto3.MsgCHRegister.pswd)
  
  return pswd_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgCHRegister::set_allocated_pswd(::std::string* pswd) {
  if (pswd != NULL) {
    
  } else {
    
  }
  pswd_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pswd);
  // @@protoc_insertion_point(field_set_allocated:proto3.MsgCHRegister.pswd)
}

// optional string name = 5;
inline void MsgCHRegister::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgCHRegister::name() const {
  // @@protoc_insertion_point(field_get:proto3.MsgCHRegister.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgCHRegister::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto3.MsgCHRegister.name)
}
inline void MsgCHRegister::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto3.MsgCHRegister.name)
}
inline void MsgCHRegister::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto3.MsgCHRegister.name)
}
inline ::std::string* MsgCHRegister::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:proto3.MsgCHRegister.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgCHRegister::release_name() {
  // @@protoc_insertion_point(field_release:proto3.MsgCHRegister.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgCHRegister::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:proto3.MsgCHRegister.name)
}

// optional string address = 6;
inline void MsgCHRegister::clear_address() {
  address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgCHRegister::address() const {
  // @@protoc_insertion_point(field_get:proto3.MsgCHRegister.address)
  return address_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgCHRegister::set_address(const ::std::string& value) {
  
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto3.MsgCHRegister.address)
}
inline void MsgCHRegister::set_address(const char* value) {
  
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto3.MsgCHRegister.address)
}
inline void MsgCHRegister::set_address(const char* value, size_t size) {
  
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto3.MsgCHRegister.address)
}
inline ::std::string* MsgCHRegister::mutable_address() {
  
  // @@protoc_insertion_point(field_mutable:proto3.MsgCHRegister.address)
  return address_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgCHRegister::release_address() {
  // @@protoc_insertion_point(field_release:proto3.MsgCHRegister.address)
  
  return address_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgCHRegister::set_allocated_address(::std::string* address) {
  if (address != NULL) {
    
  } else {
    
  }
  address_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), address);
  // @@protoc_insertion_point(field_set_allocated:proto3.MsgCHRegister.address)
}

// optional string idcard = 7;
inline void MsgCHRegister::clear_idcard() {
  idcard_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgCHRegister::idcard() const {
  // @@protoc_insertion_point(field_get:proto3.MsgCHRegister.idcard)
  return idcard_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgCHRegister::set_idcard(const ::std::string& value) {
  
  idcard_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto3.MsgCHRegister.idcard)
}
inline void MsgCHRegister::set_idcard(const char* value) {
  
  idcard_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto3.MsgCHRegister.idcard)
}
inline void MsgCHRegister::set_idcard(const char* value, size_t size) {
  
  idcard_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto3.MsgCHRegister.idcard)
}
inline ::std::string* MsgCHRegister::mutable_idcard() {
  
  // @@protoc_insertion_point(field_mutable:proto3.MsgCHRegister.idcard)
  return idcard_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgCHRegister::release_idcard() {
  // @@protoc_insertion_point(field_release:proto3.MsgCHRegister.idcard)
  
  return idcard_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgCHRegister::set_allocated_idcard(::std::string* idcard) {
  if (idcard != NULL) {
    
  } else {
    
  }
  idcard_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), idcard);
  // @@protoc_insertion_point(field_set_allocated:proto3.MsgCHRegister.idcard)
}

// optional string wechat = 8;
inline void MsgCHRegister::clear_wechat() {
  wechat_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgCHRegister::wechat() const {
  // @@protoc_insertion_point(field_get:proto3.MsgCHRegister.wechat)
  return wechat_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgCHRegister::set_wechat(const ::std::string& value) {
  
  wechat_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto3.MsgCHRegister.wechat)
}
inline void MsgCHRegister::set_wechat(const char* value) {
  
  wechat_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto3.MsgCHRegister.wechat)
}
inline void MsgCHRegister::set_wechat(const char* value, size_t size) {
  
  wechat_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto3.MsgCHRegister.wechat)
}
inline ::std::string* MsgCHRegister::mutable_wechat() {
  
  // @@protoc_insertion_point(field_mutable:proto3.MsgCHRegister.wechat)
  return wechat_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgCHRegister::release_wechat() {
  // @@protoc_insertion_point(field_release:proto3.MsgCHRegister.wechat)
  
  return wechat_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgCHRegister::set_allocated_wechat(::std::string* wechat) {
  if (wechat != NULL) {
    
  } else {
    
  }
  wechat_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), wechat);
  // @@protoc_insertion_point(field_set_allocated:proto3.MsgCHRegister.wechat)
}

// optional string alipay = 9;
inline void MsgCHRegister::clear_alipay() {
  alipay_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgCHRegister::alipay() const {
  // @@protoc_insertion_point(field_get:proto3.MsgCHRegister.alipay)
  return alipay_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgCHRegister::set_alipay(const ::std::string& value) {
  
  alipay_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto3.MsgCHRegister.alipay)
}
inline void MsgCHRegister::set_alipay(const char* value) {
  
  alipay_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto3.MsgCHRegister.alipay)
}
inline void MsgCHRegister::set_alipay(const char* value, size_t size) {
  
  alipay_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto3.MsgCHRegister.alipay)
}
inline ::std::string* MsgCHRegister::mutable_alipay() {
  
  // @@protoc_insertion_point(field_mutable:proto3.MsgCHRegister.alipay)
  return alipay_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgCHRegister::release_alipay() {
  // @@protoc_insertion_point(field_release:proto3.MsgCHRegister.alipay)
  
  return alipay_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgCHRegister::set_allocated_alipay(::std::string* alipay) {
  if (alipay != NULL) {
    
  } else {
    
  }
  alipay_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), alipay);
  // @@protoc_insertion_point(field_set_allocated:proto3.MsgCHRegister.alipay)
}

// optional string verifycode = 10;
inline void MsgCHRegister::clear_verifycode() {
  verifycode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgCHRegister::verifycode() const {
  // @@protoc_insertion_point(field_get:proto3.MsgCHRegister.verifycode)
  return verifycode_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgCHRegister::set_verifycode(const ::std::string& value) {
  
  verifycode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto3.MsgCHRegister.verifycode)
}
inline void MsgCHRegister::set_verifycode(const char* value) {
  
  verifycode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto3.MsgCHRegister.verifycode)
}
inline void MsgCHRegister::set_verifycode(const char* value, size_t size) {
  
  verifycode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto3.MsgCHRegister.verifycode)
}
inline ::std::string* MsgCHRegister::mutable_verifycode() {
  
  // @@protoc_insertion_point(field_mutable:proto3.MsgCHRegister.verifycode)
  return verifycode_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgCHRegister::release_verifycode() {
  // @@protoc_insertion_point(field_release:proto3.MsgCHRegister.verifycode)
  
  return verifycode_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgCHRegister::set_allocated_verifycode(::std::string* verifycode) {
  if (verifycode != NULL) {
    
  } else {
    
  }
  verifycode_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), verifycode);
  // @@protoc_insertion_point(field_set_allocated:proto3.MsgCHRegister.verifycode)
}

// -------------------------------------------------------------------

// MsgHCRegister

// optional .proto3.pb_msg mid = 1;
inline void MsgHCRegister::clear_mid() {
  mid_ = 0;
}
inline ::proto3::pb_msg MsgHCRegister::mid() const {
  // @@protoc_insertion_point(field_get:proto3.MsgHCRegister.mid)
  return static_cast< ::proto3::pb_msg >(mid_);
}
inline void MsgHCRegister::set_mid(::proto3::pb_msg value) {
  
  mid_ = value;
  // @@protoc_insertion_point(field_set:proto3.MsgHCRegister.mid)
}

// optional .proto3.pb_enum result = 2;
inline void MsgHCRegister::clear_result() {
  result_ = 0;
}
inline ::proto3::pb_enum MsgHCRegister::result() const {
  // @@protoc_insertion_point(field_get:proto3.MsgHCRegister.result)
  return static_cast< ::proto3::pb_enum >(result_);
}
inline void MsgHCRegister::set_result(::proto3::pb_enum value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:proto3.MsgHCRegister.result)
}

// -------------------------------------------------------------------

// MsgCHCharge

// optional .proto3.pb_msg mid = 1;
inline void MsgCHCharge::clear_mid() {
  mid_ = 0;
}
inline ::proto3::pb_msg MsgCHCharge::mid() const {
  // @@protoc_insertion_point(field_get:proto3.MsgCHCharge.mid)
  return static_cast< ::proto3::pb_msg >(mid_);
}
inline void MsgCHCharge::set_mid(::proto3::pb_msg value) {
  
  mid_ = value;
  // @@protoc_insertion_point(field_set:proto3.MsgCHCharge.mid)
}

// optional uint64 session = 2;
inline void MsgCHCharge::clear_session() {
  session_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 MsgCHCharge::session() const {
  // @@protoc_insertion_point(field_get:proto3.MsgCHCharge.session)
  return session_;
}
inline void MsgCHCharge::set_session(::google::protobuf::uint64 value) {
  
  session_ = value;
  // @@protoc_insertion_point(field_set:proto3.MsgCHCharge.session)
}

// optional string uid = 3;
inline void MsgCHCharge::clear_uid() {
  uid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgCHCharge::uid() const {
  // @@protoc_insertion_point(field_get:proto3.MsgCHCharge.uid)
  return uid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgCHCharge::set_uid(const ::std::string& value) {
  
  uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto3.MsgCHCharge.uid)
}
inline void MsgCHCharge::set_uid(const char* value) {
  
  uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto3.MsgCHCharge.uid)
}
inline void MsgCHCharge::set_uid(const char* value, size_t size) {
  
  uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto3.MsgCHCharge.uid)
}
inline ::std::string* MsgCHCharge::mutable_uid() {
  
  // @@protoc_insertion_point(field_mutable:proto3.MsgCHCharge.uid)
  return uid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgCHCharge::release_uid() {
  // @@protoc_insertion_point(field_release:proto3.MsgCHCharge.uid)
  
  return uid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgCHCharge::set_allocated_uid(::std::string* uid) {
  if (uid != NULL) {
    
  } else {
    
  }
  uid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uid);
  // @@protoc_insertion_point(field_set_allocated:proto3.MsgCHCharge.uid)
}

// optional int32 amount = 4;
inline void MsgCHCharge::clear_amount() {
  amount_ = 0;
}
inline ::google::protobuf::int32 MsgCHCharge::amount() const {
  // @@protoc_insertion_point(field_get:proto3.MsgCHCharge.amount)
  return amount_;
}
inline void MsgCHCharge::set_amount(::google::protobuf::int32 value) {
  
  amount_ = value;
  // @@protoc_insertion_point(field_set:proto3.MsgCHCharge.amount)
}

// -------------------------------------------------------------------

// MsgHCCharge

// optional .proto3.pb_msg mid = 1;
inline void MsgHCCharge::clear_mid() {
  mid_ = 0;
}
inline ::proto3::pb_msg MsgHCCharge::mid() const {
  // @@protoc_insertion_point(field_get:proto3.MsgHCCharge.mid)
  return static_cast< ::proto3::pb_msg >(mid_);
}
inline void MsgHCCharge::set_mid(::proto3::pb_msg value) {
  
  mid_ = value;
  // @@protoc_insertion_point(field_set:proto3.MsgHCCharge.mid)
}

// optional .proto3.pb_enum result = 5;
inline void MsgHCCharge::clear_result() {
  result_ = 0;
}
inline ::proto3::pb_enum MsgHCCharge::result() const {
  // @@protoc_insertion_point(field_get:proto3.MsgHCCharge.result)
  return static_cast< ::proto3::pb_enum >(result_);
}
inline void MsgHCCharge::set_result(::proto3::pb_enum value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:proto3.MsgHCCharge.result)
}

// -------------------------------------------------------------------

// MsgCHQuery

// optional .proto3.pb_msg mid = 1;
inline void MsgCHQuery::clear_mid() {
  mid_ = 0;
}
inline ::proto3::pb_msg MsgCHQuery::mid() const {
  // @@protoc_insertion_point(field_get:proto3.MsgCHQuery.mid)
  return static_cast< ::proto3::pb_msg >(mid_);
}
inline void MsgCHQuery::set_mid(::proto3::pb_msg value) {
  
  mid_ = value;
  // @@protoc_insertion_point(field_set:proto3.MsgCHQuery.mid)
}

// optional uint64 session = 2;
inline void MsgCHQuery::clear_session() {
  session_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 MsgCHQuery::session() const {
  // @@protoc_insertion_point(field_get:proto3.MsgCHQuery.session)
  return session_;
}
inline void MsgCHQuery::set_session(::google::protobuf::uint64 value) {
  
  session_ = value;
  // @@protoc_insertion_point(field_set:proto3.MsgCHQuery.session)
}

// optional string uid = 3;
inline void MsgCHQuery::clear_uid() {
  uid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgCHQuery::uid() const {
  // @@protoc_insertion_point(field_get:proto3.MsgCHQuery.uid)
  return uid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgCHQuery::set_uid(const ::std::string& value) {
  
  uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto3.MsgCHQuery.uid)
}
inline void MsgCHQuery::set_uid(const char* value) {
  
  uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto3.MsgCHQuery.uid)
}
inline void MsgCHQuery::set_uid(const char* value, size_t size) {
  
  uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto3.MsgCHQuery.uid)
}
inline ::std::string* MsgCHQuery::mutable_uid() {
  
  // @@protoc_insertion_point(field_mutable:proto3.MsgCHQuery.uid)
  return uid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgCHQuery::release_uid() {
  // @@protoc_insertion_point(field_release:proto3.MsgCHQuery.uid)
  
  return uid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgCHQuery::set_allocated_uid(::std::string* uid) {
  if (uid != NULL) {
    
  } else {
    
  }
  uid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uid);
  // @@protoc_insertion_point(field_set_allocated:proto3.MsgCHQuery.uid)
}

// -------------------------------------------------------------------

// MsgHCQuery

// optional .proto3.pb_msg mid = 1;
inline void MsgHCQuery::clear_mid() {
  mid_ = 0;
}
inline ::proto3::pb_msg MsgHCQuery::mid() const {
  // @@protoc_insertion_point(field_get:proto3.MsgHCQuery.mid)
  return static_cast< ::proto3::pb_msg >(mid_);
}
inline void MsgHCQuery::set_mid(::proto3::pb_msg value) {
  
  mid_ = value;
  // @@protoc_insertion_point(field_set:proto3.MsgHCQuery.mid)
}

// repeated .proto3.charge_t log = 2;
inline int MsgHCQuery::log_size() const {
  return log_.size();
}
inline void MsgHCQuery::clear_log() {
  log_.Clear();
}
inline const ::proto3::charge_t& MsgHCQuery::log(int index) const {
  // @@protoc_insertion_point(field_get:proto3.MsgHCQuery.log)
  return log_.Get(index);
}
inline ::proto3::charge_t* MsgHCQuery::mutable_log(int index) {
  // @@protoc_insertion_point(field_mutable:proto3.MsgHCQuery.log)
  return log_.Mutable(index);
}
inline ::proto3::charge_t* MsgHCQuery::add_log() {
  // @@protoc_insertion_point(field_add:proto3.MsgHCQuery.log)
  return log_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto3::charge_t >*
MsgHCQuery::mutable_log() {
  // @@protoc_insertion_point(field_mutable_list:proto3.MsgHCQuery.log)
  return &log_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto3::charge_t >&
MsgHCQuery::log() const {
  // @@protoc_insertion_point(field_list:proto3.MsgHCQuery.log)
  return log_;
}

// optional .proto3.pb_enum result = 3;
inline void MsgHCQuery::clear_result() {
  result_ = 0;
}
inline ::proto3::pb_enum MsgHCQuery::result() const {
  // @@protoc_insertion_point(field_get:proto3.MsgHCQuery.result)
  return static_cast< ::proto3::pb_enum >(result_);
}
inline void MsgHCQuery::set_result(::proto3::pb_enum value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:proto3.MsgHCQuery.result)
}

// -------------------------------------------------------------------

// MsgCNConnect

// optional .proto3.pb_msg mid = 1;
inline void MsgCNConnect::clear_mid() {
  mid_ = 0;
}
inline ::proto3::pb_msg MsgCNConnect::mid() const {
  // @@protoc_insertion_point(field_get:proto3.MsgCNConnect.mid)
  return static_cast< ::proto3::pb_msg >(mid_);
}
inline void MsgCNConnect::set_mid(::proto3::pb_msg value) {
  
  mid_ = value;
  // @@protoc_insertion_point(field_set:proto3.MsgCNConnect.mid)
}

// optional string uid = 2;
inline void MsgCNConnect::clear_uid() {
  uid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgCNConnect::uid() const {
  // @@protoc_insertion_point(field_get:proto3.MsgCNConnect.uid)
  return uid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgCNConnect::set_uid(const ::std::string& value) {
  
  uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto3.MsgCNConnect.uid)
}
inline void MsgCNConnect::set_uid(const char* value) {
  
  uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto3.MsgCNConnect.uid)
}
inline void MsgCNConnect::set_uid(const char* value, size_t size) {
  
  uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto3.MsgCNConnect.uid)
}
inline ::std::string* MsgCNConnect::mutable_uid() {
  
  // @@protoc_insertion_point(field_mutable:proto3.MsgCNConnect.uid)
  return uid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgCNConnect::release_uid() {
  // @@protoc_insertion_point(field_release:proto3.MsgCNConnect.uid)
  
  return uid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgCNConnect::set_allocated_uid(::std::string* uid) {
  if (uid != NULL) {
    
  } else {
    
  }
  uid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uid);
  // @@protoc_insertion_point(field_set_allocated:proto3.MsgCNConnect.uid)
}

// optional uint32 version = 3;
inline void MsgCNConnect::clear_version() {
  version_ = 0u;
}
inline ::google::protobuf::uint32 MsgCNConnect::version() const {
  // @@protoc_insertion_point(field_get:proto3.MsgCNConnect.version)
  return version_;
}
inline void MsgCNConnect::set_version(::google::protobuf::uint32 value) {
  
  version_ = value;
  // @@protoc_insertion_point(field_set:proto3.MsgCNConnect.version)
}

// optional uint64 session = 4;
inline void MsgCNConnect::clear_session() {
  session_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 MsgCNConnect::session() const {
  // @@protoc_insertion_point(field_get:proto3.MsgCNConnect.session)
  return session_;
}
inline void MsgCNConnect::set_session(::google::protobuf::uint64 value) {
  
  session_ = value;
  // @@protoc_insertion_point(field_set:proto3.MsgCNConnect.session)
}

// -------------------------------------------------------------------

// MsgNCConnect

// optional .proto3.pb_msg mid = 1;
inline void MsgNCConnect::clear_mid() {
  mid_ = 0;
}
inline ::proto3::pb_msg MsgNCConnect::mid() const {
  // @@protoc_insertion_point(field_get:proto3.MsgNCConnect.mid)
  return static_cast< ::proto3::pb_msg >(mid_);
}
inline void MsgNCConnect::set_mid(::proto3::pb_msg value) {
  
  mid_ = value;
  // @@protoc_insertion_point(field_set:proto3.MsgNCConnect.mid)
}

// optional .proto3.player_t player = 2;
inline bool MsgNCConnect::has_player() const {
  return !_is_default_instance_ && player_ != NULL;
}
inline void MsgNCConnect::clear_player() {
  if (GetArenaNoVirtual() == NULL && player_ != NULL) delete player_;
  player_ = NULL;
}
inline const ::proto3::player_t& MsgNCConnect::player() const {
  // @@protoc_insertion_point(field_get:proto3.MsgNCConnect.player)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return player_ != NULL ? *player_ : *default_instance().player_;
#else
  return player_ != NULL ? *player_ : *default_instance_->player_;
#endif
}
inline ::proto3::player_t* MsgNCConnect::mutable_player() {
  
  if (player_ == NULL) {
    player_ = new ::proto3::player_t;
  }
  // @@protoc_insertion_point(field_mutable:proto3.MsgNCConnect.player)
  return player_;
}
inline ::proto3::player_t* MsgNCConnect::release_player() {
  // @@protoc_insertion_point(field_release:proto3.MsgNCConnect.player)
  
  ::proto3::player_t* temp = player_;
  player_ = NULL;
  return temp;
}
inline void MsgNCConnect::set_allocated_player(::proto3::player_t* player) {
  delete player_;
  player_ = player;
  if (player) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto3.MsgNCConnect.player)
}

// optional .proto3.pb_enum result = 3;
inline void MsgNCConnect::clear_result() {
  result_ = 0;
}
inline ::proto3::pb_enum MsgNCConnect::result() const {
  // @@protoc_insertion_point(field_get:proto3.MsgNCConnect.result)
  return static_cast< ::proto3::pb_enum >(result_);
}
inline void MsgNCConnect::set_result(::proto3::pb_enum value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:proto3.MsgNCConnect.result)
}

// -------------------------------------------------------------------

// MsgCNCreate

// optional .proto3.pb_msg mid = 1;
inline void MsgCNCreate::clear_mid() {
  mid_ = 0;
}
inline ::proto3::pb_msg MsgCNCreate::mid() const {
  // @@protoc_insertion_point(field_get:proto3.MsgCNCreate.mid)
  return static_cast< ::proto3::pb_msg >(mid_);
}
inline void MsgCNCreate::set_mid(::proto3::pb_msg value) {
  
  mid_ = value;
  // @@protoc_insertion_point(field_set:proto3.MsgCNCreate.mid)
}

// optional .proto3.pb_enum game = 2;
inline void MsgCNCreate::clear_game() {
  game_ = 0;
}
inline ::proto3::pb_enum MsgCNCreate::game() const {
  // @@protoc_insertion_point(field_get:proto3.MsgCNCreate.game)
  return static_cast< ::proto3::pb_enum >(game_);
}
inline void MsgCNCreate::set_game(::proto3::pb_enum value) {
  
  game_ = value;
  // @@protoc_insertion_point(field_set:proto3.MsgCNCreate.game)
}

// repeated .proto3.key_value options = 3;
inline int MsgCNCreate::options_size() const {
  return options_.size();
}
inline void MsgCNCreate::clear_options() {
  options_.Clear();
}
inline const ::proto3::key_value& MsgCNCreate::options(int index) const {
  // @@protoc_insertion_point(field_get:proto3.MsgCNCreate.options)
  return options_.Get(index);
}
inline ::proto3::key_value* MsgCNCreate::mutable_options(int index) {
  // @@protoc_insertion_point(field_mutable:proto3.MsgCNCreate.options)
  return options_.Mutable(index);
}
inline ::proto3::key_value* MsgCNCreate::add_options() {
  // @@protoc_insertion_point(field_add:proto3.MsgCNCreate.options)
  return options_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto3::key_value >*
MsgCNCreate::mutable_options() {
  // @@protoc_insertion_point(field_mutable_list:proto3.MsgCNCreate.options)
  return &options_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto3::key_value >&
MsgCNCreate::options() const {
  // @@protoc_insertion_point(field_list:proto3.MsgCNCreate.options)
  return options_;
}

// -------------------------------------------------------------------

// MsgNCCreate

// optional .proto3.pb_msg mid = 1;
inline void MsgNCCreate::clear_mid() {
  mid_ = 0;
}
inline ::proto3::pb_msg MsgNCCreate::mid() const {
  // @@protoc_insertion_point(field_get:proto3.MsgNCCreate.mid)
  return static_cast< ::proto3::pb_msg >(mid_);
}
inline void MsgNCCreate::set_mid(::proto3::pb_msg value) {
  
  mid_ = value;
  // @@protoc_insertion_point(field_set:proto3.MsgNCCreate.mid)
}

// optional int32 game_id = 2;
inline void MsgNCCreate::clear_game_id() {
  game_id_ = 0;
}
inline ::google::protobuf::int32 MsgNCCreate::game_id() const {
  // @@protoc_insertion_point(field_get:proto3.MsgNCCreate.game_id)
  return game_id_;
}
inline void MsgNCCreate::set_game_id(::google::protobuf::int32 value) {
  
  game_id_ = value;
  // @@protoc_insertion_point(field_set:proto3.MsgNCCreate.game_id)
}

// optional .proto3.pb_enum result = 3;
inline void MsgNCCreate::clear_result() {
  result_ = 0;
}
inline ::proto3::pb_enum MsgNCCreate::result() const {
  // @@protoc_insertion_point(field_get:proto3.MsgNCCreate.result)
  return static_cast< ::proto3::pb_enum >(result_);
}
inline void MsgNCCreate::set_result(::proto3::pb_enum value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:proto3.MsgNCCreate.result)
}

// -------------------------------------------------------------------

// MsgCNJoin

// optional .proto3.pb_msg mid = 1;
inline void MsgCNJoin::clear_mid() {
  mid_ = 0;
}
inline ::proto3::pb_msg MsgCNJoin::mid() const {
  // @@protoc_insertion_point(field_get:proto3.MsgCNJoin.mid)
  return static_cast< ::proto3::pb_msg >(mid_);
}
inline void MsgCNJoin::set_mid(::proto3::pb_msg value) {
  
  mid_ = value;
  // @@protoc_insertion_point(field_set:proto3.MsgCNJoin.mid)
}

// optional int32 game_id = 2;
inline void MsgCNJoin::clear_game_id() {
  game_id_ = 0;
}
inline ::google::protobuf::int32 MsgCNJoin::game_id() const {
  // @@protoc_insertion_point(field_get:proto3.MsgCNJoin.game_id)
  return game_id_;
}
inline void MsgCNJoin::set_game_id(::google::protobuf::int32 value) {
  
  game_id_ = value;
  // @@protoc_insertion_point(field_set:proto3.MsgCNJoin.game_id)
}

// -------------------------------------------------------------------

// MsgNCJoin

// optional .proto3.pb_msg mid = 1;
inline void MsgNCJoin::clear_mid() {
  mid_ = 0;
}
inline ::proto3::pb_msg MsgNCJoin::mid() const {
  // @@protoc_insertion_point(field_get:proto3.MsgNCJoin.mid)
  return static_cast< ::proto3::pb_msg >(mid_);
}
inline void MsgNCJoin::set_mid(::proto3::pb_msg value) {
  
  mid_ = value;
  // @@protoc_insertion_point(field_set:proto3.MsgNCJoin.mid)
}

// optional .proto3.pb_enum game = 2;
inline void MsgNCJoin::clear_game() {
  game_ = 0;
}
inline ::proto3::pb_enum MsgNCJoin::game() const {
  // @@protoc_insertion_point(field_get:proto3.MsgNCJoin.game)
  return static_cast< ::proto3::pb_enum >(game_);
}
inline void MsgNCJoin::set_game(::proto3::pb_enum value) {
  
  game_ = value;
  // @@protoc_insertion_point(field_set:proto3.MsgNCJoin.game)
}

// optional .proto3.pb_enum category = 3;
inline void MsgNCJoin::clear_category() {
  category_ = 0;
}
inline ::proto3::pb_enum MsgNCJoin::category() const {
  // @@protoc_insertion_point(field_get:proto3.MsgNCJoin.category)
  return static_cast< ::proto3::pb_enum >(category_);
}
inline void MsgNCJoin::set_category(::proto3::pb_enum value) {
  
  category_ = value;
  // @@protoc_insertion_point(field_set:proto3.MsgNCJoin.category)
}

// repeated .proto3.player_t players = 4;
inline int MsgNCJoin::players_size() const {
  return players_.size();
}
inline void MsgNCJoin::clear_players() {
  players_.Clear();
}
inline const ::proto3::player_t& MsgNCJoin::players(int index) const {
  // @@protoc_insertion_point(field_get:proto3.MsgNCJoin.players)
  return players_.Get(index);
}
inline ::proto3::player_t* MsgNCJoin::mutable_players(int index) {
  // @@protoc_insertion_point(field_mutable:proto3.MsgNCJoin.players)
  return players_.Mutable(index);
}
inline ::proto3::player_t* MsgNCJoin::add_players() {
  // @@protoc_insertion_point(field_add:proto3.MsgNCJoin.players)
  return players_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto3::player_t >*
MsgNCJoin::mutable_players() {
  // @@protoc_insertion_point(field_mutable_list:proto3.MsgNCJoin.players)
  return &players_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto3::player_t >&
MsgNCJoin::players() const {
  // @@protoc_insertion_point(field_list:proto3.MsgNCJoin.players)
  return players_;
}

// optional .proto3.pb_enum result = 5;
inline void MsgNCJoin::clear_result() {
  result_ = 0;
}
inline ::proto3::pb_enum MsgNCJoin::result() const {
  // @@protoc_insertion_point(field_get:proto3.MsgNCJoin.result)
  return static_cast< ::proto3::pb_enum >(result_);
}
inline void MsgNCJoin::set_result(::proto3::pb_enum value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:proto3.MsgNCJoin.result)
}

// -------------------------------------------------------------------

// MsgCNReady

// optional .proto3.pb_msg mid = 1;
inline void MsgCNReady::clear_mid() {
  mid_ = 0;
}
inline ::proto3::pb_msg MsgCNReady::mid() const {
  // @@protoc_insertion_point(field_get:proto3.MsgCNReady.mid)
  return static_cast< ::proto3::pb_msg >(mid_);
}
inline void MsgCNReady::set_mid(::proto3::pb_msg value) {
  
  mid_ = value;
  // @@protoc_insertion_point(field_set:proto3.MsgCNReady.mid)
}

// -------------------------------------------------------------------

// MsgNCReady

// optional .proto3.pb_msg mid = 1;
inline void MsgNCReady::clear_mid() {
  mid_ = 0;
}
inline ::proto3::pb_msg MsgNCReady::mid() const {
  // @@protoc_insertion_point(field_get:proto3.MsgNCReady.mid)
  return static_cast< ::proto3::pb_msg >(mid_);
}
inline void MsgNCReady::set_mid(::proto3::pb_msg value) {
  
  mid_ = value;
  // @@protoc_insertion_point(field_set:proto3.MsgNCReady.mid)
}

// optional int32 pos = 2;
inline void MsgNCReady::clear_pos() {
  pos_ = 0;
}
inline ::google::protobuf::int32 MsgNCReady::pos() const {
  // @@protoc_insertion_point(field_get:proto3.MsgNCReady.pos)
  return pos_;
}
inline void MsgNCReady::set_pos(::google::protobuf::int32 value) {
  
  pos_ = value;
  // @@protoc_insertion_point(field_set:proto3.MsgNCReady.pos)
}

// optional .proto3.pb_enum result = 3;
inline void MsgNCReady::clear_result() {
  result_ = 0;
}
inline ::proto3::pb_enum MsgNCReady::result() const {
  // @@protoc_insertion_point(field_get:proto3.MsgNCReady.result)
  return static_cast< ::proto3::pb_enum >(result_);
}
inline void MsgNCReady::set_result(::proto3::pb_enum value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:proto3.MsgNCReady.result)
}

// -------------------------------------------------------------------

// MsgCNRevive

// optional .proto3.pb_msg mid = 1;
inline void MsgCNRevive::clear_mid() {
  mid_ = 0;
}
inline ::proto3::pb_msg MsgCNRevive::mid() const {
  // @@protoc_insertion_point(field_get:proto3.MsgCNRevive.mid)
  return static_cast< ::proto3::pb_msg >(mid_);
}
inline void MsgCNRevive::set_mid(::proto3::pb_msg value) {
  
  mid_ = value;
  // @@protoc_insertion_point(field_set:proto3.MsgCNRevive.mid)
}

// optional int32 game = 2;
inline void MsgCNRevive::clear_game() {
  game_ = 0;
}
inline ::google::protobuf::int32 MsgCNRevive::game() const {
  // @@protoc_insertion_point(field_get:proto3.MsgCNRevive.game)
  return game_;
}
inline void MsgCNRevive::set_game(::google::protobuf::int32 value) {
  
  game_ = value;
  // @@protoc_insertion_point(field_set:proto3.MsgCNRevive.game)
}

// optional uint64 session = 3;
inline void MsgCNRevive::clear_session() {
  session_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 MsgCNRevive::session() const {
  // @@protoc_insertion_point(field_get:proto3.MsgCNRevive.session)
  return session_;
}
inline void MsgCNRevive::set_session(::google::protobuf::uint64 value) {
  
  session_ = value;
  // @@protoc_insertion_point(field_set:proto3.MsgCNRevive.session)
}

// -------------------------------------------------------------------

// MsgNCRevive

// optional .proto3.pb_msg mid = 1;
inline void MsgNCRevive::clear_mid() {
  mid_ = 0;
}
inline ::proto3::pb_msg MsgNCRevive::mid() const {
  // @@protoc_insertion_point(field_get:proto3.MsgNCRevive.mid)
  return static_cast< ::proto3::pb_msg >(mid_);
}
inline void MsgNCRevive::set_mid(::proto3::pb_msg value) {
  
  mid_ = value;
  // @@protoc_insertion_point(field_set:proto3.MsgNCRevive.mid)
}

// optional .proto3.MsgNCDeal deal = 2;
inline bool MsgNCRevive::has_deal() const {
  return !_is_default_instance_ && deal_ != NULL;
}
inline void MsgNCRevive::clear_deal() {
  if (GetArenaNoVirtual() == NULL && deal_ != NULL) delete deal_;
  deal_ = NULL;
}
inline const ::proto3::MsgNCDeal& MsgNCRevive::deal() const {
  // @@protoc_insertion_point(field_get:proto3.MsgNCRevive.deal)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return deal_ != NULL ? *deal_ : *default_instance().deal_;
#else
  return deal_ != NULL ? *deal_ : *default_instance_->deal_;
#endif
}
inline ::proto3::MsgNCDeal* MsgNCRevive::mutable_deal() {
  
  if (deal_ == NULL) {
    deal_ = new ::proto3::MsgNCDeal;
  }
  // @@protoc_insertion_point(field_mutable:proto3.MsgNCRevive.deal)
  return deal_;
}
inline ::proto3::MsgNCDeal* MsgNCRevive::release_deal() {
  // @@protoc_insertion_point(field_release:proto3.MsgNCRevive.deal)
  
  ::proto3::MsgNCDeal* temp = deal_;
  deal_ = NULL;
  return temp;
}
inline void MsgNCRevive::set_allocated_deal(::proto3::MsgNCDeal* deal) {
  delete deal_;
  deal_ = deal;
  if (deal) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto3.MsgNCRevive.deal)
}

// repeated .proto3.play_t play = 3;
inline int MsgNCRevive::play_size() const {
  return play_.size();
}
inline void MsgNCRevive::clear_play() {
  play_.Clear();
}
inline const ::proto3::play_t& MsgNCRevive::play(int index) const {
  // @@protoc_insertion_point(field_get:proto3.MsgNCRevive.play)
  return play_.Get(index);
}
inline ::proto3::play_t* MsgNCRevive::mutable_play(int index) {
  // @@protoc_insertion_point(field_mutable:proto3.MsgNCRevive.play)
  return play_.Mutable(index);
}
inline ::proto3::play_t* MsgNCRevive::add_play() {
  // @@protoc_insertion_point(field_add:proto3.MsgNCRevive.play)
  return play_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto3::play_t >*
MsgNCRevive::mutable_play() {
  // @@protoc_insertion_point(field_mutable_list:proto3.MsgNCRevive.play)
  return &play_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto3::play_t >&
MsgNCRevive::play() const {
  // @@protoc_insertion_point(field_list:proto3.MsgNCRevive.play)
  return play_;
}

// optional .proto3.pb_enum result = 4;
inline void MsgNCRevive::clear_result() {
  result_ = 0;
}
inline ::proto3::pb_enum MsgNCRevive::result() const {
  // @@protoc_insertion_point(field_get:proto3.MsgNCRevive.result)
  return static_cast< ::proto3::pb_enum >(result_);
}
inline void MsgNCRevive::set_result(::proto3::pb_enum value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:proto3.MsgNCRevive.result)
}

// -------------------------------------------------------------------

// MsgNCDeal

// optional .proto3.pb_msg mid = 1;
inline void MsgNCDeal::clear_mid() {
  mid_ = 0;
}
inline ::proto3::pb_msg MsgNCDeal::mid() const {
  // @@protoc_insertion_point(field_get:proto3.MsgNCDeal.mid)
  return static_cast< ::proto3::pb_msg >(mid_);
}
inline void MsgNCDeal::set_mid(::proto3::pb_msg value) {
  
  mid_ = value;
  // @@protoc_insertion_point(field_set:proto3.MsgNCDeal.mid)
}

// optional int32 banker = 2;
inline void MsgNCDeal::clear_banker() {
  banker_ = 0;
}
inline ::google::protobuf::int32 MsgNCDeal::banker() const {
  // @@protoc_insertion_point(field_get:proto3.MsgNCDeal.banker)
  return banker_;
}
inline void MsgNCDeal::set_banker(::google::protobuf::int32 value) {
  
  banker_ = value;
  // @@protoc_insertion_point(field_set:proto3.MsgNCDeal.banker)
}

// optional int32 pos = 3;
inline void MsgNCDeal::clear_pos() {
  pos_ = 0;
}
inline ::google::protobuf::int32 MsgNCDeal::pos() const {
  // @@protoc_insertion_point(field_get:proto3.MsgNCDeal.pos)
  return pos_;
}
inline void MsgNCDeal::set_pos(::google::protobuf::int32 value) {
  
  pos_ = value;
  // @@protoc_insertion_point(field_set:proto3.MsgNCDeal.pos)
}

// optional int32 ante = 4;
inline void MsgNCDeal::clear_ante() {
  ante_ = 0;
}
inline ::google::protobuf::int32 MsgNCDeal::ante() const {
  // @@protoc_insertion_point(field_get:proto3.MsgNCDeal.ante)
  return ante_;
}
inline void MsgNCDeal::set_ante(::google::protobuf::int32 value) {
  
  ante_ = value;
  // @@protoc_insertion_point(field_set:proto3.MsgNCDeal.ante)
}

// optional int32 multiple = 5;
inline void MsgNCDeal::clear_multiple() {
  multiple_ = 0;
}
inline ::google::protobuf::int32 MsgNCDeal::multiple() const {
  // @@protoc_insertion_point(field_get:proto3.MsgNCDeal.multiple)
  return multiple_;
}
inline void MsgNCDeal::set_multiple(::google::protobuf::int32 value) {
  
  multiple_ = value;
  // @@protoc_insertion_point(field_set:proto3.MsgNCDeal.multiple)
}

// repeated int32 hands = 6;
inline int MsgNCDeal::hands_size() const {
  return hands_.size();
}
inline void MsgNCDeal::clear_hands() {
  hands_.Clear();
}
inline ::google::protobuf::int32 MsgNCDeal::hands(int index) const {
  // @@protoc_insertion_point(field_get:proto3.MsgNCDeal.hands)
  return hands_.Get(index);
}
inline void MsgNCDeal::set_hands(int index, ::google::protobuf::int32 value) {
  hands_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto3.MsgNCDeal.hands)
}
inline void MsgNCDeal::add_hands(::google::protobuf::int32 value) {
  hands_.Add(value);
  // @@protoc_insertion_point(field_add:proto3.MsgNCDeal.hands)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
MsgNCDeal::hands() const {
  // @@protoc_insertion_point(field_list:proto3.MsgNCDeal.hands)
  return hands_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
MsgNCDeal::mutable_hands() {
  // @@protoc_insertion_point(field_mutable_list:proto3.MsgNCDeal.hands)
  return &hands_;
}

// repeated int32 bottom = 7;
inline int MsgNCDeal::bottom_size() const {
  return bottom_.size();
}
inline void MsgNCDeal::clear_bottom() {
  bottom_.Clear();
}
inline ::google::protobuf::int32 MsgNCDeal::bottom(int index) const {
  // @@protoc_insertion_point(field_get:proto3.MsgNCDeal.bottom)
  return bottom_.Get(index);
}
inline void MsgNCDeal::set_bottom(int index, ::google::protobuf::int32 value) {
  bottom_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto3.MsgNCDeal.bottom)
}
inline void MsgNCDeal::add_bottom(::google::protobuf::int32 value) {
  bottom_.Add(value);
  // @@protoc_insertion_point(field_add:proto3.MsgNCDeal.bottom)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
MsgNCDeal::bottom() const {
  // @@protoc_insertion_point(field_list:proto3.MsgNCDeal.bottom)
  return bottom_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
MsgNCDeal::mutable_bottom() {
  // @@protoc_insertion_point(field_mutable_list:proto3.MsgNCDeal.bottom)
  return &bottom_;
}

// repeated int32 count = 8;
inline int MsgNCDeal::count_size() const {
  return count_.size();
}
inline void MsgNCDeal::clear_count() {
  count_.Clear();
}
inline ::google::protobuf::int32 MsgNCDeal::count(int index) const {
  // @@protoc_insertion_point(field_get:proto3.MsgNCDeal.count)
  return count_.Get(index);
}
inline void MsgNCDeal::set_count(int index, ::google::protobuf::int32 value) {
  count_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto3.MsgNCDeal.count)
}
inline void MsgNCDeal::add_count(::google::protobuf::int32 value) {
  count_.Add(value);
  // @@protoc_insertion_point(field_add:proto3.MsgNCDeal.count)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
MsgNCDeal::count() const {
  // @@protoc_insertion_point(field_list:proto3.MsgNCDeal.count)
  return count_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
MsgNCDeal::mutable_count() {
  // @@protoc_insertion_point(field_mutable_list:proto3.MsgNCDeal.count)
  return &count_;
}

// optional int32 piles = 9;
inline void MsgNCDeal::clear_piles() {
  piles_ = 0;
}
inline ::google::protobuf::int32 MsgNCDeal::piles() const {
  // @@protoc_insertion_point(field_get:proto3.MsgNCDeal.piles)
  return piles_;
}
inline void MsgNCDeal::set_piles(::google::protobuf::int32 value) {
  
  piles_ = value;
  // @@protoc_insertion_point(field_set:proto3.MsgNCDeal.piles)
}

// optional .proto3.pb_enum result = 10;
inline void MsgNCDeal::clear_result() {
  result_ = 0;
}
inline ::proto3::pb_enum MsgNCDeal::result() const {
  // @@protoc_insertion_point(field_get:proto3.MsgNCDeal.result)
  return static_cast< ::proto3::pb_enum >(result_);
}
inline void MsgNCDeal::set_result(::proto3::pb_enum value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:proto3.MsgNCDeal.result)
}

// -------------------------------------------------------------------

// MsgCNEngage

// optional .proto3.pb_msg mid = 1;
inline void MsgCNEngage::clear_mid() {
  mid_ = 0;
}
inline ::proto3::pb_msg MsgCNEngage::mid() const {
  // @@protoc_insertion_point(field_get:proto3.MsgCNEngage.mid)
  return static_cast< ::proto3::pb_msg >(mid_);
}
inline void MsgCNEngage::set_mid(::proto3::pb_msg value) {
  
  mid_ = value;
  // @@protoc_insertion_point(field_set:proto3.MsgCNEngage.mid)
}

// optional int32 key = 2;
inline void MsgCNEngage::clear_key() {
  key_ = 0;
}
inline ::google::protobuf::int32 MsgCNEngage::key() const {
  // @@protoc_insertion_point(field_get:proto3.MsgCNEngage.key)
  return key_;
}
inline void MsgCNEngage::set_key(::google::protobuf::int32 value) {
  
  key_ = value;
  // @@protoc_insertion_point(field_set:proto3.MsgCNEngage.key)
}

// -------------------------------------------------------------------

// MsgNCEngage

// optional .proto3.pb_msg mid = 1;
inline void MsgNCEngage::clear_mid() {
  mid_ = 0;
}
inline ::proto3::pb_msg MsgNCEngage::mid() const {
  // @@protoc_insertion_point(field_get:proto3.MsgNCEngage.mid)
  return static_cast< ::proto3::pb_msg >(mid_);
}
inline void MsgNCEngage::set_mid(::proto3::pb_msg value) {
  
  mid_ = value;
  // @@protoc_insertion_point(field_set:proto3.MsgNCEngage.mid)
}

// repeated int32 keys = 2;
inline int MsgNCEngage::keys_size() const {
  return keys_.size();
}
inline void MsgNCEngage::clear_keys() {
  keys_.Clear();
}
inline ::google::protobuf::int32 MsgNCEngage::keys(int index) const {
  // @@protoc_insertion_point(field_get:proto3.MsgNCEngage.keys)
  return keys_.Get(index);
}
inline void MsgNCEngage::set_keys(int index, ::google::protobuf::int32 value) {
  keys_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto3.MsgNCEngage.keys)
}
inline void MsgNCEngage::add_keys(::google::protobuf::int32 value) {
  keys_.Add(value);
  // @@protoc_insertion_point(field_add:proto3.MsgNCEngage.keys)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
MsgNCEngage::keys() const {
  // @@protoc_insertion_point(field_list:proto3.MsgNCEngage.keys)
  return keys_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
MsgNCEngage::mutable_keys() {
  // @@protoc_insertion_point(field_mutable_list:proto3.MsgNCEngage.keys)
  return &keys_;
}

// repeated .proto3.bunch_t bunch = 3;
inline int MsgNCEngage::bunch_size() const {
  return bunch_.size();
}
inline void MsgNCEngage::clear_bunch() {
  bunch_.Clear();
}
inline const ::proto3::bunch_t& MsgNCEngage::bunch(int index) const {
  // @@protoc_insertion_point(field_get:proto3.MsgNCEngage.bunch)
  return bunch_.Get(index);
}
inline ::proto3::bunch_t* MsgNCEngage::mutable_bunch(int index) {
  // @@protoc_insertion_point(field_mutable:proto3.MsgNCEngage.bunch)
  return bunch_.Mutable(index);
}
inline ::proto3::bunch_t* MsgNCEngage::add_bunch() {
  // @@protoc_insertion_point(field_add:proto3.MsgNCEngage.bunch)
  return bunch_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto3::bunch_t >*
MsgNCEngage::mutable_bunch() {
  // @@protoc_insertion_point(field_mutable_list:proto3.MsgNCEngage.bunch)
  return &bunch_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto3::bunch_t >&
MsgNCEngage::bunch() const {
  // @@protoc_insertion_point(field_list:proto3.MsgNCEngage.bunch)
  return bunch_;
}

// optional .proto3.pb_enum result = 6;
inline void MsgNCEngage::clear_result() {
  result_ = 0;
}
inline ::proto3::pb_enum MsgNCEngage::result() const {
  // @@protoc_insertion_point(field_get:proto3.MsgNCEngage.result)
  return static_cast< ::proto3::pb_enum >(result_);
}
inline void MsgNCEngage::set_result(::proto3::pb_enum value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:proto3.MsgNCEngage.result)
}

// -------------------------------------------------------------------

// MsgCNDiscard

// optional .proto3.pb_msg mid = 1;
inline void MsgCNDiscard::clear_mid() {
  mid_ = 0;
}
inline ::proto3::pb_msg MsgCNDiscard::mid() const {
  // @@protoc_insertion_point(field_get:proto3.MsgCNDiscard.mid)
  return static_cast< ::proto3::pb_msg >(mid_);
}
inline void MsgCNDiscard::set_mid(::proto3::pb_msg value) {
  
  mid_ = value;
  // @@protoc_insertion_point(field_set:proto3.MsgCNDiscard.mid)
}

// optional .proto3.bunch_t bunch = 2;
inline bool MsgCNDiscard::has_bunch() const {
  return !_is_default_instance_ && bunch_ != NULL;
}
inline void MsgCNDiscard::clear_bunch() {
  if (GetArenaNoVirtual() == NULL && bunch_ != NULL) delete bunch_;
  bunch_ = NULL;
}
inline const ::proto3::bunch_t& MsgCNDiscard::bunch() const {
  // @@protoc_insertion_point(field_get:proto3.MsgCNDiscard.bunch)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return bunch_ != NULL ? *bunch_ : *default_instance().bunch_;
#else
  return bunch_ != NULL ? *bunch_ : *default_instance_->bunch_;
#endif
}
inline ::proto3::bunch_t* MsgCNDiscard::mutable_bunch() {
  
  if (bunch_ == NULL) {
    bunch_ = new ::proto3::bunch_t;
  }
  // @@protoc_insertion_point(field_mutable:proto3.MsgCNDiscard.bunch)
  return bunch_;
}
inline ::proto3::bunch_t* MsgCNDiscard::release_bunch() {
  // @@protoc_insertion_point(field_release:proto3.MsgCNDiscard.bunch)
  
  ::proto3::bunch_t* temp = bunch_;
  bunch_ = NULL;
  return temp;
}
inline void MsgCNDiscard::set_allocated_bunch(::proto3::bunch_t* bunch) {
  delete bunch_;
  bunch_ = bunch;
  if (bunch) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto3.MsgCNDiscard.bunch)
}

// -------------------------------------------------------------------

// MsgNCDiscard

// optional .proto3.pb_msg mid = 1;
inline void MsgNCDiscard::clear_mid() {
  mid_ = 0;
}
inline ::proto3::pb_msg MsgNCDiscard::mid() const {
  // @@protoc_insertion_point(field_get:proto3.MsgNCDiscard.mid)
  return static_cast< ::proto3::pb_msg >(mid_);
}
inline void MsgNCDiscard::set_mid(::proto3::pb_msg value) {
  
  mid_ = value;
  // @@protoc_insertion_point(field_set:proto3.MsgNCDiscard.mid)
}

// optional .proto3.bunch_t bunch = 2;
inline bool MsgNCDiscard::has_bunch() const {
  return !_is_default_instance_ && bunch_ != NULL;
}
inline void MsgNCDiscard::clear_bunch() {
  if (GetArenaNoVirtual() == NULL && bunch_ != NULL) delete bunch_;
  bunch_ = NULL;
}
inline const ::proto3::bunch_t& MsgNCDiscard::bunch() const {
  // @@protoc_insertion_point(field_get:proto3.MsgNCDiscard.bunch)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return bunch_ != NULL ? *bunch_ : *default_instance().bunch_;
#else
  return bunch_ != NULL ? *bunch_ : *default_instance_->bunch_;
#endif
}
inline ::proto3::bunch_t* MsgNCDiscard::mutable_bunch() {
  
  if (bunch_ == NULL) {
    bunch_ = new ::proto3::bunch_t;
  }
  // @@protoc_insertion_point(field_mutable:proto3.MsgNCDiscard.bunch)
  return bunch_;
}
inline ::proto3::bunch_t* MsgNCDiscard::release_bunch() {
  // @@protoc_insertion_point(field_release:proto3.MsgNCDiscard.bunch)
  
  ::proto3::bunch_t* temp = bunch_;
  bunch_ = NULL;
  return temp;
}
inline void MsgNCDiscard::set_allocated_bunch(::proto3::bunch_t* bunch) {
  delete bunch_;
  bunch_ = bunch;
  if (bunch) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto3.MsgNCDiscard.bunch)
}

// optional .proto3.pb_enum result = 3;
inline void MsgNCDiscard::clear_result() {
  result_ = 0;
}
inline ::proto3::pb_enum MsgNCDiscard::result() const {
  // @@protoc_insertion_point(field_get:proto3.MsgNCDiscard.result)
  return static_cast< ::proto3::pb_enum >(result_);
}
inline void MsgNCDiscard::set_result(::proto3::pb_enum value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:proto3.MsgNCDiscard.result)
}

// -------------------------------------------------------------------

// MsgCNMeld

// optional .proto3.pb_msg mid = 1;
inline void MsgCNMeld::clear_mid() {
  mid_ = 0;
}
inline ::proto3::pb_msg MsgCNMeld::mid() const {
  // @@protoc_insertion_point(field_get:proto3.MsgCNMeld.mid)
  return static_cast< ::proto3::pb_msg >(mid_);
}
inline void MsgCNMeld::set_mid(::proto3::pb_msg value) {
  
  mid_ = value;
  // @@protoc_insertion_point(field_set:proto3.MsgCNMeld.mid)
}

// optional .proto3.bunch_t bunch = 2;
inline bool MsgCNMeld::has_bunch() const {
  return !_is_default_instance_ && bunch_ != NULL;
}
inline void MsgCNMeld::clear_bunch() {
  if (GetArenaNoVirtual() == NULL && bunch_ != NULL) delete bunch_;
  bunch_ = NULL;
}
inline const ::proto3::bunch_t& MsgCNMeld::bunch() const {
  // @@protoc_insertion_point(field_get:proto3.MsgCNMeld.bunch)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return bunch_ != NULL ? *bunch_ : *default_instance().bunch_;
#else
  return bunch_ != NULL ? *bunch_ : *default_instance_->bunch_;
#endif
}
inline ::proto3::bunch_t* MsgCNMeld::mutable_bunch() {
  
  if (bunch_ == NULL) {
    bunch_ = new ::proto3::bunch_t;
  }
  // @@protoc_insertion_point(field_mutable:proto3.MsgCNMeld.bunch)
  return bunch_;
}
inline ::proto3::bunch_t* MsgCNMeld::release_bunch() {
  // @@protoc_insertion_point(field_release:proto3.MsgCNMeld.bunch)
  
  ::proto3::bunch_t* temp = bunch_;
  bunch_ = NULL;
  return temp;
}
inline void MsgCNMeld::set_allocated_bunch(::proto3::bunch_t* bunch) {
  delete bunch_;
  bunch_ = bunch;
  if (bunch) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto3.MsgCNMeld.bunch)
}

// repeated .proto3.bunch_t extra = 3;
inline int MsgCNMeld::extra_size() const {
  return extra_.size();
}
inline void MsgCNMeld::clear_extra() {
  extra_.Clear();
}
inline const ::proto3::bunch_t& MsgCNMeld::extra(int index) const {
  // @@protoc_insertion_point(field_get:proto3.MsgCNMeld.extra)
  return extra_.Get(index);
}
inline ::proto3::bunch_t* MsgCNMeld::mutable_extra(int index) {
  // @@protoc_insertion_point(field_mutable:proto3.MsgCNMeld.extra)
  return extra_.Mutable(index);
}
inline ::proto3::bunch_t* MsgCNMeld::add_extra() {
  // @@protoc_insertion_point(field_add:proto3.MsgCNMeld.extra)
  return extra_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto3::bunch_t >*
MsgCNMeld::mutable_extra() {
  // @@protoc_insertion_point(field_mutable_list:proto3.MsgCNMeld.extra)
  return &extra_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto3::bunch_t >&
MsgCNMeld::extra() const {
  // @@protoc_insertion_point(field_list:proto3.MsgCNMeld.extra)
  return extra_;
}

// -------------------------------------------------------------------

// MsgNCMeld

// optional .proto3.pb_msg mid = 1;
inline void MsgNCMeld::clear_mid() {
  mid_ = 0;
}
inline ::proto3::pb_msg MsgNCMeld::mid() const {
  // @@protoc_insertion_point(field_get:proto3.MsgNCMeld.mid)
  return static_cast< ::proto3::pb_msg >(mid_);
}
inline void MsgNCMeld::set_mid(::proto3::pb_msg value) {
  
  mid_ = value;
  // @@protoc_insertion_point(field_set:proto3.MsgNCMeld.mid)
}

// optional .proto3.bunch_t bunch = 2;
inline bool MsgNCMeld::has_bunch() const {
  return !_is_default_instance_ && bunch_ != NULL;
}
inline void MsgNCMeld::clear_bunch() {
  if (GetArenaNoVirtual() == NULL && bunch_ != NULL) delete bunch_;
  bunch_ = NULL;
}
inline const ::proto3::bunch_t& MsgNCMeld::bunch() const {
  // @@protoc_insertion_point(field_get:proto3.MsgNCMeld.bunch)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return bunch_ != NULL ? *bunch_ : *default_instance().bunch_;
#else
  return bunch_ != NULL ? *bunch_ : *default_instance_->bunch_;
#endif
}
inline ::proto3::bunch_t* MsgNCMeld::mutable_bunch() {
  
  if (bunch_ == NULL) {
    bunch_ = new ::proto3::bunch_t;
  }
  // @@protoc_insertion_point(field_mutable:proto3.MsgNCMeld.bunch)
  return bunch_;
}
inline ::proto3::bunch_t* MsgNCMeld::release_bunch() {
  // @@protoc_insertion_point(field_release:proto3.MsgNCMeld.bunch)
  
  ::proto3::bunch_t* temp = bunch_;
  bunch_ = NULL;
  return temp;
}
inline void MsgNCMeld::set_allocated_bunch(::proto3::bunch_t* bunch) {
  delete bunch_;
  bunch_ = bunch;
  if (bunch) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto3.MsgNCMeld.bunch)
}

// optional int32 from = 3;
inline void MsgNCMeld::clear_from() {
  from_ = 0;
}
inline ::google::protobuf::int32 MsgNCMeld::from() const {
  // @@protoc_insertion_point(field_get:proto3.MsgNCMeld.from)
  return from_;
}
inline void MsgNCMeld::set_from(::google::protobuf::int32 value) {
  
  from_ = value;
  // @@protoc_insertion_point(field_set:proto3.MsgNCMeld.from)
}

// optional .proto3.pb_enum result = 4;
inline void MsgNCMeld::clear_result() {
  result_ = 0;
}
inline ::proto3::pb_enum MsgNCMeld::result() const {
  // @@protoc_insertion_point(field_get:proto3.MsgNCMeld.result)
  return static_cast< ::proto3::pb_enum >(result_);
}
inline void MsgNCMeld::set_result(::proto3::pb_enum value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:proto3.MsgNCMeld.result)
}

// -------------------------------------------------------------------

// MsgNCDraw

// optional .proto3.pb_msg mid = 1;
inline void MsgNCDraw::clear_mid() {
  mid_ = 0;
}
inline ::proto3::pb_msg MsgNCDraw::mid() const {
  // @@protoc_insertion_point(field_get:proto3.MsgNCDraw.mid)
  return static_cast< ::proto3::pb_msg >(mid_);
}
inline void MsgNCDraw::set_mid(::proto3::pb_msg value) {
  
  mid_ = value;
  // @@protoc_insertion_point(field_set:proto3.MsgNCDraw.mid)
}

// optional int32 pos = 2;
inline void MsgNCDraw::clear_pos() {
  pos_ = 0;
}
inline ::google::protobuf::int32 MsgNCDraw::pos() const {
  // @@protoc_insertion_point(field_get:proto3.MsgNCDraw.pos)
  return pos_;
}
inline void MsgNCDraw::set_pos(::google::protobuf::int32 value) {
  
  pos_ = value;
  // @@protoc_insertion_point(field_set:proto3.MsgNCDraw.pos)
}

// optional int32 card = 3;
inline void MsgNCDraw::clear_card() {
  card_ = 0;
}
inline ::google::protobuf::int32 MsgNCDraw::card() const {
  // @@protoc_insertion_point(field_get:proto3.MsgNCDraw.card)
  return card_;
}
inline void MsgNCDraw::set_card(::google::protobuf::int32 value) {
  
  card_ = value;
  // @@protoc_insertion_point(field_set:proto3.MsgNCDraw.card)
}

// -------------------------------------------------------------------

// MsgCNDismissSync

// optional .proto3.pb_msg mid = 1;
inline void MsgCNDismissSync::clear_mid() {
  mid_ = 0;
}
inline ::proto3::pb_msg MsgCNDismissSync::mid() const {
  // @@protoc_insertion_point(field_get:proto3.MsgCNDismissSync.mid)
  return static_cast< ::proto3::pb_msg >(mid_);
}
inline void MsgCNDismissSync::set_mid(::proto3::pb_msg value) {
  
  mid_ = value;
  // @@protoc_insertion_point(field_set:proto3.MsgCNDismissSync.mid)
}

// -------------------------------------------------------------------

// MsgNCDismissSync

// optional .proto3.pb_msg mid = 1;
inline void MsgNCDismissSync::clear_mid() {
  mid_ = 0;
}
inline ::proto3::pb_msg MsgNCDismissSync::mid() const {
  // @@protoc_insertion_point(field_get:proto3.MsgNCDismissSync.mid)
  return static_cast< ::proto3::pb_msg >(mid_);
}
inline void MsgNCDismissSync::set_mid(::proto3::pb_msg value) {
  
  mid_ = value;
  // @@protoc_insertion_point(field_set:proto3.MsgNCDismissSync.mid)
}

// optional int32 pos = 2;
inline void MsgNCDismissSync::clear_pos() {
  pos_ = 0;
}
inline ::google::protobuf::int32 MsgNCDismissSync::pos() const {
  // @@protoc_insertion_point(field_get:proto3.MsgNCDismissSync.pos)
  return pos_;
}
inline void MsgNCDismissSync::set_pos(::google::protobuf::int32 value) {
  
  pos_ = value;
  // @@protoc_insertion_point(field_set:proto3.MsgNCDismissSync.pos)
}

// optional .proto3.pb_enum result = 3;
inline void MsgNCDismissSync::clear_result() {
  result_ = 0;
}
inline ::proto3::pb_enum MsgNCDismissSync::result() const {
  // @@protoc_insertion_point(field_get:proto3.MsgNCDismissSync.result)
  return static_cast< ::proto3::pb_enum >(result_);
}
inline void MsgNCDismissSync::set_result(::proto3::pb_enum value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:proto3.MsgNCDismissSync.result)
}

// -------------------------------------------------------------------

// MsgCNDismissAck

// optional .proto3.pb_msg mid = 1;
inline void MsgCNDismissAck::clear_mid() {
  mid_ = 0;
}
inline ::proto3::pb_msg MsgCNDismissAck::mid() const {
  // @@protoc_insertion_point(field_get:proto3.MsgCNDismissAck.mid)
  return static_cast< ::proto3::pb_msg >(mid_);
}
inline void MsgCNDismissAck::set_mid(::proto3::pb_msg value) {
  
  mid_ = value;
  // @@protoc_insertion_point(field_set:proto3.MsgCNDismissAck.mid)
}

// -------------------------------------------------------------------

// MsgNCDismissAck

// optional .proto3.pb_msg mid = 1;
inline void MsgNCDismissAck::clear_mid() {
  mid_ = 0;
}
inline ::proto3::pb_msg MsgNCDismissAck::mid() const {
  // @@protoc_insertion_point(field_get:proto3.MsgNCDismissAck.mid)
  return static_cast< ::proto3::pb_msg >(mid_);
}
inline void MsgNCDismissAck::set_mid(::proto3::pb_msg value) {
  
  mid_ = value;
  // @@protoc_insertion_point(field_set:proto3.MsgNCDismissAck.mid)
}

// optional int32 pos = 2;
inline void MsgNCDismissAck::clear_pos() {
  pos_ = 0;
}
inline ::google::protobuf::int32 MsgNCDismissAck::pos() const {
  // @@protoc_insertion_point(field_get:proto3.MsgNCDismissAck.pos)
  return pos_;
}
inline void MsgNCDismissAck::set_pos(::google::protobuf::int32 value) {
  
  pos_ = value;
  // @@protoc_insertion_point(field_set:proto3.MsgNCDismissAck.pos)
}

// optional .proto3.pb_enum result = 3;
inline void MsgNCDismissAck::clear_result() {
  result_ = 0;
}
inline ::proto3::pb_enum MsgNCDismissAck::result() const {
  // @@protoc_insertion_point(field_get:proto3.MsgNCDismissAck.result)
  return static_cast< ::proto3::pb_enum >(result_);
}
inline void MsgNCDismissAck::set_result(::proto3::pb_enum value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:proto3.MsgNCDismissAck.result)
}

// -------------------------------------------------------------------

// MsgNCSettle

// optional .proto3.pb_msg mid = 1;
inline void MsgNCSettle::clear_mid() {
  mid_ = 0;
}
inline ::proto3::pb_msg MsgNCSettle::mid() const {
  // @@protoc_insertion_point(field_get:proto3.MsgNCSettle.mid)
  return static_cast< ::proto3::pb_msg >(mid_);
}
inline void MsgNCSettle::set_mid(::proto3::pb_msg value) {
  
  mid_ = value;
  // @@protoc_insertion_point(field_set:proto3.MsgNCSettle.mid)
}

// repeated .proto3.play_t play = 2;
inline int MsgNCSettle::play_size() const {
  return play_.size();
}
inline void MsgNCSettle::clear_play() {
  play_.Clear();
}
inline const ::proto3::play_t& MsgNCSettle::play(int index) const {
  // @@protoc_insertion_point(field_get:proto3.MsgNCSettle.play)
  return play_.Get(index);
}
inline ::proto3::play_t* MsgNCSettle::mutable_play(int index) {
  // @@protoc_insertion_point(field_mutable:proto3.MsgNCSettle.play)
  return play_.Mutable(index);
}
inline ::proto3::play_t* MsgNCSettle::add_play() {
  // @@protoc_insertion_point(field_add:proto3.MsgNCSettle.play)
  return play_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto3::play_t >*
MsgNCSettle::mutable_play() {
  // @@protoc_insertion_point(field_mutable_list:proto3.MsgNCSettle.play)
  return &play_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto3::play_t >&
MsgNCSettle::play() const {
  // @@protoc_insertion_point(field_list:proto3.MsgNCSettle.play)
  return play_;
}

// repeated int32 pile = 3;
inline int MsgNCSettle::pile_size() const {
  return pile_.size();
}
inline void MsgNCSettle::clear_pile() {
  pile_.Clear();
}
inline ::google::protobuf::int32 MsgNCSettle::pile(int index) const {
  // @@protoc_insertion_point(field_get:proto3.MsgNCSettle.pile)
  return pile_.Get(index);
}
inline void MsgNCSettle::set_pile(int index, ::google::protobuf::int32 value) {
  pile_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto3.MsgNCSettle.pile)
}
inline void MsgNCSettle::add_pile(::google::protobuf::int32 value) {
  pile_.Add(value);
  // @@protoc_insertion_point(field_add:proto3.MsgNCSettle.pile)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
MsgNCSettle::pile() const {
  // @@protoc_insertion_point(field_list:proto3.MsgNCSettle.pile)
  return pile_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
MsgNCSettle::mutable_pile() {
  // @@protoc_insertion_point(field_mutable_list:proto3.MsgNCSettle.pile)
  return &pile_;
}

// optional .proto3.pb_enum result = 4;
inline void MsgNCSettle::clear_result() {
  result_ = 0;
}
inline ::proto3::pb_enum MsgNCSettle::result() const {
  // @@protoc_insertion_point(field_get:proto3.MsgNCSettle.result)
  return static_cast< ::proto3::pb_enum >(result_);
}
inline void MsgNCSettle::set_result(::proto3::pb_enum value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:proto3.MsgNCSettle.result)
}

// -------------------------------------------------------------------

// MsgNCFinish

// optional .proto3.pb_msg mid = 1;
inline void MsgNCFinish::clear_mid() {
  mid_ = 0;
}
inline ::proto3::pb_msg MsgNCFinish::mid() const {
  // @@protoc_insertion_point(field_get:proto3.MsgNCFinish.mid)
  return static_cast< ::proto3::pb_msg >(mid_);
}
inline void MsgNCFinish::set_mid(::proto3::pb_msg value) {
  
  mid_ = value;
  // @@protoc_insertion_point(field_set:proto3.MsgNCFinish.mid)
}

// repeated .proto3.play_t play = 2;
inline int MsgNCFinish::play_size() const {
  return play_.size();
}
inline void MsgNCFinish::clear_play() {
  play_.Clear();
}
inline const ::proto3::play_t& MsgNCFinish::play(int index) const {
  // @@protoc_insertion_point(field_get:proto3.MsgNCFinish.play)
  return play_.Get(index);
}
inline ::proto3::play_t* MsgNCFinish::mutable_play(int index) {
  // @@protoc_insertion_point(field_mutable:proto3.MsgNCFinish.play)
  return play_.Mutable(index);
}
inline ::proto3::play_t* MsgNCFinish::add_play() {
  // @@protoc_insertion_point(field_add:proto3.MsgNCFinish.play)
  return play_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto3::play_t >*
MsgNCFinish::mutable_play() {
  // @@protoc_insertion_point(field_mutable_list:proto3.MsgNCFinish.play)
  return &play_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto3::play_t >&
MsgNCFinish::play() const {
  // @@protoc_insertion_point(field_list:proto3.MsgNCFinish.play)
  return play_;
}

// optional .proto3.pb_enum result = 3;
inline void MsgNCFinish::clear_result() {
  result_ = 0;
}
inline ::proto3::pb_enum MsgNCFinish::result() const {
  // @@protoc_insertion_point(field_get:proto3.MsgNCFinish.result)
  return static_cast< ::proto3::pb_enum >(result_);
}
inline void MsgNCFinish::set_result(::proto3::pb_enum value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:proto3.MsgNCFinish.result)
}

// -------------------------------------------------------------------

// MsgCNStats

// optional .proto3.pb_msg mid = 1;
inline void MsgCNStats::clear_mid() {
  mid_ = 0;
}
inline ::proto3::pb_msg MsgCNStats::mid() const {
  // @@protoc_insertion_point(field_get:proto3.MsgCNStats.mid)
  return static_cast< ::proto3::pb_msg >(mid_);
}
inline void MsgCNStats::set_mid(::proto3::pb_msg value) {
  
  mid_ = value;
  // @@protoc_insertion_point(field_set:proto3.MsgCNStats.mid)
}

// optional string key = 2;
inline void MsgCNStats::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgCNStats::key() const {
  // @@protoc_insertion_point(field_get:proto3.MsgCNStats.key)
  return key_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgCNStats::set_key(const ::std::string& value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto3.MsgCNStats.key)
}
inline void MsgCNStats::set_key(const char* value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto3.MsgCNStats.key)
}
inline void MsgCNStats::set_key(const char* value, size_t size) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto3.MsgCNStats.key)
}
inline ::std::string* MsgCNStats::mutable_key() {
  
  // @@protoc_insertion_point(field_mutable:proto3.MsgCNStats.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgCNStats::release_key() {
  // @@protoc_insertion_point(field_release:proto3.MsgCNStats.key)
  
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgCNStats::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    
  } else {
    
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:proto3.MsgCNStats.key)
}

// optional string value = 3;
inline void MsgCNStats::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgCNStats::value() const {
  // @@protoc_insertion_point(field_get:proto3.MsgCNStats.value)
  return value_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgCNStats::set_value(const ::std::string& value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto3.MsgCNStats.value)
}
inline void MsgCNStats::set_value(const char* value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto3.MsgCNStats.value)
}
inline void MsgCNStats::set_value(const char* value, size_t size) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto3.MsgCNStats.value)
}
inline ::std::string* MsgCNStats::mutable_value() {
  
  // @@protoc_insertion_point(field_mutable:proto3.MsgCNStats.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgCNStats::release_value() {
  // @@protoc_insertion_point(field_release:proto3.MsgCNStats.value)
  
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgCNStats::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    
  } else {
    
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:proto3.MsgCNStats.value)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto3

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::proto3::pb_enum> : ::google::protobuf::internal::true_type {};
template <> struct is_proto_enum< ::proto3::pb_msg> : ::google::protobuf::internal::true_type {};

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_protocol_2eproto__INCLUDED
